T-05 Node Resolver Contract & Dispatcher
Goal â€“ Define pluggable resolver pattern.

Files

scopeDsl/nodes/nodeResolver.js

scopeDsl/nodes/dispatcher.js

tests/nodes/dispatcher.test.js

new error errors/unknownAstNodeError.js

Contract (JSDoc only, no TypeScript):

js
/**

A resolver decides if it can handle a node and returns a Set of IDs.
@typedef {{ canResolve(node:Object):boolean, resolve(node:Object, ctx:Object):Set }} NodeResolver
*/
Dispatcher
import UnknownAstNodeError from '../../errors/unknownAstNodeError.js';

export default function createDispatcher(resolvers) {
return {
resolve(node, ctx) {
const r = resolvers.find(x => x.canResolve(node));
if (!r) throw new UnknownAstNodeError(node.type);
return r.resolve(node, ctx);
}
};
}
Tests

Supplies two fake resolvers, asserts correct one used.

Asserts UnknownAstNodeError thrown when none match.