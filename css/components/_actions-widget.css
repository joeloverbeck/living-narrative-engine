/* css/components/_actions-widget.css */

/* --- Actions Widget: Layout for Action Buttons --- */

/*
  Layout styles for the #actions-widget, specifically how buttons
  are arranged within its #action-buttons child (e.g., flex properties).
  The appearance of the buttons themselves is handled by _buttons.css.
  Common widget container styles are from _widgets-base.css.
*/

/* Limit the height of the actions widget to prevent it from shrinking the chat panel */
#actions-widget {
  max-height: 30vh;
  /* Maximum 30% of viewport height */
  max-height: min(30vh, 250px);
  /* Use the smaller of 30vh or 250px */
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  /* Prevent the widget from shrinking */
}

#action-buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  /* Aligns buttons to the start of the container */
  overflow-y: auto;
  /* Enable vertical scrolling when content exceeds container height */
  flex: 1;
  /* Take up remaining space in the actions widget */
  min-height: 0;
  /* Allow the container to shrink properly for scrolling */
}

/* Context-specific button sizing/margin within the actions widget */
#action-buttons button {
  width: auto;
  /* Allow buttons to size based on their content */
}

@media (prefers-reduced-motion: no-preference) {
  #action-buttons.actions-fade-in {
    animation: actionsFadeIn 250ms ease-out both;
  }

  #action-buttons.actions-fade-out {
    animation: actionsFadeOut 250ms ease-in both;
  }

  #action-buttons.actions-fade-in button.action-button {
    animation: actionButtonIntro 250ms ease-out both;
    animation-delay: calc(var(--i, 0) * 70ms);
  }

  #action-buttons.actions-fade-out button.action-button {
    animation: actionButtonOutro 250ms ease-in both;
    animation-delay: calc(var(--i, 0) * 70ms);
  }

  @keyframes actionsFadeIn {
    from {
      opacity: 0;
      transform: scale(0.96);
    }

    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes actionsFadeOut {
    from {
      opacity: 1;
      transform: scale(1);
    }

    to {
      opacity: 0;
      transform: scale(0.96);
    }
  }

  @keyframes actionButtonIntro {
    from {
      opacity: 0;
      transform: scale(0.5);
    }

    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes actionButtonOutro {
    from {
      opacity: 1;
      transform: scale(1);
    }

    to {
      opacity: 0;
      transform: scale(0.5);
    }
  }
}

#action-buttons.actions-disabled {
  background-color: var(--secondary-bg-color);
  opacity: 0.6;
  pointer-events: none;
  position: relative;
  min-height: 3rem;
}

#action-buttons.actions-disabled::after {
  content: 'WAIT FOR YOUR TURN';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--secondary-text-color);
  font-weight: 600;
  pointer-events: none;
}

/* --- Namespace Grouping Styles --- */

/* Action Section Headers */
.action-section-header {
  font-weight: bold;
  font-size: 0.9em;
  color: var(--text-muted);
  margin: 0.8em 0 0.4em 0;
  padding: 0.2em 0;
  border-bottom: 1px solid var(--border-light);
  letter-spacing: 0.5px;
  flex-basis: 100%;
  /* Force full width in flex container */
}

.action-section-header:first-child {
  margin-top: 0.2em;
}

/* Action Groups */
.action-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5em;
  margin-bottom: 1em;
  width: 100%;
  /* Ensure full width in flex container */
}

.action-group:last-child {
  margin-bottom: 0;
}

/* Action Buttons within Groups */
.action-group .action-button {
  min-width: auto;
  margin: 0;
  /* Remove default margins since gap handles spacing */
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .action-group {
    flex-direction: column;
    gap: 0.3em;
  }

  .action-section-header {
    font-size: 0.8em;
    margin: 0.6em 0 0.3em 0;
  }
}

/* Accessibility Enhancements */
.action-section-header:focus {
  outline: 2px solid var(--focus-color);
  outline-offset: 2px;
}

/* Animation Support for Grouped Actions */
.action-group {
  transition: opacity 0.2s ease-in-out;
}

#action-buttons.actions-fade-in .action-group {
  animation: fadeInGroup 0.3s ease-in-out;
}

@keyframes fadeInGroup {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Theme-ready custom action buttons */
.action-button-custom-visual {
  /* Use CSS custom properties that can be overridden when themes are added */
  background-color: var(--custom-bg-color);
  color: var(--custom-text-color);
  border-color: var(--custom-border-color);

  /* Theme-aware properties with fallbacks */
  --selection-color: var(--theme-selection-color, #0066cc);
  --focus-color: var(--theme-focus-color, #0066cc);
  --disabled-opacity: var(--theme-disabled-opacity, 0.5);

  transition:
    background-color 0.15s ease,
    color 0.15s ease,
    border-color 0.15s ease;
}

/* Theme-aware button marker */
.theme-aware-button {
  /* Ready for future theme system */
  position: relative;
}

/* Selected state with custom colors */
.action-button-custom-visual.selected {
  box-shadow:
    inset 0 0 0 2px var(--selection-color),
    0 0 4px var(--selection-color);
}

/* Hover state enhancement */
.action-button-custom-visual.action-button-hovering {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Contrast warning indicator for developers */
.action-button-custom-visual.contrast-warning {
  position: relative;
}

.action-button-custom-visual.contrast-warning::after {
  content: 'âš ';
  position: absolute;
  top: -8px;
  right: -8px;
  width: 16px;
  height: 16px;
  background: #ff9800;
  color: white;
  border-radius: 50%;
  font-size: 12px;
  line-height: 16px;
  text-align: center;
  pointer-events: none;
  display: none;
  /* Hidden in production, shown in dev mode */
}

/* Show contrast warnings in development */
body[data-dev-mode='true'] .action-button-custom-visual.contrast-warning::after {
  display: block;
}

/* Prepare structure for future theme variants */
:root {
  /* Default theme values */
  --theme-selection-color: #0066cc;
  --theme-focus-color: #0066cc;
  --theme-disabled-opacity: 0.5;

  /* These will be used when theme system is implemented */
  --theme-background: #ffffff;
  --theme-text: #333333;
  --theme-border: #cccccc;
}

/* Note: Styles for specific button states within #action-buttons
   (e.g., #action-buttons button.selected, #action-buttons button.selected:hover)
   should remain in the main style.css or be moved to _buttons.css
   if they are more about button appearance than action-widget layout.
   For this refactor, only the direct layout of #action-buttons and
   the base sizing/margin for buttons *within* it are moved here.
*/

/* --- Hover State Management (ACTBUTVIS-008) --- */

/* Hover state for action buttons with custom visual */
.action-button-hovering {
  /* This class is applied programmatically during hover for custom hover colors */
  /* The actual colors are applied via inline styles in JavaScript */
  transition:
    background-color 0.15s ease-in-out,
    color 0.15s ease-in-out;
}

/* Disabled state for action buttons */
.action-button-disabled {
  opacity: 0.6;
  cursor: not-allowed !important;
  pointer-events: none;
}

/* Ensure smooth transitions for hover states */
.action-button-custom-visual.action-button-hovering {
  /* Faster transition for hover responsiveness */
  transition-duration: 0.15s;
}