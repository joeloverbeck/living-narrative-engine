SystemLogicInterpreter: createJsonLogicContext: Creating JsonLogicEvaluationContext for event type [core:turn_started]. ActorID: [p_erotica:iker_aguirre_instance], TargetID: [None]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found actor entity [p_erotica:iker_aguirre_instance]. Creating context entry.
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: ComponentAccessor: Creating accessor for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: ComponentAccessor: Entity [p_erotica:iker_aguirre_instance] found in EntityManager
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: No targetId provided, target context remains null.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:turn_started] createNestedExecutionContext returned a valid ExecutionContext.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:turn_started] Final ExecutionContext (nested structure) assembled successfully.
consoleLogger.js:187 SystemLogicInterpreter: [Rule turn_started] No condition defined or condition is empty. Defaulting to passed.
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'turn_started' - Action 1/1] About to execute operation of type: ADD_COMPONENT
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: ComponentAccessor: Attempting to get component [core:name] for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: ComponentAccessor: Component [core:name] found for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.entityId} to: p_erotica:iker_aguirre_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "ADD_COMPONENT"…
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... 
{entity: Entity, componentTypeId: 'core:current_actor', componentData: {…}, oldComponentData: undefined}
consoleLogger.js:187 Successfully added/updated component 'core:current_actor' data on entity 'p_erotica:iker_aguirre_instance'.
consoleLogger.js:187 SystemLogicInterpreter: ADD_COMPONENT: Successfully added/replaced component "core:current_actor" on entity "p_erotica:iker_aguirre_instance".
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'turn_started' - Action 1/1] Finished executing operation of type: ADD_COMPONENT
consoleLogger.js:187 [renderListCommon] Fetched list data. Count: 0
consoleLogger.js:187 [renderListCommon] Cleared list container.
consoleLogger.js:187 [renderListCommon] Empty list message displayed.
consoleLogger.js:187 [PerceptionLogRenderer] _onListRendered called. Scrolling to bottom.
consoleLogger.js:187 VED: Event 'core:component_added' dispatch successful.
consoleLogger.js:187 VED: Event 'core:turn_started' dispatch successful.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:component_added'.
consoleLogger.js:187 VED: Validating payload for event 'core:turn_processing_started' against schema 'core:turn_processing_started#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:turn_processing_started'.
consoleLogger.js:187 VED: Dispatching event 'core:turn_processing_started' via EventBus... 
{entityId: 'p_erotica:iker_aguirre_instance', actorType: 'player'}
consoleLogger.js:187 VED: Event 'core:turn_processing_started' dispatch successful.
consoleLogger.js:187 Resolving turn handler for entity p_erotica:iker_aguirre_instance...
consoleLogger.js:187 TurnHandlerResolver: Resolving handler for actor p_erotica:iker_aguirre_instance...
consoleLogger.js:187 Match found for actor p_erotica:iker_aguirre_instance. Applying rule: 'Player'.
consoleLogger.js:187 TurnHandlerResolver: Creating new PlayerHandler for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 CommandProcessor: Instance created and dependencies validated.
consoleLogger.js:187 CommandOutcomeInterpreter: Instance created successfully.
consoleLogger.js:187 PromptCoordinator initialised.
consoleLogger.js:187 PerceptionLogFormatter initialized.
consoleLogger.js:187 GameStateValidationServiceForPrompting initialized.
consoleLogger.js:187 AIPromptContentProvider initialized with new services.
consoleLogger.js:187 LlmConfigManager: Initializing...
consoleLogger.js:187 LlmConfigManager: Configuration source identifier set to: ./config/llm-configs.json. Configurations will be loaded on demand.
consoleLogger.js:187 LlmConfigManager: Initialization complete.
consoleLogger.js:187 AssemblerRegistry: Registered StandardElementAssembler for 9 keys.
consoleLogger.js:187 AssemblerRegistry: Registered all specialized assemblers.
consoleLogger.js:187 PromptBuilder (orchestrator‑only) initialised with LlmConfigManager, PlaceholderResolver, AssemblerRegistry and ConditionEvaluator.
consoleLogger.js:187 AvailableActionsProvider: AvailableActionsProvider initialized and dependencies validated.
consoleLogger.js:187 TurnActionChoicePipeline initialised
consoleLogger.js:187 ActorTurnHandler initial state set to: TurnIdleState. EnterState will be called on first transition or explicit start.
consoleLogger.js:187 ActorTurnHandler initialised. Dependencies assigned. Initial state set.
consoleLogger.js:187 Calling startTurn on ActorTurnHandler for entity p_erotica:iker_aguirre_instance
turnManager.js:449 TurnManager: handler = 
ActorTurnHandler {_logger: ConsoleLogger, #turnEndPort: EventBusTurnEndAdapter, #strategyFactory: ActorAwareStrategyFactory, #turnContextBuilder: TurnContextBuilder, #awaitState: _AwaitTurnEndState, …}
 handler.startTurn = function
consoleLogger.js:187 ActorTurnHandler.startTurn called for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 ActorAwareStrategyFactory: Creating GenericTurnStrategy for p_erotica:iker_aguirre_instance using provider type human.
consoleLogger.js:187 ActorTurnHandler: Instantiated turn strategy for actor p_erotica:iker_aguirre_instance via factory.
consoleLogger.js:187 TurnContextBuilder: Building context for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 ActorTurnHandler._setCurrentTurnContextInternal: Setting turn context to object for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 ActorTurnHandler._setCurrentTurnContextInternal: Aligning _currentActor ('null') with new TurnContext actor ('p_erotica:iker_aguirre_instance').
consoleLogger.js:187 ActorTurnHandler.startTurn: TurnContext created for actor p_erotica:iker_aguirre_instance via builder.
consoleLogger.js:187 TurnIdleState: Received startTurn for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 TurnIdleState: ITurnContext confirmed for actor p_erotica:iker_aguirre_instance. Transitioning to AwaitingActorDecisionState.
consoleLogger.js:187 ActorTurnHandler: Received request to transition to AwaitingInput state.
consoleLogger.js:187 ActorTurnHandler: State Transition: TurnIdleState → AwaitingActorDecisionState
consoleLogger.js:187 ActorTurnHandler.onExitState hook: Exiting TurnIdleState to AwaitingActorDecisionState
consoleLogger.js:187 Turn initiation for p_erotica:iker_aguirre_instance started via ActorTurnHandler. TurnManager now WAITING for 'core:turn_ended' event.
consoleLogger.js:187 TurnIdleState: Exiting. Actor: p_erotica:iker_aguirre_instance. Transitioning to AwaitingActorDecisionState.
consoleLogger.js:187 ActorTurnHandler.onEnterState hook: Entering AwaitingActorDecisionState from TurnIdleState
consoleLogger.js:187 GameSessionManager.finalizeNewGameSuccess: New game started and ready (World: p_erotica:donostia).
consoleLogger.js:187 AwaitingActorDecisionState: Entered. Actor: p_erotica:iker_aguirre_instance. Previous state: TurnIdleState.
consoleLogger.js:187 Bootstrap Stage: Start Game: Game started successfully with world: p_erotica:donostia.
consoleLogger.js:187 Bootstrap Stage: Start Game completed.
consoleLogger.js:187 AwaitingActorDecisionState: Actor p_erotica:iker_aguirre_instance. Attempting to retrieve turn strategy.
consoleLogger.js:187 AwaitingActorDecisionState: Strategy GenericTurnStrategy obtained for actor p_erotica:iker_aguirre_instance. Requesting action decision.
consoleLogger.js:187 [ChoicePipeline] Fetching actions for p_erotica:iker_aguirre_instance
consoleLogger.js:187 New turn detected. Clearing AvailableActionsProvider cache.
consoleLogger.js:187 [Cache Miss] Discovering actions for actor p_erotica:iker_aguirre_instance
consoleLogger.js:187 ActionIndex: Retrieved 4 candidate actions for actor p_erotica:iker_aguirre_instance.
consoleLogger.js:187 Formatting command for action: core:wait, template: "wait", targetType: none
consoleLogger.js:187  -> No target type, using template as is.
consoleLogger.js:187  <- Final formatted command: "wait"
consoleLogger.js:187 ActionValidationContextBuilder: ActionValidationContextBuilder: Building context for action 'core:follow', actor 'p_erotica:iker_aguirre_instance'. Only actor context is included as target filtering is handled by Scope DSL.
consoleLogger.js:187 ActionValidationContextBuilder: buildActorContext: Building context for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 ActionValidationContextBuilder: buildActorContext: Entity [p_erotica:iker_aguirre_instance] found in EntityManager
consoleLogger.js:187 ActionValidationContextBuilder: buildActorContext: Entity [p_erotica:iker_aguirre_instance] has core:name component
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Creating accessor for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Entity [p_erotica:iker_aguirre_instance] found in EntityManager
consoleLogger.js:187 ActionValidationContextBuilder: buildActorContext: Created context for entity [p_erotica:iker_aguirre_instance] with id: p_erotica:iker_aguirre_instance
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]: Evaluation Context Built Successfully.
consoleLogger.js:163 PrerequisiteEvaluationService: PrereqEval[core:follow]: WARNING - Actor has EMPTY components object. This likely means the entity [p_erotica:iker_aguirre_instance] was not properly loaded.
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Attempting to get component [toJSON] for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Component [toJSON] returned undefined for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow] Context: {
  "actor": {
    "id": "p_erotica:iker_aguirre_instance",
    "components": {}
  }
}
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]: Evaluating 2 prerequisite rule(s)...
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]: Resolving condition_ref 'core:actor-is-not-rooted'...
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]:   - Evaluating resolved rule: {"==":[{"var":"actor.components.core:movement.locked"},false]}
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"==":[{"var":"actor.components.core:movement.locked"},false]}. Context keys: actor
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Attempting to get component [core:movement] for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Component [core:movement] found for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: true, Final boolean: true
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]:   - Prerequisite Rule 1/2 PASSED.
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]: Resolving condition_ref 'core:actor-is-following'...
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]:   - Evaluating resolved rule: {"not":{"!!":{"var":"actor.components.core:following"}}}
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"not":{"!!":{"var":"actor.components.core:following"}}}. Context keys: actor
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Attempting to get component [core:following] for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 ActionValidationContextBuilder: ComponentAccessor: Component [core:following] returned undefined for entity [p_erotica:iker_aguirre_instance]
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: true, Final boolean: true
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]:   - Prerequisite Rule 2/2 PASSED.
consoleLogger.js:187 PrerequisiteEvaluationService: PrereqEval[core:follow]: → PASSED (All 2 prerequisite rules evaluated successfully).
consoleLogger.js:187 ScopeCache: Cache miss for key: p_erotica:iker_aguirre_instance:p_erotica:outside_tables_coffee_shop_instance:{"type":"Filter","logic":{"and":[{"condition_ref":"core:entity-at-location"},{"condition_ref":"core:entity-is-not-current-actor"},{"condition_ref":"core:entity-has-actor-component"},{"not":{"condition_ref":"core:entity-is-following-actor"}}]},"parent":{"type":"Source","kind":"entities","param":"core:position"}}, resolving...
consoleLogger.js:187 EntityManager.getEntitiesWithComponent: Found 2 entities with component 'core:position'.
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:entity-at-location'...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:entity-is-not-current-actor'...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:entity-has-actor-component'...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:entity-is-following-actor'...
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"and":[{"==":[{"var":"entity.components.core:position.locationId"},{"var":"location.id"}]},{"!=":[{"var":"entity.id"},{"var":"actor.id"}]},{"!!":{"va.... Context keys: entity, actor, location
consoleLogger.js:187 JsonLogicEvaluationService: Detailed evaluation of AND operation with 4 conditions:
consoleLogger.js:187 JsonLogicEvaluationService:   Condition 1/4: {"==":[{"var":"entity.components.core:position.locationId"},{"var":"location.id"}]} => true
consoleLogger.js:187 JsonLogicEvaluationService:     Entity: p_erotica:iker_aguirre_instance, Location: p_erotica:outside_tables_coffee_shop_instance
consoleLogger.js:187 JsonLogicEvaluationService:     Actor: p_erotica:iker_aguirre_instance, Location: p_erotica:outside_tables_coffee_shop_instance
consoleLogger.js:187 JsonLogicEvaluationService:     Location: p_erotica:outside_tables_coffee_shop_instance
consoleLogger.js:187 JsonLogicEvaluationService:   Condition 2/4: {"!=":[{"var":"entity.id"},{"var":"actor.id"}]} => false
consoleLogger.js:187 JsonLogicEvaluationService:     Entity: p_erotica:iker_aguirre_instance, Location: p_erotica:outside_tables_coffee_shop_instance
﻿