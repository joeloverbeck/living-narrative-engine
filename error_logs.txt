Plan to Fix Thematic Directions Generation Issue                                        │ │
│ │                                                                                         │ │
│ │ Root Cause Identified                                                                   │ │
│ │                                                                                         │ │
│ │ The thematic directions generation is failing because:                                  │ │
│ │ 1. The OpenRouterToolCallingStrategy is hardcoded to use                                │ │
│ │ OPENROUTER_GAME_AI_ACTION_SPEECH_SCHEMA for ALL tool calling operations                 │ │
│ │ 2. This schema is designed for game turn actions with fields like actionDefinitionId,   │ │
│ │ commandString, speech, thoughts                                                         │ │
│ │ 3. The thematic directions generator expects a response with a thematicDirections array │ │
│ │ 4. The LLM is being instructed to return game action data instead of thematic           │ │
│ │ directions data                                                                         │ │
│ │                                                                                         │ │
│ │ Solution Strategy                                                                       │ │
│ │                                                                                         │ │
│ │ Option 1: Update OpenRouterToolCallingStrategy (Recommended)                            │ │
│ │                                                                                         │ │
│ │ 1. Modify the strategy to accept custom tool schemas from the LLM configuration         │ │
│ │ 2. Add support for a toolSchema field in the jsonOutputStrategy configuration           │ │
│ │ 3. Fall back to the game AI schema only when no custom schema is provided               │ │
│ │                                                                                         │ │
│ │ Option 2: Use JSON Schema Strategy Instead                                              │ │
│ │                                                                                         │ │
│ │ 1. Switch character builder to use openrouter_json_schema instead of                    │ │
│ │ openrouter_tool_calling                                                                 │ │
│ │ 2. This would use the schema directly without the tool calling wrapper                  │ │
│ │ 3. Less reliable than tool calling but would work immediately                           │ │
│ │                                                                                         │ │
│ │ Implementation Plan (Option 1 - Recommended)                                            │ │
│ │                                                                                         │ │
│ │ 1. Update LLM Config Schema                                                             │ │
│ │                                                                                         │ │
│ │ File: data/schemas/llm-configs.schema.json                                              │ │
│ │ - Add toolSchema field to jsonOutputStrategy for tool calling methods                   │ │
│ │ - Make it optional but recommended for tool calling strategies                          │ │
│ │                                                                                         │ │
│ │ 2. Update OpenRouterToolCallingStrategy                                                 │ │
│ │                                                                                         │ │
│ │ File: src/llms/strategies/openRouterToolCallingStrategy.js                              │ │
│ │ - Modify _buildProviderRequestPayloadAdditions to:                                      │ │
│ │   - Check for llmConfig.jsonOutputStrategy.toolSchema                                   │ │
│ │   - Use custom schema if provided                                                       │ │
│ │   - Fall back to OPENROUTER_GAME_AI_ACTION_SPEECH_SCHEMA for backward compatibility     │ │
│ │ - Update tool description to be configurable as well                                    │ │
│ │                                                                                         │ │
│ │ 3. Update Thematic Directions Prompt                                                    │ │
│ │                                                                                         │ │
│ │ File: src/characterBuilder/prompts/thematicDirectionsPrompt.js                          │ │
│ │ - Modify createThematicDirectionsLlmConfig to include the tool schema:                  │ │
│ │ jsonOutputStrategy: {                                                                   │ │
│ │   method: 'openrouter_tool_calling',                                                    │ │
│ │   toolName: 'function_call',                                                            │ │
│ │   toolSchema: THEMATIC_DIRECTIONS_RESPONSE_SCHEMA,                                      │ │
│ │   toolDescription: 'Generate thematic directions for character development'             │ │
│ │ }                                                                                       │ │
│ │                                                                                         │ │
│ │ 4. Update Character Builder Service                                                     │ │
│ │                                                                                         │ │
│ │ File: src/characterBuilder/services/thematicDirectionGenerator.js                       │ │
│ │ - Ensure it uses the enhanced LLM config with the custom schema                         │ │
│ │ - Add error logging to show what schema is being used                                   │ │
│ │                                                                                         │ │
│ │ 5. Create Test Suite                                                                    │ │
│ │                                                                                         │ │
│ │ Files to create:                                                                        │ │
│ │ - tests/unit/characterBuilder/services/thematicDirectionGenerator.test.js               │ │
│ │ - tests/integration/characterBuilder/thematicDirectionGeneration.integration.test.js    │ │
│ │ - Test that the correct schema is being used                                            │ │
│ │ - Test response parsing and validation                                                  │ │
│ │                                                                                         │ │
│ │ Alternative Quick Fix (Option 2)                                                        │ │
│ │                                                                                         │ │
│ │ If we need a quick fix without modifying the core strategy:                             │ │
│ │                                                                                         │ │
│ │ 1. Create a new LLM configuration specifically for character builder:                   │ │
│ │ "character-builder-claude": {                                                           │ │
│ │   "configId": "character-builder-claude",                                               │ │
│ │   "displayName": "Claude for Character Builder",                                        │ │
│ │   "apiKeyEnvVar": "OPENROUTER_API_KEY_ENV_VAR",                                         │ │
│ │   "endpointUrl": "https://openrouter.ai/api/v1/chat/completions",                       │ │
│ │   "modelIdentifier": "anthropic/claude-sonnet-4",                                       │ │
│ │   "apiType": "openrouter",                                                              │ │
│ │   "jsonOutputStrategy": {                                                               │ │
│ │     "method": "openrouter_json_schema",                                                 │ │
│ │     "jsonSchema": { /* thematic directions schema */ }                                  │ │
│ │   }                                                                                     │ │
│ │ }                                                                                       │ │
│ │ 2. Update character builder to use this specific configuration                          │ │
│ │                                                                                         │ │
│ │ Benefits of Option 1                                                                    │ │
│ │                                                                                         │ │
│ │ - Maintains the reliability of tool calling                                             │ │
│ │ - Makes the system more flexible for future use cases                                   │ │
│ │ - Follows the principle that both JSON schema and tool calling should work with the     │ │
│ │ same schemas                                                                            │ │
│ │ - Backward compatible with existing game AI usage                                       │ │
│ │                                                                                         │ │
│ │ Would you like me to proceed with implementing Option 1 (the recommended approach)?