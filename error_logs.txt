SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 2/2] About to execute operation of type: ADD_PERCEPTION_LOG_ENTRY
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.locationId} to: isekai:adventurers_guild_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.descriptionText} to: Joel Overberus says: "aa"
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.timestamp} to: 2025-07-08T19:46:12.807Z
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.perceptionType} to: speech_local
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: null
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.involvedEntities} to: []
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "ADD_PERCEPTION_LOG_ENTRY"…
consoleLogger.js:163 EntityQueryManager.hasComponent: The 3-parameter version is deprecated. Use hasComponentOverride(instanceId, componentTypeId) instead of hasComponent(instanceId, componentTypeId, true).
warn @ consoleLogger.js:163
hasComponent @ EntityQueryManager.js:136
hasComponent @ entityManager.js:437
hasComponent @ entityManagerAdapter.js:53
execute @ addPerceptionLogEntryHandler.js:105
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
execute @ dispatchPerceptibleEventHandler.js:155
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
handleIf @ ifHandler.js:70
executeActionSequence @ actionSequence.js:82
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
dispatchSpeechEvent @ dispatchSpeechEvent.js:30
_dispatchSpeech @ processingCommandState.js:310
_dispatchSpeechIfNeeded @ processingWorkflow.js:242
run @ processingWorkflow.js:85
await in run
enterState @ processingCommandState.js:290
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestProcessingCommandStateTransition @ baseTurnHandler.js:609
requestProcessingCommandStateTransition @ turnContext.js:253
run @ actionDecisionWorkflow.js:62
await in run
_handleActionDecision @ awaitingActorDecisionState.js:102
enterState @ awaitingActorDecisionState.js:119
await in enterState
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestAwaitingInputStateTransition @ baseTurnHandler.js:594
requestAwaitingInputStateTransition @ turnContext.js:249
_requestAwaitingInput @ turnIdleState.js:140
startTurn @ turnIdleState.js:72
startTurn @ genericTurnHandler.js:134
startTurn @ actorTurnHandler.js:64
advanceTurn @ turnManager.js:446
await in advanceTurn
advanceTurn @ turnManager.js:336
await in advanceTurn
start @ turnManager.js:200
#finalizeGameStart @ gameSessionManager.js:146
await in #finalizeGameStart
finalizeNewGameSuccess @ gameSessionManager.js:167
#finalizeInitializationSuccess @ gameEngine.js:280
startNewGame @ gameEngine.js:316
await in startNewGame
startGameStage @ engineStages.js:87
beginGame @ main.js:244
(anonymous) @ game.html:331
Promise.then
(anonymous) @ game.html:328Understand this warning
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:perception_log' to entity 'isekai:hero_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:perception_log', componentData: {…}, oldComponentData: {…}}
consoleLogger.js:187 Successfully added/updated component 'core:perception_log' data on entity 'isekai:hero_instance'.
consoleLogger.js:163 EntityQueryManager.hasComponent: The 3-parameter version is deprecated. Use hasComponentOverride(instanceId, componentTypeId) instead of hasComponent(instanceId, componentTypeId, true).
warn @ consoleLogger.js:163
hasComponent @ EntityQueryManager.js:136
hasComponent @ entityManager.js:437
hasComponent @ entityManagerAdapter.js:53
execute @ addPerceptionLogEntryHandler.js:105
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
execute @ dispatchPerceptibleEventHandler.js:155
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
handleIf @ ifHandler.js:70
executeActionSequence @ actionSequence.js:82
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
dispatchSpeechEvent @ dispatchSpeechEvent.js:30
_dispatchSpeech @ processingCommandState.js:310
_dispatchSpeechIfNeeded @ processingWorkflow.js:242
run @ processingWorkflow.js:85
await in run
enterState @ processingCommandState.js:290
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestProcessingCommandStateTransition @ baseTurnHandler.js:609
requestProcessingCommandStateTransition @ turnContext.js:253
run @ actionDecisionWorkflow.js:62
await in run
_handleActionDecision @ awaitingActorDecisionState.js:102
enterState @ awaitingActorDecisionState.js:119
await in enterState
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestAwaitingInputStateTransition @ baseTurnHandler.js:594
requestAwaitingInputStateTransition @ turnContext.js:249
_requestAwaitingInput @ turnIdleState.js:140
startTurn @ turnIdleState.js:72
startTurn @ genericTurnHandler.js:134
startTurn @ actorTurnHandler.js:64
advanceTurn @ turnManager.js:446
await in advanceTurn
advanceTurn @ turnManager.js:336
await in advanceTurn
start @ turnManager.js:200
#finalizeGameStart @ gameSessionManager.js:146
await in #finalizeGameStart
finalizeNewGameSuccess @ gameSessionManager.js:167
#finalizeInitializationSuccess @ gameEngine.js:280
startNewGame @ gameEngine.js:316
await in startNewGame
startGameStage @ engineStages.js:87
beginGame @ main.js:244
(anonymous) @ game.html:331
Promise.then
(anonymous) @ game.html:328Understand this warning
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:perception_log' to entity 'isekai:ninja_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:perception_log', componentData: {…}, oldComponentData: {…}}
consoleLogger.js:187 Successfully added/updated component 'core:perception_log' data on entity 'isekai:ninja_instance'.
consoleLogger.js:187 SystemLogicInterpreter: ADD_PERCEPTION_LOG_ENTRY: wrote entry to 2/2 perceivers in isekai:adventurers_guild_instance
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 2/2] Finished executing operation of type: ADD_PERCEPTION_LOG_ENTRY
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'entity_speech' IF#2 - Action 2/3] Finished executing operation of type: DISPATCH_PERCEPTIBLE_EVENT
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'entity_speech' IF#2 - Action 3/3] About to execute operation of type: DISPATCH_SPEECH
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.entityId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.speechContent} to: aa
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "DISPATCH_SPEECH"…
consoleLogger.js:187 SystemLogicInterpreter: DISPATCH_SPEECH: dispatching display_speech {payload: {…}}
consoleLogger.js:187 VED: Validating payload for event 'core:display_speech' against schema 'core:display_speech#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:display_speech'.
consoleLogger.js:187 VED: Dispatching event 'core:display_speech' via EventBus... {entityId: 'isekai:hero_instance', speechContent: 'aa', allowHtml: false}
consoleLogger.js:187 [EntityDisplayDataProvider] getEntityPortraitPath: Constructed portrait path for 'isekai:hero_instance': /data/mods/isekai/portraits/hero.png
consoleLogger.js:187 [SpeechBubbleRenderer] Added DOM listener for 'load' on element. {elementPath: 'img.speech-portrait'}
consoleLogger.js:187 [SpeechBubbleRenderer] Added DOM listener for 'error' on element. {elementPath: 'img.speech-portrait'}
consoleLogger.js:187 [SpeechBubbleRenderer] Rendered speech for Joel Overberus (Player).
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'entity_speech' IF#2 - Action 3/3] Finished executing operation of type: DISPATCH_SPEECH
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'entity_speech' - Action 2/2] Finished executing IF operation.
2consoleLogger.js:187 VED: Event 'core:component_added' dispatch successful.
consoleLogger.js:187 VED: Event 'core:perceptible_event' dispatch successful.
consoleLogger.js:187 VED: Event 'core:display_speech' dispatch successful.
consoleLogger.js:187 VED: Event 'core:entity_spoke' dispatch successful.
2consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:component_added'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:perceptible_event'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:entity_spoke'.
consoleLogger.js:187 ProcessingCommandState: Invoking commandProcessor.dispatchAction() for actor isekai:hero_instance, actionId: core:follow.
consoleLogger.js:187 CommandProcessor.dispatchAction: Dispatching pre-resolved action 'core:follow' for actor isekai:hero_instance. {turnAction: {…}}
consoleLogger.js:187 dispatchWithErrorHandling: Attempting dispatch: ATTEMPT_ACTION_ID dispatch for pre-resolved action core:follow ('core:attempt_action')
consoleLogger.js:187 VED: Validating payload for event 'core:attempt_action' against schema 'core:attempt_action#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:attempt_action'.
consoleLogger.js:187 VED: Dispatching event 'core:attempt_action' via EventBus... {eventName: 'core:attempt_action', actorId: 'isekai:hero_instance', actionId: 'core:follow', targetId: 'isekai:ninja_instance', originalInput: 'follow Ninja Ninjason'}
consoleLogger.js:187 SystemLogicInterpreter: Received event: core:attempt_action. Found 5 potential rule(s). {payload: {…}}
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:attempt_action] Assembling execution context via createNestedExecutionContext... (ActorID: isekai:hero_instance, TargetID: isekai:ninja_instance)
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Creating JsonLogicEvaluationContext for event type [core:attempt_action]. ActorID: [isekai:hero_instance], TargetID: [isekai:ninja_instance]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found actor entity [isekai:hero_instance]. Creating context entry.
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found target entity [isekai:ninja_instance]. Creating context entry.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:attempt_action] createNestedExecutionContext returned a valid ExecutionContext.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:attempt_action] Final ExecutionContext (nested structure) assembled successfully.
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_dismiss] Condition found. Evaluating using jsonLogicDataForEval...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:event-is-action-dismiss'...
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"==":[{"var":"event.payload.actionId"},"core:dismiss"]}. Context keys: event, actor, target, context, globals, entities
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: false, Final boolean: false
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_dismiss] Condition evaluation raw result: false
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_dismiss] Condition evaluation final boolean result: false
consoleLogger.js:187 SystemLogicInterpreter: Rule 'handle_dismiss' actions skipped for event 'core:attempt_action' due to condition evaluating to false.
consoleLogger.js:187 SystemLogicInterpreter: [Rule core_handle_follow] Condition found. Evaluating using jsonLogicDataForEval...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'core:event-is-action-follow'...
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"==":[{"var":"event.payload.actionId"},"core:follow"]}. Context keys: event, actor, target, context, globals, entities
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: true, Final boolean: true
consoleLogger.js:187 SystemLogicInterpreter: [Rule core_handle_follow] Condition evaluation raw result: true
consoleLogger.js:187 SystemLogicInterpreter: [Rule core_handle_follow] Condition evaluation final boolean result: true
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' - Action 1/3] About to execute operation of type: CHECK_FOLLOW_CYCLE
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "CHECK_FOLLOW_CYCLE"…
consoleLogger.js:187 SystemLogicInterpreter: CHECK_FOLLOW_CYCLE: Checking cycle for follower=isekai:hero_instance, leader=isekai:ninja_instance
consoleLogger.js:187 SystemLogicInterpreter: CHECK_FOLLOW_CYCLE: Stored result in "cycleCheck": {"success":true,"cycleDetected":false}
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' - Action 1/3] Finished executing operation of type: CHECK_FOLLOW_CYCLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' - Action 2/3] About to execute operation of type: IF
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"var":"context.cycleCheck.cycleDetected"}. Context keys: event, actor, target, context, globals, entities
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: false, Final boolean: false
consoleLogger.js:187 SystemLogicInterpreter: Rule 'core_handle_follow' IF#2 Condition evaluation raw result: false
consoleLogger.js:187 SystemLogicInterpreter: Rule 'core_handle_follow' IF#2 Condition evaluation final boolean result: false
consoleLogger.js:187 SystemLogicInterpreter: [handleIf] else_actions length: 0
consoleLogger.js:187 SystemLogicInterpreter: [handleIf] else_actions: []
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' - Action 2/3] Finished executing IF operation.
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' - Action 3/3] About to execute operation of type: IF
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"not":{"var":"context.cycleCheck.cycleDetected"}}. Context keys: event, actor, target, context, globals, entities
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: true, Final boolean: true
consoleLogger.js:187 SystemLogicInterpreter: Rule 'core_handle_follow' IF#3 Condition evaluation raw result: true
consoleLogger.js:187 SystemLogicInterpreter: Rule 'core_handle_follow' IF#3 Condition evaluation final boolean result: true
consoleLogger.js:187 SystemLogicInterpreter: [handleIf] then_actions length: 12
consoleLogger.js:187 SystemLogicInterpreter: [handleIf] then_actions: [
  {
    "type": "ESTABLISH_FOLLOW_RELATION",
    "parameters": {
      "follower_id": "{event.payload.actorId}",
      "leader_id": "{event.payload.targetId}"
    }
  },
  {
    "type": "GET_NAME",
    "parameters": {
      "entity_ref": "actor",
      "result_variable": "followerName"
    }
  },
  {
    "type": "GET_NAME",
    "parameters": {
      "entity_ref": {
        "entityId": "{event.payload.targetId}"
      },
      "result_variable": "leaderName"
    }
  },
  {
    "type": "QUERY_COMPONENT",
    "comment": "Need the location to tag the perceptible event.",
    "parameters": {
      "entity_ref": "actor",
      "component_type": "core:position",
      "result_variable": "actorPos"
    }
  },
  {
    "type": "SET_VARIABLE",
    "parameters": {
      "variable_name": "logMessage",
      "value": "{context.followerName} is now following {context.leaderName}."
    }
  },
  {
    "type": "SET_VARIABLE",
    "parameters": {
      "variable_name": "locationId",
      "value": "{context.actorPos.locationId}"
    }
  },
  {
    "type": "SET_VARIABLE",
    "parameters": {
      "variable_name": "perceptionType",
      "value": "action_target_general"
    }
  },
  {
    "type": "SET_VARIABLE",
    "parameters": {
      "variable_name": "targetId",
      "value": "{event.payload.targetId}"
    }
  },
  {
    "type": "GET_TIMESTAMP",
    "parameters": {
      "result_variable": "nowIso"
    }
  },
  {
    "type": "DISPATCH_EVENT",
    "parameters": {
      "eventType": "core:perceptible_event",
      "payload": {
        "eventName": "core:perceptible_event",
        "locationId": "{context.locationId}",
        "descriptionText": "{context.logMessage}",
        "timestamp": "{context.nowIso}",
        "perceptionType": "{context.perceptionType}",
        "actorId": "{event.payload.actorId}",
        "targetId": "{context.targetId}",
        "involvedEntities": []
      }
    }
  },
  {
    "type": "DISPATCH_EVENT",
    "parameters": {
      "eventType": "core:display_successful_action_result",
      "payload": {
        "message": "{context.logMessage}"
      }
    }
  },
  {
    "type": "END_TURN",
    "parameters": {
      "entityId": "{event.payload.actorId}",
      "success": true
    }
  }
]
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 1/12] About to execute operation of type: ESTABLISH_FOLLOW_RELATION
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "ESTABLISH_FOLLOW_RELATION"…
consoleLogger.js:187 RebuildLeaderListCacheHandler: [RebuildLeaderListCacheHandler] Initialized.
consoleLogger.js:187 EstablishFollowRelationHandler: [EstablishFollowRelationHandler] Initialized
consoleLogger.js:187 [EstablishFollowRelationHandler] establishing follow: follower=isekai:hero_instance, leader=isekai:ninja_instance
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:following' to entity 'isekai:hero_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:following', componentData: {…}, oldComponentData: undefined}
consoleLogger.js:187 Successfully added/updated component 'core:following' data on entity 'isekai:hero_instance'.
consoleLogger.js:187 EntityQueryManager.getEntitiesWithComponent: Found 1 entities with component 'core:following'
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:leading' to entity 'isekai:ninja_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:leading', componentData: {…}, oldComponentData: undefined}
consoleLogger.js:187 Successfully added/updated component 'core:leading' data on entity 'isekai:ninja_instance'.
consoleLogger.js:187 [RebuildLeaderListCacheHandler] Rebuilt cache for 1/1 leader(s).
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 1/12] Finished executing operation of type: ESTABLISH_FOLLOW_RELATION
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 2/12] About to execute operation of type: GET_NAME
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "GET_NAME"…
consoleLogger.js:187 SystemLogicInterpreter: GET_NAME: Resolved name for 'isekai:hero_instance' -> 'Joel Overberus'.
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 2/12] Finished executing operation of type: GET_NAME
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 3/12] About to execute operation of type: GET_NAME
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "GET_NAME"…
consoleLogger.js:187 SystemLogicInterpreter: GET_NAME: Resolved name for 'isekai:ninja_instance' -> 'Ninja Ninjason'.
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 3/12] Finished executing operation of type: GET_NAME
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 4/12] About to execute operation of type: QUERY_COMPONENT
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "QUERY_COMPONENT"…
consoleLogger.js:187 SystemLogicInterpreter: QueryComponentHandler: Attempting to query component "core:position" from entity "isekai:hero_instance". Storing result in context variable "actorPos".
consoleLogger.js:187 SystemLogicInterpreter: QueryComponentHandler: Successfully queried component "core:position" from entity "isekai:hero_instance". Result stored in "actorPos": {"locationId":"isekai:adventurers_guild_instance"}
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 4/12] Finished executing operation of type: QUERY_COMPONENT
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 5/12] About to execute operation of type: SET_VARIABLE
consoleLogger.js:187 OperationInterpreter: Replaced embedded placeholder {context.followerName} with string: "Joel Overberus"
consoleLogger.js:187 OperationInterpreter: Replaced embedded placeholder {context.leaderName} with string: "Ninja Ninjason"
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "SET_VARIABLE"…
consoleLogger.js:187 SET_VARIABLE: Value for "logMessage" is not a non-empty object. Using directly.
consoleLogger.js:187 SET_VARIABLE: Setting context variable "logMessage" in evaluationContext.context to value: "Joel Overberus is now following Ninja Ninjason."
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 5/12] Finished executing operation of type: SET_VARIABLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 6/12] About to execute operation of type: SET_VARIABLE
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.actorPos.locationId} to: isekai:adventurers_guild_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "SET_VARIABLE"…
consoleLogger.js:187 SET_VARIABLE: Value for "locationId" is not a non-empty object. Using directly.
consoleLogger.js:187 SET_VARIABLE: Setting context variable "locationId" in evaluationContext.context to value: "isekai:adventurers_guild_instance"
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 6/12] Finished executing operation of type: SET_VARIABLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 7/12] About to execute operation of type: SET_VARIABLE
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "SET_VARIABLE"…
consoleLogger.js:187 SET_VARIABLE: Value for "perceptionType" is not a non-empty object. Using directly.
consoleLogger.js:187 SET_VARIABLE: Setting context variable "perceptionType" in evaluationContext.context to value: "action_target_general"
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 7/12] Finished executing operation of type: SET_VARIABLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 8/12] About to execute operation of type: SET_VARIABLE
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "SET_VARIABLE"…
consoleLogger.js:187 SET_VARIABLE: Value for "targetId" is not a non-empty object. Using directly.
consoleLogger.js:187 SET_VARIABLE: Setting context variable "targetId" in evaluationContext.context to value: "isekai:ninja_instance"
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 8/12] Finished executing operation of type: SET_VARIABLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 9/12] About to execute operation of type: GET_TIMESTAMP
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "GET_TIMESTAMP"…
consoleLogger.js:187 SystemLogicInterpreter: GET_TIMESTAMP → nowIso = 2025-07-08T19:46:12.822Z
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 9/12] Finished executing operation of type: GET_TIMESTAMP
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 10/12] About to execute operation of type: DISPATCH_EVENT
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.locationId} to: isekai:adventurers_guild_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.logMessage} to: Joel Overberus is now following Ninja Ninjason.
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.nowIso} to: 2025-07-08T19:46:12.822Z
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.perceptionType} to: action_target_general
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {context.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "DISPATCH_EVENT"…
consoleLogger.js:187 DispatchEventHandler: Attempting to dispatch event "core:perceptible_event" with resolved payload... {payload: {…}}
consoleLogger.js:187 VED: Validating payload for event 'core:perceptible_event' against schema 'core:perceptible_event#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:perceptible_event'.
consoleLogger.js:187 VED: Dispatching event 'core:perceptible_event' via EventBus... {eventName: 'core:perceptible_event', locationId: 'isekai:adventurers_guild_instance', descriptionText: 'Joel Overberus is now following Ninja Ninjason.', timestamp: '2025-07-08T19:46:12.822Z', perceptionType: 'action_target_general', …}
consoleLogger.js:187 SystemLogicInterpreter: Received event: core:perceptible_event. Found 1 potential rule(s). {payload: {…}}
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:perceptible_event] Assembling execution context via createNestedExecutionContext... (ActorID: isekai:hero_instance, TargetID: isekai:ninja_instance)
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Creating JsonLogicEvaluationContext for event type [core:perceptible_event]. ActorID: [isekai:hero_instance], TargetID: [isekai:ninja_instance]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found actor entity [isekai:hero_instance]. Creating context entry.
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found target entity [isekai:ninja_instance]. Creating context entry.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:perceptible_event] createNestedExecutionContext returned a valid ExecutionContext.
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:perceptible_event] Final ExecutionContext (nested structure) assembled successfully.
consoleLogger.js:187 SystemLogicInterpreter: [Rule log_perceptible_events] No condition defined or condition is empty. Defaulting to passed.
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 1/2] About to execute operation of type: SET_VARIABLE
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.descriptionText} to: Joel Overberus is now following Ninja Ninjason.
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.timestamp} to: 2025-07-08T19:46:12.822Z
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.perceptionType} to: action_target_general
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.involvedEntities} to: []
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "SET_VARIABLE"…
consoleLogger.js:187 SET_VARIABLE: Value for "logEntryData" is a non-empty object. Attempting JsonLogic evaluation using executionContext.evaluationContext as data source.
consoleLogger.js:187 SET_VARIABLE: JsonLogic evaluation successful for "logEntryData". Result: {"descriptionText":"Joel Overberus is now following Ninja Ninjason.","timestamp":"2025-07-08T19:46:12.822Z","perceptionType":"action_target_general","actorId":"isekai:hero_instance","targetId":"isekai:ninja_instance","involvedEntities":[]}
consoleLogger.js:187 SET_VARIABLE: Setting context variable "logEntryData" in evaluationContext.context to value: {"descriptionText":"Joel Overberus is now following Ninja Ninjason.","timestamp":"2025-07-08T19:46:12.822Z","perceptionType":"action_target_general","actorId":"isekai:hero_instance","targetId":"isekai:ninja_instance","involvedEntities":[]}
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 1/2] Finished executing operation of type: SET_VARIABLE
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 2/2] About to execute operation of type: ADD_PERCEPTION_LOG_ENTRY
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.locationId} to: isekai:adventurers_guild_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.descriptionText} to: Joel Overberus is now following Ninja Ninjason.
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.timestamp} to: 2025-07-08T19:46:12.822Z
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.perceptionType} to: action_target_general
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.targetId} to: isekai:ninja_instance
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.involvedEntities} to: []
consoleLogger.js:187 OperationInterpreter: Resolved full string placeholder {event.payload.actorId} to: isekai:hero_instance
consoleLogger.js:187 OperationInterpreter: Executing handler for operation type "ADD_PERCEPTION_LOG_ENTRY"…
consoleLogger.js:163 EntityQueryManager.hasComponent: The 3-parameter version is deprecated. Use hasComponentOverride(instanceId, componentTypeId) instead of hasComponent(instanceId, componentTypeId, true).
warn @ consoleLogger.js:163
hasComponent @ EntityQueryManager.js:136
hasComponent @ entityManager.js:437
hasComponent @ entityManagerAdapter.js:53
execute @ addPerceptionLogEntryHandler.js:105
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
#dispatchViaValidatedDispatcher @ dispatchEventHandler.js:139
execute @ dispatchEventHandler.js:175
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
handleIf @ ifHandler.js:70
executeActionSequence @ actionSequence.js:82
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
dispatchWithErrorHandling @ eventDispatchService.js:98
dispatchAction @ commandProcessor.js:110
_dispatchAction @ commandProcessingWorkflow.js:104
processCommand @ commandProcessingWorkflow.js:239
_processCommandInternal @ processingCommandState.js:333
_executeAction @ processingWorkflow.js:261
await in _executeAction
run @ processingWorkflow.js:87
await in run
enterState @ processingCommandState.js:290
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestProcessingCommandStateTransition @ baseTurnHandler.js:609
requestProcessingCommandStateTransition @ turnContext.js:253
run @ actionDecisionWorkflow.js:62
await in run
_handleActionDecision @ awaitingActorDecisionState.js:102
enterState @ awaitingActorDecisionState.js:119
await in enterState
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestAwaitingInputStateTransition @ baseTurnHandler.js:594
requestAwaitingInputStateTransition @ turnContext.js:249
_requestAwaitingInput @ turnIdleState.js:140
startTurn @ turnIdleState.js:72
startTurn @ genericTurnHandler.js:134
startTurn @ actorTurnHandler.js:64
advanceTurn @ turnManager.js:446
await in advanceTurn
advanceTurn @ turnManager.js:336
await in advanceTurn
start @ turnManager.js:200
#finalizeGameStart @ gameSessionManager.js:146
await in #finalizeGameStart
finalizeNewGameSuccess @ gameSessionManager.js:167
#finalizeInitializationSuccess @ gameEngine.js:280
startNewGame @ gameEngine.js:316
await in startNewGame
startGameStage @ engineStages.js:87
beginGame @ main.js:244
(anonymous) @ game.html:331
Promise.then
(anonymous) @ game.html:328Understand this warning
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:perception_log' to entity 'isekai:hero_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:perception_log', componentData: {…}, oldComponentData: {…}}
consoleLogger.js:187 Successfully added/updated component 'core:perception_log' data on entity 'isekai:hero_instance'.
consoleLogger.js:163 EntityQueryManager.hasComponent: The 3-parameter version is deprecated. Use hasComponentOverride(instanceId, componentTypeId) instead of hasComponent(instanceId, componentTypeId, true).
warn @ consoleLogger.js:163
hasComponent @ EntityQueryManager.js:136
hasComponent @ entityManager.js:437
hasComponent @ entityManagerAdapter.js:53
execute @ addPerceptionLogEntryHandler.js:105
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
#dispatchViaValidatedDispatcher @ dispatchEventHandler.js:139
execute @ dispatchEventHandler.js:175
(anonymous) @ interpreterRegistrations.js:59
execute @ operationInterpreter.js:94
executeActionSequence @ actionSequence.js:95
handleIf @ ifHandler.js:70
executeActionSequence @ actionSequence.js:82
_executeActions @ systemLogicInterpreter.js:356
#processRule @ systemLogicInterpreter.js:335
#handleEvent @ systemLogicInterpreter.js:268
(anonymous) @ eventBus.js:144
dispatch @ eventBus.js:141
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
dispatchWithErrorHandling @ eventDispatchService.js:98
dispatchAction @ commandProcessor.js:110
_dispatchAction @ commandProcessingWorkflow.js:104
processCommand @ commandProcessingWorkflow.js:239
_processCommandInternal @ processingCommandState.js:333
_executeAction @ processingWorkflow.js:261
await in _executeAction
run @ processingWorkflow.js:87
await in run
enterState @ processingCommandState.js:290
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestProcessingCommandStateTransition @ baseTurnHandler.js:609
requestProcessingCommandStateTransition @ turnContext.js:253
run @ actionDecisionWorkflow.js:62
await in run
_handleActionDecision @ awaitingActorDecisionState.js:102
enterState @ awaitingActorDecisionState.js:119
await in enterState
_transitionToState @ baseTurnHandler.js:236
await in _transitionToState
requestAwaitingInputStateTransition @ baseTurnHandler.js:594
requestAwaitingInputStateTransition @ turnContext.js:249
_requestAwaitingInput @ turnIdleState.js:140
startTurn @ turnIdleState.js:72
startTurn @ genericTurnHandler.js:134
startTurn @ actorTurnHandler.js:64
advanceTurn @ turnManager.js:446
await in advanceTurn
advanceTurn @ turnManager.js:336
await in advanceTurn
start @ turnManager.js:200
#finalizeGameStart @ gameSessionManager.js:146
await in #finalizeGameStart
finalizeNewGameSuccess @ gameSessionManager.js:167
#finalizeInitializationSuccess @ gameEngine.js:280
startNewGame @ gameEngine.js:316
await in startNewGame
startGameStage @ engineStages.js:87
beginGame @ main.js:244
(anonymous) @ game.html:331
Promise.then
(anonymous) @ game.html:328Understand this warning
consoleLogger.js:187 EntityMutationManager.addComponent: Adding component 'core:perception_log' to entity 'isekai:ninja_instance'
consoleLogger.js:187 VED: Validating payload for event 'core:component_added' against schema 'core:component_added#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:component_added'.
consoleLogger.js:187 VED: Dispatching event 'core:component_added' via EventBus... {entity: Entity, componentTypeId: 'core:perception_log', componentData: {…}, oldComponentData: {…}}
consoleLogger.js:187 Successfully added/updated component 'core:perception_log' data on entity 'isekai:ninja_instance'.
consoleLogger.js:187 SystemLogicInterpreter: ADD_PERCEPTION_LOG_ENTRY: wrote entry to 2/2 perceivers in isekai:adventurers_guild_instance
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'log_perceptible_events' - Action 2/2] Finished executing operation of type: ADD_PERCEPTION_LOG_ENTRY
consoleLogger.js:187 SystemLogicInterpreter: [Rule 'core_handle_follow' IF#3 - Action 10/12] Finished executing operation of type: DISPATCH_EVENT