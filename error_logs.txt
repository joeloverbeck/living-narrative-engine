[descriptors] Fetched data from ./data/mods/descriptors/components/length_hair.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'length_hair.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: length_hair.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:length_hair'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:length_hair' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:length_hair' from file 'length_hair.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:length_hair', Base ID: 'length_hair', Filename: 'length_hair.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:length_hair' (Base: 'length_hair') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from length_hair.component.json. Returning final registry key: descriptors:length_hair, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed length_hair.component.json. Result: ID=descriptors:length_hair, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/shape_eye.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'shape_eye.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: shape_eye.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:shape_eye'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:shape_eye' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:shape_eye' from file 'shape_eye.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:shape_eye', Base ID: 'shape_eye', Filename: 'shape_eye.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:shape_eye' (Base: 'shape_eye') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from shape_eye.component.json. Returning final registry key: descriptors:shape_eye, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed shape_eye.component.json. Result: ID=descriptors:shape_eye, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/shape_general.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'shape_general.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: shape_general.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:shape_general'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:shape_general' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:shape_general' from file 'shape_general.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:shape_general', Base ID: 'shape_general', Filename: 'shape_general.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:shape_general' (Base: 'shape_general') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from shape_general.component.json. Returning final registry key: descriptors:shape_general, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed shape_general.component.json. Result: ID=descriptors:shape_general, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/size_category.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'size_category.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: size_category.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:size_category'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:size_category' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:size_category' from file 'size_category.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:size_category', Base ID: 'size_category', Filename: 'size_category.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:size_category' (Base: 'size_category') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from size_category.component.json. Returning final registry key: descriptors:size_category, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed size_category.component.json. Result: ID=descriptors:size_category, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/size_specific.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'size_specific.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: size_specific.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:size_specific'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:size_specific' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:size_specific' from file 'size_specific.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:size_specific', Base ID: 'size_specific', Filename: 'size_specific.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:size_specific' (Base: 'size_specific') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from size_specific.component.json. Returning final registry key: descriptors:size_specific, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed size_specific.component.json. Result: ID=descriptors:size_specific, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/texture.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'texture.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: texture.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:texture'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:texture' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:texture' from file 'texture.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:texture', Base ID: 'texture', Filename: 'texture.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:texture' (Base: 'texture') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from texture.component.json. Returning final registry key: descriptors:texture, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed texture.component.json. Result: ID=descriptors:texture, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/weight_feel.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'weight_feel.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: weight_feel.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:weight_feel'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:weight_feel' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:weight_feel' from file 'weight_feel.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:weight_feel', Base ID: 'weight_feel', Filename: 'weight_feel.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:weight_feel' (Base: 'weight_feel') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from weight_feel.component.json. Returning final registry key: descriptors:weight_feel, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed weight_feel.component.json. Result: ID=descriptors:weight_feel, Overwrite=false
consoleLogger.js:151 Mod [descriptors] - Processed 13/13 components items.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'entity_definitions' (key: 'entities.definitions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyRecipes' (key: 'anatomy.recipes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyBlueprints' (key: 'anatomy.blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyFormatting' (key: 'anatomyFormatting') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Content loading loop took 18.00 ms.
consoleLogger.js:187 Mod 'descriptors' phase 'definitions' loaded in 18.00ms: components(13) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: descriptors, phase: definitions ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'anatomy' (lowercase: 'anatomy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod anatomy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: anatomy, phase: definitions ---
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'actions' (key: 'actions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing components content with 4 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'components'. Invoking loader 'ComponentLoader'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'anatomy'.
consoleLogger.js:187 Found 4 potential components files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for body.component.json: ./data/mods/anatomy/components/body.component.json
consoleLogger.js:187 [anatomy] Resolved path for joint.component.json: ./data/mods/anatomy/components/joint.component.json
consoleLogger.js:187 [anatomy] Resolved path for part.component.json: ./data/mods/anatomy/components/part.component.json
consoleLogger.js:187 [anatomy] Resolved path for sockets.component.json: ./data/mods/anatomy/components/sockets.component.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/body.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'body.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: body.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:body'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:body' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:body' from file 'body.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:body', Base ID: 'body', Filename: 'body.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:body' (Base: 'body') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from body.component.json. Returning final registry key: anatomy:body, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed body.component.json. Result: ID=anatomy:body, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/joint.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'joint.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: joint.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:joint'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:joint' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:joint' from file 'joint.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:joint', Base ID: 'joint', Filename: 'joint.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:joint' (Base: 'joint') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from joint.component.json. Returning final registry key: anatomy:joint, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed joint.component.json. Result: ID=anatomy:joint, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/part.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'part.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: part.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:part'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:part' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:part' from file 'part.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:part', Base ID: 'part', Filename: 'part.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:part' (Base: 'part') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from part.component.json. Returning final registry key: anatomy:part, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed part.component.json. Result: ID=anatomy:part, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/sockets.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'sockets.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: sockets.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:sockets'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:sockets' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:sockets' from file 'sockets.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:sockets', Base ID: 'sockets', Filename: 'sockets.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:sockets' (Base: 'sockets') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from sockets.component.json. Returning final registry key: anatomy:sockets, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed sockets.component.json. Result: ID=anatomy:sockets, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 4/4 components items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing entities.definitions content with 14 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'entities.definitions'. Invoking loader 'EntityDefinitionLoader'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entity_definitions definitions for mod 'anatomy'.
consoleLogger.js:187 Found 14 potential entities.definitions files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for human_breast_d_cup.entity.json: ./data/mods/anatomy/entities/definitions/human_breast_d_cup.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_breast_g_cup.entity.json: ./data/mods/anatomy/entities/definitions/human_breast_g_cup.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye.entity.json: ./data/mods/anatomy/entities/definitions/human_eye.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_blue.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_blue.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_brown.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_brown.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_cobalt.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_cobalt.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_female_torso.entity.json: ./data/mods/anatomy/entities/definitions/human_female_torso.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hair_blonde.entity.json: ./data/mods/anatomy/entities/definitions/human_hair_blonde.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hair_raven.entity.json: ./data/mods/anatomy/entities/definitions/human_hair_raven.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_leg_shapely.entity.json: ./data/mods/anatomy/entities/definitions/human_leg_shapely.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_male_torso.entity.json: ./data/mods/anatomy/entities/definitions/human_male_torso.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_arm.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_arm.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_head.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_head.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_leg.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_leg.entity.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_breast_d_cup.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_breast_d_cup.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_breast_d_cup.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_breast_d_cup' and derived base ID 'human_breast_d_cup' from human_breast_d_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_specific' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:weight_feel' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:firmness' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_breast_d_cup', Base ID: 'human_breast_d_cup', Filename: 'human_breast_d_cup.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_breast_d_cup' (Base: 'human_breast_d_cup') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_breast_d_cup.entity.json'. Returning final registry key: anatomy:human_breast_d_cup, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_breast_d_cup.entity.json. Result: ID=anatomy:human_breast_d_cup, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_breast_g_cup.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_breast_g_cup.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_breast_g_cup.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_breast_g_cup' and derived base ID 'human_breast_g_cup' from human_breast_g_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_specific' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:weight_feel' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:firmness' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_breast_g_cup', Base ID: 'human_breast_g_cup', Filename: 'human_breast_g_cup.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_breast_g_cup' (Base: 'human_breast_g_cup') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_breast_g_cup.entity.json'. Returning final registry key: anatomy:human_breast_g_cup, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_breast_g_cup.entity.json. Result: ID=anatomy:human_breast_g_cup, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye' and derived base ID 'human_eye' from human_eye.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye' from human_eye.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye' from human_eye.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye' from human_eye.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye', Base ID: 'human_eye', Filename: 'human_eye.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye' (Base: 'human_eye') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_eye.entity.json'. Returning final registry key: anatomy:human_eye, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye.entity.json. Result: ID=anatomy:human_eye, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_blue.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_blue.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_blue.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_blue' and derived base ID 'human_eye_blue' from human_eye_blue.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_blue' from human_eye_blue.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_blue' from human_eye_blue.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_blue' from human_eye_blue.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_blue', Base ID: 'human_eye_blue', Filename: 'human_eye_blue.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_blue' (Base: 'human_eye_blue') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_eye_blue.entity.json'. Returning final registry key: anatomy:human_eye_blue, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_blue.entity.json. Result: ID=anatomy:human_eye_blue, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_brown.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_brown.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_brown.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_brown' and derived base ID 'human_eye_brown' from human_eye_brown.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_brown' from human_eye_brown.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_brown' from human_eye_brown.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_brown' from human_eye_brown.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_brown', Base ID: 'human_eye_brown', Filename: 'human_eye_brown.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_brown' (Base: 'human_eye_brown') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_eye_brown.entity.json'. Returning final registry key: anatomy:human_eye_brown, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_brown.entity.json. Result: ID=anatomy:human_eye_brown, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_cobalt.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_cobalt.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_cobalt.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_cobalt' and derived base ID 'human_eye_cobalt' from human_eye_cobalt.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_cobalt', Base ID: 'human_eye_cobalt', Filename: 'human_eye_cobalt.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_cobalt' (Base: 'human_eye_cobalt') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_eye_cobalt.entity.json'. Returning final registry key: anatomy:human_eye_cobalt, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_cobalt.entity.json. Result: ID=anatomy:human_eye_cobalt, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_female_torso.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_female_torso.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_female_torso.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_female_torso' and derived base ID 'human_female_torso' from human_female_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:human_female_torso' from human_female_torso.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_female_torso' from human_female_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_female_torso' from human_female_torso.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_female_torso', Base ID: 'human_female_torso', Filename: 'human_female_torso.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_female_torso' (Base: 'human_female_torso') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_female_torso.entity.json'. Returning final registry key: anatomy:human_female_torso, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_female_torso.entity.json. Result: ID=anatomy:human_female_torso, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hair_blonde.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hair_blonde.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hair_blonde.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hair_blonde' and derived base ID 'human_hair_blonde' from human_hair_blonde.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_hair' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:hair_style' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hair_blonde', Base ID: 'human_hair_blonde', Filename: 'human_hair_blonde.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hair_blonde' (Base: 'human_hair_blonde') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_hair_blonde.entity.json'. Returning final registry key: anatomy:human_hair_blonde, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hair_blonde.entity.json. Result: ID=anatomy:human_hair_blonde, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_leg_shapely.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_leg_shapely.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_leg_shapely.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_leg_shapely' and derived base ID 'human_leg_shapely' from human_leg_shapely.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_category' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:build' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_leg_shapely', Base ID: 'human_leg_shapely', Filename: 'human_leg_shapely.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_leg_shapely' (Base: 'human_leg_shapely') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_leg_shapely.entity.json'. Returning final registry key: anatomy:human_leg_shapely, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_leg_shapely.entity.json. Result: ID=anatomy:human_leg_shapely, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_male_torso.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_male_torso.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_male_torso.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_male_torso' and derived base ID 'human_male_torso' from human_male_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:human_male_torso' from human_male_torso.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_male_torso' from human_male_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_male_torso' from human_male_torso.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_male_torso', Base ID: 'human_male_torso', Filename: 'human_male_torso.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_male_torso' (Base: 'human_male_torso') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_male_torso.entity.json'. Returning final registry key: anatomy:human_male_torso, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_male_torso.entity.json. Result: ID=anatomy:human_male_torso, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hair_raven.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hair_raven.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hair_raven.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hair_raven' and derived base ID 'human_hair_raven' from human_hair_raven.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_hair_raven' from human_hair_raven.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_hair' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:hair_style' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hair_raven' from human_hair_raven.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hair_raven' from human_hair_raven.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hair_raven', Base ID: 'human_hair_raven', Filename: 'human_hair_raven.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hair_raven' (Base: 'human_hair_raven') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'human_hair_raven.entity.json'. Returning final registry key: anatomy:human_hair_raven, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hair_raven.entity.json. Result: ID=anatomy:human_hair_raven, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_arm.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_arm.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_arm.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_arm' and derived base ID 'humanoid_arm' from humanoid_arm.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_arm' from humanoid_arm.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_arm' from humanoid_arm.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_arm' from humanoid_arm.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_arm', Base ID: 'humanoid_arm', Filename: 'humanoid_arm.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_arm' (Base: 'humanoid_arm') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'humanoid_arm.entity.json'. Returning final registry key: anatomy:humanoid_arm, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_arm.entity.json. Result: ID=anatomy:humanoid_arm, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_head.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_head.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_head.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_head' and derived base ID 'humanoid_head' from humanoid_head.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_head' from humanoid_head.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_head' from humanoid_head.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_head' from humanoid_head.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_head', Base ID: 'humanoid_head', Filename: 'humanoid_head.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_head' (Base: 'humanoid_head') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'humanoid_head.entity.json'. Returning final registry key: anatomy:humanoid_head, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_head.entity.json. Result: ID=anatomy:humanoid_head, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_leg.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_leg.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_leg.entity.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_leg' and derived base ID 'humanoid_leg' from humanoid_leg.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_leg' from humanoid_leg.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_leg' from humanoid_leg.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_leg' from humanoid_leg.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_leg', Base ID: 'humanoid_leg', Filename: 'humanoid_leg.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_leg' (Base: 'humanoid_leg') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entity_definitions file 'humanoid_leg.entity.json'. Returning final registry key: anatomy:humanoid_leg, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_leg.entity.json. Result: ID=anatomy:humanoid_leg, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 14/14 entities.definitions items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'anatomyRecipes' (key: 'anatomy.recipes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'anatomyBlueprints' (key: 'anatomy.blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing anatomyFormatting content with 1 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'anatomyFormatting'. Invoking loader 'AnatomyFormattingLoader'.
consoleLogger.js:151 AnatomyFormattingLoader: Loading anatomyFormatting definitions for mod 'anatomy'.
consoleLogger.js:187 Found 1 potential anatomyFormatting files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for default.json: ./data/mods/anatomy/anatomy-formatting/default.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/anatomy-formatting/default.json
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Validating 'default.json' against primary schema 'http://example.com/schemas/anatomy-formatting.schema.json'.
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Processing fetched item: default.json
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Storing item in registry. Category: 'anatomyFormatting', Qualified ID: 'anatomy:default', Base ID: 'default', Filename: 'default.json'
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Item 'anatomy:default' (Base: 'default') stored successfully in category 'anatomyFormatting'.
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Successfully processed anatomy formatting from default.json. Registry key: anatomy:default, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed default.json. Result: ID=anatomy:default, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 1/1 anatomyFormatting items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Content loading loop took 30.00 ms.
consoleLogger.js:187 Mod 'anatomy' phase 'definitions' loaded in 30.00ms: anatomyFormatting(1), components(4), entity_definitions(14) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: anatomy, phase: definitions ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'isekai' (lowercase: 'isekai'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod isekai, manifest found: true
consoleLogger.js:187 --- Loading content for mod: isekai, phase: definitions ---
consoleLogger.js:187 ModsLoader [isekai, definitions]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'actions' (key: 'actions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'components' (key: 'components') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Processing entities.definitions content with 6 files...
consoleLogger.js:187 ModsLoader [isekai, definitions]: Found content for 'entities.definitions'. Invoking loader 'EntityDefinitionLoader'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entity_definitions definitions for mod 'isekai'.
consoleLogger.js:187 Found 6 potential entities.definitions files to process for mod isekai.
consoleLogger.js:187 [isekai] Resolved path for adventurers_guild.location.json: ./data/mods/isekai/entities/definitions/adventurers_guild.location.json
consoleLogger.js:187 [isekai] Resolved path for hero.character.json: ./data/mods/isekai/entities/definitions/hero.character.json
consoleLogger.js:187 [isekai] Resolved path for ninja.character.json: ./data/mods/isekai/entities/definitions/ninja.character.json
consoleLogger.js:187 [isekai] Resolved path for receptionist.character.json: ./data/mods/isekai/entities/definitions/receptionist.character.json
consoleLogger.js:187 [isekai] Resolved path for sidekick.character.json: ./data/mods/isekai/entities/definitions/sidekick.character.json
consoleLogger.js:187 [isekai] Resolved path for town.location.json: ./data/mods/isekai/entities/definitions/town.location.json
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/adventurers_guild.location.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'adventurers_guild.location.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): adventurers_guild.location.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:adventurers_guild' and derived base ID 'adventurers_guild' from adventurers_guild.location.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 4 components for entity 'isekai:adventurers_guild' from adventurers_guild.location.json...
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:adventurers_guild' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'isekai:adventurers_guild' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'isekai:adventurers_guild' passed runtime validation.
consoleLogger.js:187    - Component 'core:exits' in entity 'isekai:adventurers_guild' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:adventurers_guild' from adventurers_guild.location.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:adventurers_guild' from adventurers_guild.location.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:adventurers_guild', Base ID: 'adventurers_guild', Filename: 'adventurers_guild.location.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:adventurers_guild' (Base: 'adventurers_guild') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'adventurers_guild.location.json'. Returning final registry key: isekai:adventurers_guild, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed adventurers_guild.location.json. Result: ID=isekai:adventurers_guild, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/hero.character.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'hero.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): hero.character.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:hero' and derived base ID 'hero' from hero.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 7 components for entity 'isekai:hero' from hero.character.json...
consoleLogger.js:187    - Component 'core:actor' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:body' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'isekai:hero' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:hero' from hero.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:hero' from hero.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:hero', Base ID: 'hero', Filename: 'hero.character.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:hero' (Base: 'hero') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'hero.character.json'. Returning final registry key: isekai:hero, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed hero.character.json. Result: ID=isekai:hero, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/ninja.character.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'ninja.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): ninja.character.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:ninja' and derived base ID 'ninja' from ninja.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 6 components for entity 'isekai:ninja' from ninja.character.json...
consoleLogger.js:187    - Component 'core:actor' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'isekai:ninja' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:ninja' from ninja.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:ninja' from ninja.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:ninja', Base ID: 'ninja', Filename: 'ninja.character.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:ninja' (Base: 'ninja') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'ninja.character.json'. Returning final registry key: isekai:ninja, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed ninja.character.json. Result: ID=isekai:ninja, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/receptionist.character.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'receptionist.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): receptionist.character.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:receptionist' and derived base ID 'receptionist' from receptionist.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 15 components for entity 'isekai:receptionist' from receptionist.character.json...
consoleLogger.js:187    - Component 'core:actor' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:short_term_memory' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:likes' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:dislikes' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:personality' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:fears' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:profile' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:secrets' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:speech_patterns' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'isekai:receptionist' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:receptionist' from receptionist.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:receptionist' from receptionist.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:receptionist', Base ID: 'receptionist', Filename: 'receptionist.character.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:receptionist' (Base: 'receptionist') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'receptionist.character.json'. Returning final registry key: isekai:receptionist, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed receptionist.character.json. Result: ID=isekai:receptionist, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/sidekick.character.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'sidekick.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): sidekick.character.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:sidekick' and derived base ID 'sidekick' from sidekick.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 16 components for entity 'isekai:sidekick' from sidekick.character.json...
consoleLogger.js:187    - Component 'core:actor' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:dislikes' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:likes' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:fears' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:personality' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:profile' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:secrets' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:speech_patterns' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:notes' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:goals' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'isekai:sidekick' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:sidekick' from sidekick.character.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:sidekick' from sidekick.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:sidekick', Base ID: 'sidekick', Filename: 'sidekick.character.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:sidekick' (Base: 'sidekick') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'sidekick.character.json'. Returning final registry key: isekai:sidekick, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed sidekick.character.json. Result: ID=isekai:sidekick, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/definitions/town.location.json
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Validating 'town.location.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [isekai]: Processing fetched item (post-primary validation): town.location.json (Original Type: entity_definitions)
consoleLogger.js:187 EntityLoader [isekai]: Extracted full ID 'isekai:town' and derived base ID 'town' from town.location.json.
consoleLogger.js:187 EntityLoader [isekai]: Validating 3 components for entity 'isekai:town' from town.location.json...
consoleLogger.js:187    - Component 'core:name' in entity 'isekai:town' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'isekai:town' passed runtime validation.
consoleLogger.js:187    - Component 'core:exits' in entity 'isekai:town' passed runtime validation.
consoleLogger.js:187 EntityLoader [isekai]: All runtime component validations passed for entity 'isekai:town' from town.location.json.
consoleLogger.js:187 EntityLoader [isekai]: Created EntityDefinition instance for 'isekai:town' from town.location.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'isekai:town', Base ID: 'town', Filename: 'town.location.json'
consoleLogger.js:187 EntityDefinitionLoader [isekai]: Item 'isekai:town' (Base: 'town') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [isekai]: Successfully processed entity_definitions file 'town.location.json'. Returning final registry key: isekai:town, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed town.location.json. Result: ID=isekai:town, Overwrite=false
consoleLogger.js:151 Mod [isekai] - Processed 6/6 entities.definitions items.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'anatomyRecipes' (key: 'anatomy.recipes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'anatomyBlueprints' (key: 'anatomy.blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Skipping content type 'anatomyFormatting' (key: 'anatomyFormatting') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, definitions]: Content loading loop took 11.70 ms.
consoleLogger.js:187 Mod 'isekai' phase 'definitions' loaded in 11.70ms: entity_definitions(6) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: isekai, phase: definitions ---
consoleLogger.js:187 ModsLoader: Completed content loading loop for phase: definitions.
consoleLogger.js:187 ModsLoader: Beginning content loading for phase: instances...
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'core' (lowercase: 'core'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod core, manifest found: true
consoleLogger.js:187 --- Loading content for mod: core, phase: instances ---
consoleLogger.js:187 ModsLoader [core, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [core, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [core, instances]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [core, instances]: Content loading loop took 0.10 ms.
consoleLogger.js:187 Mod 'core' phase 'instances' loaded in 0.10ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: core, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'intimacy' (lowercase: 'intimacy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod intimacy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: intimacy, phase: instances ---
consoleLogger.js:187 ModsLoader [intimacy, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [intimacy, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, instances]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'intimacy' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: intimacy, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'descriptors' (lowercase: 'descriptors'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod descriptors, manifest found: true
consoleLogger.js:187 --- Loading content for mod: descriptors, phase: instances ---
consoleLogger.js:187 ModsLoader [descriptors, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [descriptors, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, instances]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, instances]: Content loading loop took 0.10 ms.
consoleLogger.js:187 Mod 'descriptors' phase 'instances' loaded in 0.10ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: descriptors, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'anatomy' (lowercase: 'anatomy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod anatomy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: anatomy, phase: instances ---
consoleLogger.js:187 ModsLoader [anatomy, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [anatomy, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, instances]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'anatomy' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: anatomy, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'isekai' (lowercase: 'isekai'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod isekai, manifest found: true
consoleLogger.js:187 --- Loading content for mod: isekai, phase: instances ---
consoleLogger.js:187 ModsLoader [isekai, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [isekai, instances]: Processing entities.instances content with 6 files...
consoleLogger.js:187 ModsLoader [isekai, instances]: Found content for 'entities.instances'. Invoking loader 'EntityInstanceLoader'.
consoleLogger.js:151 EntityInstanceLoader: Loading entityInstances definitions for mod 'isekai'.
consoleLogger.js:187 Found 6 potential entities.instances files to process for mod isekai.
consoleLogger.js:187 [isekai] Resolved path for adventurers_guild.location.json: ./data/mods/isekai/entities/instances/adventurers_guild.location.json
consoleLogger.js:187 [isekai] Resolved path for hero.character.json: ./data/mods/isekai/entities/instances/hero.character.json
consoleLogger.js:187 [isekai] Resolved path for ninja.character.json: ./data/mods/isekai/entities/instances/ninja.character.json
consoleLogger.js:187 [isekai] Resolved path for receptionist.character.json: ./data/mods/isekai/entities/instances/receptionist.character.json
consoleLogger.js:187 [isekai] Resolved path for sidekick.character.json: ./data/mods/isekai/entities/instances/sidekick.character.json
consoleLogger.js:187 [isekai] Resolved path for town.location.json: ./data/mods/isekai/entities/instances/town.location.json
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/adventurers_guild.location.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'adventurers_guild.location.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: adventurers_guild.location.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Instance 'isekai:adventurers_guild_instance' in adventurers_guild.location.json has no component overrides. Skipping secondary validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:adventurers_guild_instance', Base ID: 'adventurers_guild_instance', Filename: 'adventurers_guild.location.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:adventurers_guild_instance' (Base: 'adventurers_guild_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'adventurers_guild.location.json'. Final ID: isekai:adventurers_guild_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed adventurers_guild.location.json. Result: ID=isekai:adventurers_guild_instance, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/hero.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'hero.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: hero.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 1 component overrides for instance 'isekai:hero_instance' from hero.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'isekai:hero_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:hero_instance', Base ID: 'hero_instance', Filename: 'hero.character.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:hero_instance' (Base: 'hero_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'hero.character.json'. Final ID: isekai:hero_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed hero.character.json. Result: ID=isekai:hero_instance, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/ninja.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'ninja.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: ninja.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 1 component overrides for instance 'isekai:ninja_instance' from ninja.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'isekai:ninja_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:ninja_instance', Base ID: 'ninja_instance', Filename: 'ninja.character.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:ninja_instance' (Base: 'ninja_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'ninja.character.json'. Final ID: isekai:ninja_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed ninja.character.json. Result: ID=isekai:ninja_instance, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/receptionist.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'receptionist.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: receptionist.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 1 component overrides for instance 'isekai:receptionist_instance' from receptionist.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'isekai:receptionist_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:receptionist_instance', Base ID: 'receptionist_instance', Filename: 'receptionist.character.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:receptionist_instance' (Base: 'receptionist_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'receptionist.character.json'. Final ID: isekai:receptionist_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed receptionist.character.json. Result: ID=isekai:receptionist_instance, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/sidekick.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'sidekick.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: sidekick.character.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 1 component overrides for instance 'isekai:sidekick_instance' from sidekick.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'isekai:sidekick_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:sidekick_instance', Base ID: 'sidekick_instance', Filename: 'sidekick.character.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:sidekick_instance' (Base: 'sidekick_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'sidekick.character.json'. Final ID: isekai:sidekick_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed sidekick.character.json. Result: ID=isekai:sidekick_instance, Overwrite=false
consoleLogger.js:187 [isekai] Fetched data from ./data/mods/isekai/entities/instances/town.location.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Validating 'town.location.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Processing fetched item: town.location.json
consoleLogger.js:187 EntityInstanceLoader [isekai]: Instance 'isekai:town_instance' in town.location.json has no component overrides. Skipping secondary validation.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'isekai:town_instance', Base ID: 'town_instance', Filename: 'town.location.json'
consoleLogger.js:187 EntityInstanceLoader [isekai]: Item 'isekai:town_instance' (Base: 'town_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [isekai]: Successfully processed instance file 'town.location.json'. Final ID: isekai:town_instance, Overwrite: false
consoleLogger.js:187 [isekai] Successfully processed town.location.json. Result: ID=isekai:town_instance, Overwrite=false
consoleLogger.js:151 Mod [isekai] - Processed 6/6 entities.instances items.
consoleLogger.js:187 ModsLoader [isekai, instances]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [isekai, instances]: Content loading loop took 9.20 ms.
consoleLogger.js:187 Mod 'isekai' phase 'instances' loaded in 9.20ms: entityInstances(6) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: isekai, phase: instances ---
consoleLogger.js:187 ModsLoader: Completed content loading loop for phase: instances.
consoleLogger.js:187 ModsLoader: Completed both content loading phases.
consoleLogger.js:187 Phase content done
consoleLogger.js:187 Phase world start
consoleLogger.js:151 — WorldPhase starting —
consoleLogger.js:151 --- Starting World File Loading Phase ---
consoleLogger.js:187 WorldLoader [core]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [intimacy]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [descriptors]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [anatomy]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [isekai]: Processing world file 'isekai.world.json'.
consoleLogger.js:187 WorldLoader [isekai]: Successfully validated 4 instances from 'isekai.world.json'.
consoleLogger.js:187 WorldLoader: Registered world 'isekai:world' from file 'isekai.world.json'. {qualifiedWorldId: 'isekai:world', filename: 'isekai.world.json', modId: 'isekai'}
consoleLogger.js:151 --- World File Loading Phase Complete ---
consoleLogger.js:151 WorldLoader: Successfully processed and registered 1 worlds, containing 4 entity instances. All 4 definition references were resolved.
consoleLogger.js:187 Phase world done
consoleLogger.js:187 Phase summary start
consoleLogger.js:151 — SummaryPhase starting —
consoleLogger.js:151 — ModsLoader Load Summary (World: 'isekai:world') —
consoleLogger.js:151   • Requested Mods (raw): [core, intimacy, isekai]
consoleLogger.js:151   • Final Load Order     : [core, intimacy, descriptors, anatomy, isekai]
consoleLogger.js:151   • Content Loading Summary (Totals):
consoleLogger.js:151      - actions             : 10 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyFormatting   : 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - components          : 42 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - conditions          : 19 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entityInstances     : 6 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entity_definitions  : 20 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - events              : 35 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - macros              : 4 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - rules               : 16 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - scopes              : 6 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - worlds              : 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - ----------------------------------------------
consoleLogger.js:151      - TOTAL               : C:160, O:0, E:0
consoleLogger.js:151 ———————————————————————————————————————————
consoleLogger.js:187 Phase summary done
consoleLogger.js:151 ModsLoader: Load sequence for world 'isekai:world' completed successfully.
consoleLogger.js:151 ModsLoader: Load sequence for world 'isekai:world' completed successfully.
consoleLogger.js:187 InitializationService: World data loaded successfully for world: isekai:world. Load report: {"finalModOrder":["core","intimacy","descriptors","anatomy","isekai"],"totals":{"actions":{"count":10,"overrides":0,"errors":0},"components":{"count":42,"overrides":0,"errors":0},"conditions":{"count":19,"overrides":0,"errors":0},"events":{"count":35,"overrides":0,"errors":0},"macros":{"count":4,"overrides":0,"errors":0},"rules":{"count":16,"overrides":0,"errors":0},"scopes":{"count":6,"overrides":0,"errors":0},"entity_definitions":{"count":20,"overrides":0,"errors":0},"anatomyFormatting":{"count":1,"overrides":0,"errors":0},"entityInstances":{"count":6,"overrides":0,"errors":0},"worlds":{"count":1,"overrides":0,"errors":0,"instances":4,"resolvedDefinitions":4,"unresolvedDefinitions":0}},"incompatibilities":0}
consoleLogger.js:187 ContentDependencyValidator: Validating content dependencies...
consoleLogger.js:187 ContentDependencyValidator: Content dependency validation complete.
consoleLogger.js:187 Initializing ScopeRegistry...
consoleLogger.js:187 ScopeRegistry initialized with 6 scopes.
consoleLogger.js:187 LlmAdapterInitializer: Attempting to initialize ConfigurableLLMAdapter...
consoleLogger.js:187 InitializationService: LlmConfigLoader resolved from container for adapter initialization.
consoleLogger.js:187 ConfigurableLLMAdapter: Actual asynchronous initialization started with LlmConfigLoader.
consoleLogger.js:187 LlmConfigLoader: Attempting to load LLM Prompt configurations from: config/llm-configs.json
consoleLogger.js:187 [fetchWithRetry] fetchWithRetry: Initiating request sequence for config/llm-configs.json with maxRetries=3, baseDelayMs=500, maxDelayMs=5000.
consoleLogger.js:187 [fetchWithRetry] Attempt 1/3 - Fetching GET config/llm-configs.json
consoleLogger.js:187 [fetchWithRetry] fetchWithRetry: Attempt 1/3 for config/llm-configs.json - Request successful (status 200). Parsing JSON response.
consoleLogger.js:187 [fetchWithRetry] fetchWithRetry: Successfully fetched and parsed JSON from config/llm-configs.json after 1 attempt(s).
consoleLogger.js:187 LlmConfigLoader: Successfully fetched and parsed LLM Prompt configurations from config/llm-configs.json.
consoleLogger.js:187 LlmConfigLoader: Validating against schema ID: http://example.com/schemas/llm-configs.schema.json
consoleLogger.js:187 LlmConfigLoader: LLM Prompt configuration file from config/llm-configs.json passed schema validation.
consoleLogger.js:187 LlmConfigLoader: Performing semantic validation for config/llm-configs.json.
consoleLogger.js:187 LlmConfigLoader: Semantic validation passed for config/llm-configs.json.
consoleLogger.js:187 LlmConfigLoader: LLM Prompt configurations from config/llm-configs.json processed successfully.
consoleLogger.js:187 ConfigurableLLMAdapter: LLM configurations loaded successfully. {numberOfConfigs: 4, defaultConfigId: 'openrouter-claude-sonnet-4-toolcalling'}
consoleLogger.js:187 ConfigurableLLMAdapter: LLM configuration 'openrouter-claude-sonnet-4-toolcalling' (Claude Sonnet 4 (OpenRouter - Tool Calling)) set as active by defaultConfigId from file.
consoleLogger.js:187 ConfigurableLLMAdapter: Initialization attempt complete and adapter is operational.
consoleLogger.js:187 InitializationService: ConfigurableLLMAdapter initialized successfully and is operational.
consoleLogger.js:187 Initializing tagged systems...
consoleLogger.js:187 SystemInitializer: Starting initialization for systems tagged with 'initializableSystem'...
consoleLogger.js:187 SystemInitializer: Querying resolver for tag 'initializableSystem'...
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_created" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_created'.
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_removed" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_removed'.
consoleLogger.js:187 VED: Delegating subscription for event "core:component_added" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:component_added'.
consoleLogger.js:187 VED: Delegating subscription for event "core:component_removed" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:component_removed'.
consoleLogger.js:187 SpatialIndexSynchronizer initialized and listening for events.
consoleLogger.js:187 AnatomyFormattingService: Initializing formatting configuration
consoleLogger.js:187 AnatomyFormattingService: Configuration initialized {descriptionOrderCount: 0, descriptorOrderCount: 0}
consoleLogger.js:187 JsonLogicEvaluationService: Custom JSON Logic operation "not" added successfully.
consoleLogger.js:187 JsonLogicEvaluationService: JsonLogicEvaluationService initialized.
consoleLogger.js:187 PrerequisiteEvaluationService: PrerequisiteEvaluationService initialised (with ActionValidationContextBuilder and GameDataRepository).
consoleLogger.js:187 VED: Delegating subscription for event "core:turn_started" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:turn_started'.
consoleLogger.js:187 ScopeCache: Successfully subscribed to TURN_STARTED_ID events
consoleLogger.js:187 ActionDiscoveryService: ActionDiscoveryService initialised with streamlined logic.
consoleLogger.js:151 OperationRegistry: OperationRegistry initialized.
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_EVENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_PERCEPTIBLE_EVENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_SPEECH".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "LOG".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ADD_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REMOVE_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_COMPONENTS".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_ENTITIES".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "SET_VARIABLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "END_TURN".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "SYSTEM_MOVE_ENTITY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "GET_TIMESTAMP".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "GET_NAME".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "RESOLVE_DIRECTION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REBUILD_LEADER_LIST_CACHE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "CHECK_FOLLOW_CYCLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ESTABLISH_FOLLOW_RELATION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "BREAK_FOLLOW_RELATION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ADD_PERCEPTION_LOG_ENTRY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "HAS_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_ARRAY_FIELD".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_CONTEXT_ARRAY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "IF_CO_LOCATED".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "AUTO_MOVE_FOLLOWERS".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MERGE_CLOSENESS_CIRCLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MATH".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REMOVE_FROM_CLOSENESS_CIRCLE".
consoleLogger.js:187 OperationInterpreter: OperationInterpreter Initialized (using OperationRegistry).
consoleLogger.js:187 SystemLogicInterpreter: SystemLogicInterpreter: created
consoleLogger.js:187 PromptTextLoader: Initialized.
consoleLogger.js:187 PromptStaticContentService initialized.
consoleLogger.js:187 SystemInitializer: Found 6 systems tagged with 'initializableSystem'.
consoleLogger.js:187 SystemInitializer: Proceeding to initialize 6 resolved systems sequentially...
consoleLogger.js:187 SystemInitializer: System 'SpatialIndexSynchronizer' has no initialize() method, skipping.
consoleLogger.js:187 SystemInitializer: Initializing system: AnatomyInitializationService...
consoleLogger.js:187 AnatomyInitializationService: Registering event listeners
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_created" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_created'.
consoleLogger.js:151 AnatomyInitializationService: Initialized
consoleLogger.js:187 SystemInitializer: System AnatomyInitializationService initialized successfully.
consoleLogger.js:187 SystemInitializer: System 'ActionDiscoveryService' has no initialize() method, skipping.
consoleLogger.js:187 SystemInitializer: Initializing system: SystemLogicInterpreter...
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_dismiss'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'entity_speech'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'core_handle_follow'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'core_follow_auto_move'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_go_action'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'log_perceptible_events'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'enable_input_on_player_turn'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_stop_following'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'turn_ended'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'turn_started'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_wait'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_adjust_clothing'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'intimacy_handle_get_close'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_kiss_cheek'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'intimacy_handle_step_back'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_thumb_wipe_cheek'
consoleLogger.js:187 SystemLogicInterpreter: Finished caching rules. 7 event types have associated rules.
consoleLogger.js:187 SystemLogicInterpreter: SystemLogicInterpreter: initialized & subscribed to '*'.
consoleLogger.js:187 SystemInitializer: System SystemLogicInterpreter initialized successfully.
consoleLogger.js:187 SystemInitializer: Initializing system: PromptStaticContentService...
consoleLogger.js:187 PromptTextLoader: Loading prompt text from ./data/prompts/corePromptText.json.
consoleLogger.js:187 PromptTextLoader: Stored prompt text under type ‘prompt_text’ with id ‘core’.
consoleLogger.js:187 SystemInitializer: System PromptStaticContentService initialized successfully.
consoleLogger.js:187 SystemInitializer: System 'TurnManager' has no initialize() method, skipping.
consoleLogger.js:187 SystemInitializer: Initialization loop for tagged systems completed.
consoleLogger.js:187 InitializationService: Tagged system initialization complete.
consoleLogger.js:187 Initializing world entities...
consoleLogger.js:187 WorldInitializer: Starting world entity initialization process for world: isekai:world...
consoleLogger.js:187 WorldInitializer (Pass 1): Instantiating entities from world: isekai:world...
consoleLogger.js:187 WorldInitializer (Pass 1): Found 4 instances in world 'isekai:world'.
consoleLogger.js:187 WorldInitializer (Pass 1): Attempting to create entity instance 'isekai:adventurers_guild_instance' from definition 'isekai:adventurers_guild' with overrides: undefined
consoleLogger.js:187 EntityManager.createEntityInstance: Creating entity instance 'isekai:adventurers_guild_instance' from definition 'isekai:adventurers_guild' with overrides: undefined
consoleLogger.js:187 [EntityFactory] Creating entity instance isekai:adventurers_guild_instance from definition isekai:adventurers_guild.
consoleLogger.js:151 [EntityFactory] Entity instance 'isekai:adventurers_guild_instance' (def: 'isekai:adventurers_guild') created.
consoleLogger.js:187 EntityManager.createEntityInstance: Factory created entity with ID 'isekai:adventurers_guild_instance' and definitionId 'isekai:adventurers_guild'
consoleLogger.js:187 Entity 'isekai:adventurers_guild_instance' added to repository.
consoleLogger.js:187 Tracked entity isekai:adventurers_guild_instance
consoleLogger.js:187 VED: Validating payload for event 'core:entity_created' against schema 'core:entity_created#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:entity_created'.
consoleLogger.js:187 VED: Dispatching event 'core:entity_created' via EventBus... {instanceId: 'isekai:adventurers_guild_instance', definitionId: 'isekai:adventurers_guild', wasReconstructed: false, entity: Entity}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Received payload with entity: Entity {#data: EntityInstanceData}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity type: object
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity constructor: Entity
consoleLogger.js:187 WorldInitializer (Pass 1): Successfully instantiated entity isekai:adventurers_guild_instance (from definition: isekai:adventurers_guild)
consoleLogger.js:187 VED: EventDefinition not found for 'worldinit:entity_instantiated'. Skipping validation as allowed by options.
consoleLogger.js:187 VED: Dispatching event 'worldinit:entity_instantiated' via EventBus... {entityId: 'isekai:adventurers_guild_instance', instanceId: undefined, definitionId: 'isekai:adventurers_guild', worldName: 'isekai:world', reason: 'Initial World Load'}
consoleLogger.js:187 VED: Event 'worldinit:entity_instantiated' dispatch successful.
consoleLogger.js:187 VED: Event 'core:entity_created' dispatch successful.
consoleLogger.js:187 Dispatched 'worldinit:entity_instantiated' for entity isekai:adventurers_guild_instance.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:entity_created'.
consoleLogger.js:187 WorldInitializer (Pass 1): Attempting to create entity instance 'isekai:town_instance' from definition 'isekai:town' with overrides: undefined
consoleLogger.js:187 EntityManager.createEntityInstance: Creating entity instance 'isekai:town_instance' from definition 'isekai:town' with overrides: undefined
consoleLogger.js:187 [EntityFactory] Creating entity instance isekai:town_instance from definition isekai:town.
consoleLogger.js:151 [EntityFactory] Entity instance 'isekai:town_instance' (def: 'isekai:town') created.
consoleLogger.js:187 EntityManager.createEntityInstance: Factory created entity with ID 'isekai:town_instance' and definitionId 'isekai:town'
consoleLogger.js:187 Entity 'isekai:town_instance' added to repository.
consoleLogger.js:187 Tracked entity isekai:town_instance
consoleLogger.js:187 VED: Validating payload for event 'core:entity_created' against schema 'core:entity_created#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:entity_created'.
consoleLogger.js:187 VED: Dispatching event 'core:entity_created' via EventBus... {instanceId: 'isekai:town_instance', definitionId: 'isekai:town', wasReconstructed: false, entity: Entity}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Received payload with entity: Entity {#data: EntityInstanceData}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity type: object
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity constructor: Entity
consoleLogger.js:187 WorldInitializer (Pass 1): Successfully instantiated entity isekai:town_instance (from definition: isekai:town)
consoleLogger.js:187 VED: EventDefinition not found for 'worldinit:entity_instantiated'. Skipping validation as allowed by options.
consoleLogger.js:187 VED: Dispatching event 'worldinit:entity_instantiated' via EventBus... {entityId: 'isekai:town_instance', instanceId: undefined, definitionId: 'isekai:town', worldName: 'isekai:world', reason: 'Initial World Load'}
consoleLogger.js:187 VED: Event 'worldinit:entity_instantiated' dispatch successful.
consoleLogger.js:187 VED: Event 'core:entity_created' dispatch successful.
consoleLogger.js:187 Dispatched 'worldinit:entity_instantiated' for entity isekai:town_instance.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:entity_created'.
consoleLogger.js:187 WorldInitializer (Pass 1): Attempting to create entity instance 'isekai:hero_instance' from definition 'isekai:hero' with overrides: {core:position: {…}}
consoleLogger.js:187 EntityManager.createEntityInstance: Creating entity instance 'isekai:hero_instance' from definition 'isekai:hero' with overrides: {core:position: {…}}
consoleLogger.js:187 [EntityFactory] Creating entity instance isekai:hero_instance from definition isekai:hero.
consoleLogger.js:187 Injecting STM for isekai:hero_instance (def: isekai:hero)
consoleLogger.js:187 Injecting Notes for isekai:hero_instance (def: isekai:hero)
consoleLogger.js:187 Injecting Goals for isekai:hero_instance (def: isekai:hero)
consoleLogger.js:151 [EntityFactory] Entity instance 'isekai:hero_instance' (def: 'isekai:hero') created.
consoleLogger.js:187 EntityManager.createEntityInstance: Factory created entity with ID 'isekai:hero_instance' and definitionId 'isekai:hero'
consoleLogger.js:187 Entity 'isekai:hero_instance' added to repository.
consoleLogger.js:187 Tracked entity isekai:hero_instance
consoleLogger.js:187 VED: Validating payload for event 'core:entity_created' against schema 'core:entity_created#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:entity_created'.
consoleLogger.js:187 VED: Dispatching event 'core:entity_created' via EventBus... {instanceId: 'isekai:hero_instance', definitionId: 'isekai:hero', wasReconstructed: false, entity: Entity}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Received payload with entity: Entity {#data: EntityInstanceData}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity type: object
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity constructor: Entity
consoleLogger.js:187 SpatialSync: Added isekai:hero_instance to index at isekai:adventurers_guild_instance
consoleLogger.js:151 AnatomyGenerationService: Generating anatomy for entity 'isekai:hero_instance' using recipe 'anatomy:human_male'
consoleLogger.js:175 AnatomyGenerationService: Failed to generate anatomy for entity 'isekai:hero_instance' {error: ValidationError: Recipe 'anatomy:human_male' not found
    at AnatomyGenerationService.generateAnat…}
error @ consoleLogger.js:175
generateAnatomyIfNeeded @ anatomyGenerationService.js:178
#handleEntityCreated @ anatomyInitializationService.js:101
(anonymous) @ eventBus.js:136
dispatch @ eventBus.js:133
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
#dispatchEntityCreated @ entityLifecycleManager.js:177
createEntityInstance @ entityLifecycleManager.js:214
createEntityInstance @ entityManager.js:361
createEntityInstance @ entityManagerAdapter.js:38
#createInstance @ worldInitializer.js:235
#instantiateInstance @ worldInitializer.js:330
#processInstance @ worldInitializer.js:389
#instantiateEntitiesFromWorld @ worldInitializer.js:431
await in #instantiateEntitiesFromWorld
initializeWorldEntities @ worldInitializer.js:477
#initWorld @ initializationService.js:377
runInitializationSequence @ initializationService.js:286
await in runInitializationSequence
#executeInitializationSequence @ gameEngine.js:197
await in #executeInitializationSequence
#initializeNewGame @ gameEngine.js:269
await in #initializeNewGame
startNewGame @ gameEngine.js:313
startGameStage @ engineStages.js:87
beginGame @ main.js:217
(anonymous) @ game.html:326
Promise.then
(anonymous) @ game.html:323Understand this error
consoleLogger.js:187 WorldInitializer (Pass 1): Successfully instantiated entity isekai:hero_instance (from definition: isekai:hero)
consoleLogger.js:187 VED: EventDefinition not found for 'worldinit:entity_instantiated'. Skipping validation as allowed by options.
consoleLogger.js:187 VED: Dispatching event 'worldinit:entity_instantiated' via EventBus... {entityId: 'isekai:hero_instance', instanceId: undefined, definitionId: 'isekai:hero', worldName: 'isekai:world', reason: 'Initial World Load'}
consoleLogger.js:175 AnatomyInitializationService: Failed to generate anatomy for entity 'isekai:hero_instance' {error: ValidationError: Recipe 'anatomy:human_male' not found
    at AnatomyGenerationService.generateAnat…}
error @ consoleLogger.js:175
#handleEntityCreated @ anatomyInitializationService.js:111
await in #handleEntityCreated
(anonymous) @ eventBus.js:136
dispatch @ eventBus.js:133
#emitEvent @ validatedEventDispatcher.js:192
dispatch @ validatedEventDispatcher.js:222
dispatchResult.#executeSafely.payload.payload @ safeEventDispatcher.js:124
#executeSafely @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
#dispatchEntityCreated @ entityLifecycleManager.js:177
createEntityInstance @ entityLifecycleManager.js:214
createEntityInstance @ entityManager.js:361
createEntityInstance @ entityManagerAdapter.js:38
#createInstance @ worldInitializer.js:235
#instantiateInstance @ worldInitializer.js:330
#processInstance @ worldInitializer.js:389
#instantiateEntitiesFromWorld @ worldInitializer.js:431
await in #instantiateEntitiesFromWorld
initializeWorldEntities @ worldInitializer.js:477
#initWorld @ initializationService.js:377
runInitializationSequence @ initializationService.js:286
await in runInitializationSequence
#executeInitializationSequence @ gameEngine.js:197
await in #executeInitializationSequence
#initializeNewGame @ gameEngine.js:269
await in #initializeNewGame
startNewGame @ gameEngine.js:313
startGameStage @ engineStages.js:87
beginGame @ main.js:217
(anonymous) @ game.html:326
Promise.then
(anonymous) @ game.html:323Understand this error
consoleLogger.js:187 VED: Event 'worldinit:entity_instantiated' dispatch successful.
consoleLogger.js:187 VED: Event 'core:entity_created' dispatch successful.
consoleLogger.js:187 Dispatched 'worldinit:entity_instantiated' for entity isekai:hero_instance.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:entity_created'.
consoleLogger.js:187 WorldInitializer (Pass 1): Attempting to create entity instance 'isekai:ninja_instance' from definition 'isekai:ninja' with overrides: {core:position: {…}}
consoleLogger.js:187 EntityManager.createEntityInstance: Creating entity instance 'isekai:ninja_instance' from definition 'isekai:ninja' with overrides: {core:position: {…}}
consoleLogger.js:187 [EntityFactory] Creating entity instance isekai:ninja_instance from definition isekai:ninja.
consoleLogger.js:187 Injecting STM for isekai:ninja_instance (def: isekai:ninja)
consoleLogger.js:187 Injecting Notes for isekai:ninja_instance (def: isekai:ninja)
consoleLogger.js:187 Injecting Goals for isekai:ninja_instance (def: isekai:ninja)
consoleLogger.js:151 [EntityFactory] Entity instance 'isekai:ninja_instance' (def: 'isekai:ninja') created.
consoleLogger.js:187 EntityManager.createEntityInstance: Factory created entity with ID 'isekai:ninja_instance' and definitionId 'isekai:ninja'
consoleLogger.js:187 Entity 'isekai:ninja_instance' added to repository.
consoleLogger.js:187 Tracked entity isekai:ninja_instance
consoleLogger.js:187 VED: Validating payload for event 'core:entity_created' against schema 'core:entity_created#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:entity_created'.
consoleLogger.js:187 VED: Dispatching event 'core:entity_created' via EventBus... {instanceId: 'isekai:ninja_instance', definitionId: 'isekai:ninja', wasReconstructed: false, entity: Entity}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Received payload with entity: Entity {#data: EntityInstanceData}
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity type: object
consoleLogger.js:187 SpatialIndexSynchronizer.onEntityAdded: Entity constructor: Entity
consoleLogger.js:187 SpatialSync: Added isekai:ninja_instance to index at isekai:adventurers_guild_instance