SystemLogicInterpreter: Rule 'handle_massage_shoulders' actions skipped for event 'core:attempt_action' due to condition evaluating to false.
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_fondle_breasts] Condition found. Evaluating using jsonLogicDataForEval...
consoleLogger.js:187 JsonLogicEvaluationService: Resolving condition_ref 'sex:event-is-action-fondle-breasts'...
consoleLogger.js:187 JsonLogicEvaluationService: Evaluating rule: {"==":[{"var":"event.payload.actionId"},"sex:fondle_breasts"]}. Context keys: event, actor, target, context, globals, entities
consoleLogger.js:187 JsonLogicEvaluationService: Rule evaluation raw result: false, Final boolean: false
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_fondle_breasts] Condition evaluation raw result: false
consoleLogger.js:187 SystemLogicInterpreter: [Rule handle_fondle_breasts] Condition evaluation final boolean result: false
consoleLogger.js:187 SystemLogicInterpreter: Rule 'handle_fondle_breasts' actions skipped for event 'core:attempt_action' due to condition evaluating to false.
2
consoleLogger.js:187 VED: Event 'core:component_added' dispatch successful.
consoleLogger.js:187 VED: Event 'core:perceptible_event' dispatch successful.
consoleLogger.js:187 VED: Event 'core:display_successful_action_result' dispatch successful.
consoleLogger.js:187 VED: Event 'core:component_removed' dispatch successful.
consoleLogger.js:187 VED: Event 'core:turn_ended' dispatch successful.
consoleLogger.js:187 VED: Event 'core:attempt_action' dispatch successful.
consoleLogger.js:187 DispatchEventHandler: Event "core:display_successful_action_result" dispatched (Validated).
2
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:component_added'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:perceptible_event'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:component_removed'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:turn_ended'.
consoleLogger.js:187 SafeEventDispatcher: Successfully dispatched event 'core:attempt_action'.
consoleLogger.js:187 dispatchWithErrorHandling: Dispatch successful for ATTEMPT_ACTION_ID dispatch for pre-resolved action intimacy:adjust_clothing.
consoleLogger.js:187 CommandProcessor.dispatchAction: Successfully dispatched 'intimacy:adjust_clothing' for actor p_erotica:amaia_castillo_instance.
consoleLogger.js:187 ProcessingCommandState: Action dispatch completed for actor p_erotica:amaia_castillo_instance. Result success: true.
consoleLogger.js:187 CommandOutcomeInterpreter: Interpreting for p_erotica:amaia_castillo_instance. CP_Success=true, CP_TurnEndedOnFail=false, Input="adjust Iker Aguirre's clothing"
consoleLogger.js:187 Actor p_erotica:amaia_castillo_instance: CommandProcessor success for action 'intimacy:adjust_clothing'. Directive: WAIT_FOR_EVENT.
consoleLogger.js:187 ProcessingCommandState: Actor p_erotica:amaia_castillo_instance - Dispatch result interpreted to directive: WAIT_FOR_EVENT
consoleLogger.js:187 ProcessingCommandState: Actor p_erotica:amaia_castillo_instance - Resolved strategy WaitForTurnEndEventStrategy for directive WAIT_FOR_EVENT.
consoleLogger.js:187 WaitForTurnEndEventStrategy: Actor p_erotica:amaia_castillo_instance to wait for external event (e.g., core:turn_ended). Requesting transition to AwaitingExternalTurnEndState.
consoleLogger.js:187 ActorTurnHandler: Received request to transition to AwaitingExternalTurnEnd state.
consoleLogger.js:187 ActorTurnHandler: State Transition: ProcessingCommandState → AwaitingExternalTurnEndState
consoleLogger.js:187 ActorTurnHandler.onExitState hook: Exiting ProcessingCommandState to AwaitingExternalTurnEndState
consoleLogger.js:187 ProcessingCommandState: Exiting for actor p_erotica:amaia_castillo_instance while processing was true (now false). Transitioning to AwaitingExternalTurnEndState.
consoleLogger.js:187 ProcessingCommandState: Exiting. Actor: p_erotica:amaia_castillo_instance. Transitioning to AwaitingExternalTurnEndState.
consoleLogger.js:187 ActorTurnHandler.onEnterState hook: Entering AwaitingExternalTurnEndState from ProcessingCommandState
consoleLogger.js:187 AwaitingExternalTurnEndState: Entered. Actor: p_erotica:amaia_castillo_instance. Previous state: ProcessingCommandState.
consoleLogger.js:187 VED: Delegating subscription for event "core:turn_ended" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:turn_ended'.
consoleLogger.js:187 ActorTurnHandler._markAwaitingTurnEnd: State: Idle → State: Waiting for Actor 'p_erotica:amaia_castillo_instance'
consoleLogger.js:187 TurnContext for p_erotica:amaia_castillo_instance awaitingExternalEvent → true
consoleLogger.js:187 WaitForTurnEndEventStrategy: Transition to AwaitingExternalTurnEndState requested successfully for actor p_erotica:amaia_castillo_instance.
consoleLogger.js:187 ProcessingCommandState: Actor p_erotica:amaia_castillo_instance - Directive strategy WaitForTurnEndEventStrategy executed.
consoleLogger.js:187 ProcessingCommandState: Processing flag false after directive strategy for p_erotica:amaia_castillo_instance.
consoleLogger.js:187 TurnIdleState: Successfully transitioned to AwaitingActorDecisionState for actor p_erotica:amaia_castillo_instance.
consoleLogger.js:187 Received 'core:turn_ended' event for entity p_erotica:amaia_castillo_instance. Success: true. Current actor: p_erotica:amaia_castillo_instance
consoleLogger.js:187 Marking round as having had a successful turn (actor: p_erotica:amaia_castillo_instance).
consoleLogger.js:187 VED: Validating payload for event 'core:turn_processing_ended' against schema 'core:turn_processing_ended#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:turn_processing_ended'.
consoleLogger.js:187 VED: Dispatching event 'core:turn_processing_ended' via EventBus... 
{entityId: 'p_erotica:amaia_castillo_instance', actorType: 'ai'}
consoleLogger.js:187 Turn for current actor p_erotica:amaia_castillo_instance confirmed ended (Internal Status from Event: Success=true). Advancing turn...
consoleLogger.js:187 ActorTurnHandler: Normal apparent termination signaled.
consoleLogger.js:187 ▶️  Calling destroy() on handler (ActorTurnHandler) for completed turn p_erotica:amaia_castillo_instance
consoleLogger.js:187 ActorTurnHandler.destroy() invoked. Current state: AwaitingExternalTurnEndState
consoleLogger.js:187 ActorTurnHandler.destroy() invoked. Current state: AwaitingExternalTurnEndState
consoleLogger.js:187 ActorTurnHandler.destroy: Attempting to cancel active prompt in TurnContext for actor p_erotica:amaia_castillo_instance.
consoleLogger.js:187 ActorTurnHandler.destroy: Calling destroy() on current state AwaitingExternalTurnEndState.
consoleLogger.js:187 ActorTurnHandler._markAwaitingTurnEnd: State: Waiting for Actor 'p_erotica:amaia_castillo_instance' → State: Idle
consoleLogger.js:187 TurnContext for p_erotica:amaia_castillo_instance awaitingExternalEvent → false
consoleLogger.js:187 AwaitingExternalTurnEndState: Received destroy call. No state-specific cleanup by default in AbstractTurnState.
consoleLogger.js:187 ▶️  TurnManager.advanceTurn() initiating...
consoleLogger.js:187 TurnCycle.nextActor(): queue empty
consoleLogger.js:187 ActorTurnHandler.destroy: Ensuring transition to TurnIdleState (current: AwaitingExternalTurnEndState).
consoleLogger.js:187 ActorTurnHandler: State Transition: AwaitingExternalTurnEndState → TurnIdleState
consoleLogger.js:187 ActorTurnHandler.onExitState hook: Exiting AwaitingExternalTurnEndState to TurnIdleState
turnManager.js:315 TurnManager.advanceTurn: nextActor = undefined
consoleLogger.js:187 Turn queue is empty. Preparing for new round or stopping.
consoleLogger.js:187 Attempting to start a new round.
consoleLogger.js:187 RoundManager.startRound() initiating...
roundManager.js:24 RoundManager.startRound: allEntities = 
(50) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
consoleLogger.js:187 Found 2 actors to start the round: p_erotica:iker_aguirre_instance, p_erotica:amaia_castillo_instance
consoleLogger.js:187 TurnOrderService: Starting new round with strategy "round-robin".
consoleLogger.js:187 TurnOrderService: Cleared existing turn queue.
consoleLogger.js:187 TurnOrderService: Current round state cleared.
consoleLogger.js:187 TurnOrderService: Initialized SimpleRoundRobinQueue.
consoleLogger.js:187 TurnOrderService: Populated SimpleRoundRobinQueue with 2 entities.
consoleLogger.js:187 TurnOrderService: New round successfully started with 2 active entities.
consoleLogger.js:187 Successfully started a new round with 2 actors using the 'round-robin' strategy.
consoleLogger.js:187 VED: Event 'core:turn_processing_ended' dispatch successful.
consoleLogger.js:187 AwaitingExternalTurnEndState: Exiting. Actor: p_erotica:amaia_castillo_instance. Transitioning to TurnIdleState.
consoleLogger.js:187 New round started, recursively calling advanceTurn() to process the first turn.
consoleLogger.js:187 ▶️  TurnManager.advanceTurn() initiating...
consoleLogger.js:187 TurnOrderService: Advancing turn to entity "p_erotica:iker_aguirre_instance".
consoleLogger.js:187 TurnCycle.nextActor(): returning entity p_erotica:iker_aguirre_instance
consoleLogger.js:187 ActorTurnHandler.onEnterState hook: Entering TurnIdleState from AwaitingExternalTurnEndState
turnManager.js:315 TurnManager.advanceTurn: nextActor = p_erotica:iker_aguirre_instance
consoleLogger.js:187 Queue not empty, processing next entity.
consoleLogger.js:187 >>> Starting turn initiation for Entity: p_erotica:iker_aguirre_instance (player) <<<
consoleLogger.js:187 VED: Validating payload for event 'core:turn_started' against schema 'core:turn_started#payload'...
consoleLogger.js:187 VED: Payload validation SUCCEEDED for event 'core:turn_started'.
consoleLogger.js:187 VED: Dispatching event 'core:turn_started' via EventBus... 
{entityId: 'p_erotica:iker_aguirre_instance', entityType: 'player', entity: Entity}
consoleLogger.js:187 [LocationRenderer] Received 'core:turn_started' event. Payload: 
{entityId: 'p_erotica:iker_aguirre_instance', entityType: 'player', entity: Entity}
consoleLogger.js:187 [EntityDisplayDataProvider] getEntityLocationId: Found entity 'p_erotica:iker_aguirre_instance' with type: Entity, has getComponentData: true
consoleLogger.js:187 [EntityDisplayDataProvider] getEntityLocationId: Position component for 'p_erotica:iker_aguirre_instance': 
{locationId: 'p_erotica:outside_tables_coffee_shop_instance'}
consoleLogger.js:187 [LocationDisplayService] getLocationPortraitData: Constructed portrait path for location 'p_erotica:outside_tables_coffee_shop_instance': /data/mods/p_erotica/portraits/outside_tables_coffee_shop.png
consoleLogger.js:187 [EntityDisplayDataProvider] getEntityPortraitPath: Constructed portrait path for 'p_erotica:amaia_castillo_instance': /data/mods/p_erotica/portraits/amaia_castillo.png
consoleLogger.js:187 [LocationDataService] Found 1 other characters.
consoleLogger.js:187 [LocationRenderer] Rendering location: "outside tables of the coffee shop The Gilded Bean".
consoleLogger.js:187 [renderPortraitElements] Setting location portrait to /data/mods/p_erotica/portraits/outside_tables_coffee_shop.png
consoleLogger.js:187 [LocationRenderer] Added DOM listener for 'click' on element. 
{elementPath: '... > div#location-info-container > details#locati…-display > ul.location-detail-list > li.list-item'}
consoleLogger.js:187 [LocationRenderer] Location "outside tables of the coffee shop The Gilded Bean" display updated.
consoleLogger.js:187 [PerceptionLogRenderer] _handleTurnStartedForTest received 'core:turn_started' event. Payload: 
{entityId: 'p_erotica:iker_aguirre_instance', entityType: 'player', entity: Entity}
consoleLogger.js:187 [PerceptionLogRenderer] Current actor ID set to: p_erotica:iker_aguirre_instance
consoleLogger.js:187 [PerceptionLogRenderer] refreshList() called, invoking renderList().
consoleLogger.js:187 [PerceptionLogRenderer] renderList() called.
consoleLogger.js:187 [PerceptionLogRenderer] _getListItemsData called. Current actor ID: p_erotica:iker_aguirre_instance
consoleLogger.js:187 [PerceptionLogRenderer] Successfully fetched 7 log entries for actor 'p_erotica:iker_aguirre_instance'.
consoleLogger.js:187 [CurrentTurnActorRenderer] Handling core:turn_started for entityId: p_erotica:iker_aguirre_instance
consoleLogger.js:187 [EntityDisplayDataProvider] getEntityPortraitPath: Constructed portrait path for 'p_erotica:iker_aguirre_instance': /data/mods/p_erotica/portraits/iker_aguirre.png
consoleLogger.js:187 [CurrentTurnActorRenderer] Setting portrait for Iker Aguirre to /data/mods/p_erotica/portraits/iker_aguirre.png
consoleLogger.js:187 [ProcessingIndicatorController] Turn started for human player.
consoleLogger.js:187 ScopeCache: Turn started, clearing cache
consoleLogger.js:187 SystemLogicInterpreter: Received event: core:turn_started. Found 1 potential rule(s). 
{payload: {…}}
consoleLogger.js:187 SystemLogicInterpreter: [Event: core:turn_started] Assembling execution context via createNestedExecutionContext... (ActorID: p_erotica:iker_aguirre_instance, TargetID: null)
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Creating JsonLogicEvaluationContext for event type [core:turn_started]. ActorID: [p_erotica:iker_aguirre_instance], TargetID: [None]
consoleLogger.js:187 SystemLogicInterpreter: createJsonLogicContext: Found actor entity [p_erotica:iker_aguirre_instance]. Creating context entry.
﻿