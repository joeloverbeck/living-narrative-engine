RuleLoader [intimacy]: Determined baseRuleId for get_close.rule.json as 'intimacy_handle_get_close'.
consoleLogger.js:187 RuleLoader [intimacy]: Expanding macros in rule actions for get_close.rule.json.
consoleLogger.js:187 RuleLoader [intimacy]: All macros successfully expanded in get_close.rule.json.
consoleLogger.js:187 RuleLoader [intimacy]: Delegating storage for rule (base ID: 'intimacy_handle_get_close') from get_close.rule.json to base helper.
consoleLogger.js:187 RuleLoader [intimacy]: Storing item in registry. Category: 'rules', Qualified ID: 'intimacy:intimacy_handle_get_close', Base ID: 'intimacy_handle_get_close', Filename: 'get_close.rule.json'
consoleLogger.js:187 RuleLoader [intimacy]: Item 'intimacy:intimacy_handle_get_close' (Base: 'intimacy_handle_get_close') stored successfully in category 'rules'.
consoleLogger.js:187 RuleLoader [intimacy]: Successfully processed rule from get_close.rule.json. Returning final registry key: intimacy:intimacy_handle_get_close, Overwrite: false
consoleLogger.js:187 [intimacy] Successfully processed get_close.rule.json. Result: ID=intimacy:intimacy_handle_get_close, Overwrite=false
consoleLogger.js:187 [intimacy] Fetched data from ./data/mods/intimacy/rules/kiss_cheek.rule.json
consoleLogger.js:187 RuleLoader [intimacy]: Validating 'kiss_cheek.rule.json' against primary schema 'http://example.com/schemas/rule.schema.json'.
consoleLogger.js:187 RuleLoader [intimacy]: Processing validated rule item: kiss_cheek.rule.json from path ./data/mods/intimacy/rules/kiss_cheek.rule.json (Type: rules)
consoleLogger.js:187 RuleLoader [intimacy]: Using rule_id 'handle_kiss_cheek' from data in kiss_cheek.rule.json.
consoleLogger.js:187 RuleLoader [intimacy]: Determined baseRuleId for kiss_cheek.rule.json as 'handle_kiss_cheek'.
consoleLogger.js:187 RuleLoader [intimacy]: Expanding macros in rule actions for kiss_cheek.rule.json.
consoleLogger.js:187 RuleLoader [intimacy]: All macros successfully expanded in kiss_cheek.rule.json.
consoleLogger.js:187 RuleLoader [intimacy]: Delegating storage for rule (base ID: 'handle_kiss_cheek') from kiss_cheek.rule.json to base helper.
consoleLogger.js:187 RuleLoader [intimacy]: Storing item in registry. Category: 'rules', Qualified ID: 'intimacy:handle_kiss_cheek', Base ID: 'handle_kiss_cheek', Filename: 'kiss_cheek.rule.json'
consoleLogger.js:187 RuleLoader [intimacy]: Item 'intimacy:handle_kiss_cheek' (Base: 'handle_kiss_cheek') stored successfully in category 'rules'.
consoleLogger.js:187 RuleLoader [intimacy]: Successfully processed rule from kiss_cheek.rule.json. Returning final registry key: intimacy:handle_kiss_cheek, Overwrite: false
consoleLogger.js:187 [intimacy] Successfully processed kiss_cheek.rule.json. Result: ID=intimacy:handle_kiss_cheek, Overwrite=false
consoleLogger.js:151 Mod [intimacy] - Processed 5/5 rules items.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Processing scopes content with 1 files...
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Found content for 'scopes'. Invoking loader 'ScopeLoader'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'intimacy'.
consoleLogger.js:187 Found 1 potential scopes files to process for mod intimacy.
consoleLogger.js:187 [intimacy] Resolved path for close_actors.scope: ./data/mods/intimacy/scopes/close_actors.scope
consoleLogger.js:187 [intimacy] Fetched data from ./data/mods/intimacy/scopes/close_actors.scope
consoleLogger.js:187 ScopeLoader [intimacy]: Skipping primary schema validation for 'close_actors.scope' as no primary schema ID is configured for this loader.
consoleLogger.js:187 ScopeLoader [intimacy]: Storing item in registry. Category: 'scopes', Qualified ID: 'intimacy:close_actors', Base ID: 'close_actors', Filename: 'close_actors.scope'
consoleLogger.js:187 ScopeLoader [intimacy]: Item 'intimacy:close_actors' (Base: 'close_actors') stored successfully in category 'scopes'.
consoleLogger.js:187 [intimacy] Successfully processed close_actors.scope. Result: ID=intimacy:close_actors, Overwrite=false
consoleLogger.js:151 Mod [intimacy] - Processed 1/1 scopes items.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Skipping content type 'entityDefinitions' (key: 'entities.definitions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Skipping content type 'anatomyRecipes' (key: 'recipes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Skipping content type 'anatomyBlueprints' (key: 'blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Skipping content type 'anatomyFormatting' (key: 'anatomyFormatting') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, definitions]: Content loading loop took 30.20 ms.
consoleLogger.js:187 Mod 'intimacy' phase 'definitions' loaded in 30.20ms: actions(5), components(1), conditions(6), rules(5), scopes(1) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: intimacy, phase: definitions ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'descriptors' (lowercase: 'descriptors'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod descriptors, manifest found: true
consoleLogger.js:187 --- Loading content for mod: descriptors, phase: definitions ---
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Processing components content with 13 files...
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Found content for 'components'. Invoking loader 'ComponentLoader'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'descriptors'.
consoleLogger.js:187 Found 13 potential components files to process for mod descriptors.
consoleLogger.js:187 [descriptors] Resolved path for build.component.json: ./data/mods/descriptors/components/build.component.json
consoleLogger.js:187 [descriptors] Resolved path for color_basic.component.json: ./data/mods/descriptors/components/color_basic.component.json
consoleLogger.js:187 [descriptors] Resolved path for color_extended.component.json: ./data/mods/descriptors/components/color_extended.component.json
consoleLogger.js:187 [descriptors] Resolved path for firmness.component.json: ./data/mods/descriptors/components/firmness.component.json
consoleLogger.js:187 [descriptors] Resolved path for hair_style.component.json: ./data/mods/descriptors/components/hair_style.component.json
consoleLogger.js:187 [descriptors] Resolved path for length_category.component.json: ./data/mods/descriptors/components/length_category.component.json
consoleLogger.js:187 [descriptors] Resolved path for length_hair.component.json: ./data/mods/descriptors/components/length_hair.component.json
consoleLogger.js:187 [descriptors] Resolved path for shape_eye.component.json: ./data/mods/descriptors/components/shape_eye.component.json
consoleLogger.js:187 [descriptors] Resolved path for shape_general.component.json: ./data/mods/descriptors/components/shape_general.component.json
consoleLogger.js:187 [descriptors] Resolved path for size_category.component.json: ./data/mods/descriptors/components/size_category.component.json
consoleLogger.js:187 [descriptors] Resolved path for size_specific.component.json: ./data/mods/descriptors/components/size_specific.component.json
consoleLogger.js:187 [descriptors] Resolved path for texture.component.json: ./data/mods/descriptors/components/texture.component.json
consoleLogger.js:187 [descriptors] Resolved path for weight_feel.component.json: ./data/mods/descriptors/components/weight_feel.component.json
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/build.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'build.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: build.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:build'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:build' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:build' from file 'build.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:build', Base ID: 'build', Filename: 'build.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:build' (Base: 'build') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from build.component.json. Returning final registry key: descriptors:build, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed build.component.json. Result: ID=descriptors:build, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/color_basic.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'color_basic.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: color_basic.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:color_basic'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:color_basic' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:color_basic' from file 'color_basic.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:color_basic', Base ID: 'color_basic', Filename: 'color_basic.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:color_basic' (Base: 'color_basic') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from color_basic.component.json. Returning final registry key: descriptors:color_basic, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed color_basic.component.json. Result: ID=descriptors:color_basic, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/color_extended.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'color_extended.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: color_extended.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:color_extended'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:color_extended' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:color_extended' from file 'color_extended.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:color_extended', Base ID: 'color_extended', Filename: 'color_extended.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:color_extended' (Base: 'color_extended') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from color_extended.component.json. Returning final registry key: descriptors:color_extended, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed color_extended.component.json. Result: ID=descriptors:color_extended, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/firmness.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'firmness.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: firmness.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:firmness'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:firmness' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:firmness' from file 'firmness.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:firmness', Base ID: 'firmness', Filename: 'firmness.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:firmness' (Base: 'firmness') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from firmness.component.json. Returning final registry key: descriptors:firmness, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed firmness.component.json. Result: ID=descriptors:firmness, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/hair_style.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'hair_style.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: hair_style.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:hair_style'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:hair_style' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:hair_style' from file 'hair_style.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:hair_style', Base ID: 'hair_style', Filename: 'hair_style.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:hair_style' (Base: 'hair_style') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from hair_style.component.json. Returning final registry key: descriptors:hair_style, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed hair_style.component.json. Result: ID=descriptors:hair_style, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/length_category.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'length_category.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: length_category.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:length_category'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:length_category' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:length_category' from file 'length_category.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:length_category', Base ID: 'length_category', Filename: 'length_category.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:length_category' (Base: 'length_category') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from length_category.component.json. Returning final registry key: descriptors:length_category, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed length_category.component.json. Result: ID=descriptors:length_category, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/length_hair.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'length_hair.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: length_hair.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:length_hair'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:length_hair' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:length_hair' from file 'length_hair.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:length_hair', Base ID: 'length_hair', Filename: 'length_hair.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:length_hair' (Base: 'length_hair') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from length_hair.component.json. Returning final registry key: descriptors:length_hair, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed length_hair.component.json. Result: ID=descriptors:length_hair, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/shape_eye.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'shape_eye.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: shape_eye.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:shape_eye'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:shape_eye' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:shape_eye' from file 'shape_eye.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:shape_eye', Base ID: 'shape_eye', Filename: 'shape_eye.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:shape_eye' (Base: 'shape_eye') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from shape_eye.component.json. Returning final registry key: descriptors:shape_eye, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed shape_eye.component.json. Result: ID=descriptors:shape_eye, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/shape_general.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'shape_general.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: shape_general.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:shape_general'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:shape_general' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:shape_general' from file 'shape_general.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:shape_general', Base ID: 'shape_general', Filename: 'shape_general.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:shape_general' (Base: 'shape_general') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from shape_general.component.json. Returning final registry key: descriptors:shape_general, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed shape_general.component.json. Result: ID=descriptors:shape_general, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/size_category.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'size_category.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: size_category.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:size_category'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:size_category' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:size_category' from file 'size_category.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:size_category', Base ID: 'size_category', Filename: 'size_category.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:size_category' (Base: 'size_category') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from size_category.component.json. Returning final registry key: descriptors:size_category, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed size_category.component.json. Result: ID=descriptors:size_category, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/size_specific.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'size_specific.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: size_specific.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:size_specific'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:size_specific' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:size_specific' from file 'size_specific.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:size_specific', Base ID: 'size_specific', Filename: 'size_specific.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:size_specific' (Base: 'size_specific') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from size_specific.component.json. Returning final registry key: descriptors:size_specific, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed size_specific.component.json. Result: ID=descriptors:size_specific, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/texture.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'texture.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: texture.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:texture'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:texture' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:texture' from file 'texture.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:texture', Base ID: 'texture', Filename: 'texture.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:texture' (Base: 'texture') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from texture.component.json. Returning final registry key: descriptors:texture, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed texture.component.json. Result: ID=descriptors:texture, Overwrite=false
consoleLogger.js:187 [descriptors] Fetched data from ./data/mods/descriptors/components/weight_feel.component.json
consoleLogger.js:187 ComponentLoader [descriptors]: Validating 'weight_feel.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Processing fetched item: weight_feel.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'descriptors:weight_feel'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'descriptors:weight_feel' verified as retrievable.
consoleLogger.js:187 ComponentLoader [descriptors]: Registered dataSchema for component ID 'descriptors:weight_feel' from file 'weight_feel.component.json'.
consoleLogger.js:187 ComponentLoader [descriptors]: Storing item in registry. Category: 'components', Qualified ID: 'descriptors:weight_feel', Base ID: 'weight_feel', Filename: 'weight_feel.component.json'
consoleLogger.js:187 ComponentLoader [descriptors]: Item 'descriptors:weight_feel' (Base: 'weight_feel') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [descriptors]: Successfully processed component definition from weight_feel.component.json. Returning final registry key: descriptors:weight_feel, Overwrite: false
consoleLogger.js:187 [descriptors] Successfully processed weight_feel.component.json. Result: ID=descriptors:weight_feel, Overwrite=false
consoleLogger.js:151 Mod [descriptors] - Processed 13/13 components items.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'actions' (key: 'actions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'entityDefinitions' (key: 'entities.definitions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyRecipes' (key: 'recipes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyBlueprints' (key: 'blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Skipping content type 'anatomyFormatting' (key: 'anatomyFormatting') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, definitions]: Content loading loop took 15.20 ms.
consoleLogger.js:187 Mod 'descriptors' phase 'definitions' loaded in 15.20ms: components(13) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: descriptors, phase: definitions ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'anatomy' (lowercase: 'anatomy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod anatomy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: anatomy, phase: definitions ---
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing components content with 4 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'components'. Invoking loader 'ComponentLoader'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'anatomy'.
consoleLogger.js:187 Found 4 potential components files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for body.component.json: ./data/mods/anatomy/components/body.component.json
consoleLogger.js:187 [anatomy] Resolved path for joint.component.json: ./data/mods/anatomy/components/joint.component.json
consoleLogger.js:187 [anatomy] Resolved path for part.component.json: ./data/mods/anatomy/components/part.component.json
consoleLogger.js:187 [anatomy] Resolved path for sockets.component.json: ./data/mods/anatomy/components/sockets.component.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/body.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'body.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: body.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:body'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:body' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:body' from file 'body.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:body', Base ID: 'body', Filename: 'body.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:body' (Base: 'body') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from body.component.json. Returning final registry key: anatomy:body, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed body.component.json. Result: ID=anatomy:body, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/joint.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'joint.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: joint.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:joint'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:joint' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:joint' from file 'joint.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:joint', Base ID: 'joint', Filename: 'joint.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:joint' (Base: 'joint') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from joint.component.json. Returning final registry key: anatomy:joint, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed joint.component.json. Result: ID=anatomy:joint, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/part.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'part.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: part.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:part'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:part' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:part' from file 'part.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:part', Base ID: 'part', Filename: 'part.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:part' (Base: 'part') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from part.component.json. Returning final registry key: anatomy:part, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed part.component.json. Result: ID=anatomy:part, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/components/sockets.component.json
consoleLogger.js:187 ComponentLoader [anatomy]: Validating 'sockets.component.json' against primary schema 'http://example.com/schemas/component.schema.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Processing fetched item: sockets.component.json (Type: components)
consoleLogger.js:187 AjvSchemaValidator: Successfully added schema 'anatomy:sockets'.
consoleLogger.js:187 AjvSchemaValidator: Schema 'anatomy:sockets' verified as retrievable.
consoleLogger.js:187 ComponentLoader [anatomy]: Registered dataSchema for component ID 'anatomy:sockets' from file 'sockets.component.json'.
consoleLogger.js:187 ComponentLoader [anatomy]: Storing item in registry. Category: 'components', Qualified ID: 'anatomy:sockets', Base ID: 'sockets', Filename: 'sockets.component.json'
consoleLogger.js:187 ComponentLoader [anatomy]: Item 'anatomy:sockets' (Base: 'sockets') stored successfully in category 'components'.
consoleLogger.js:187 ComponentLoader [anatomy]: Successfully processed component definition from sockets.component.json. Returning final registry key: anatomy:sockets, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed sockets.component.json. Result: ID=anatomy:sockets, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 4/4 components items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'actions' (key: 'actions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing entities.definitions content with 25 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'entities.definitions'. Invoking loader 'EntityDefinitionLoader'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entityDefinitions definitions for mod 'anatomy'.
consoleLogger.js:187 Found 25 potential entities.definitions files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for human_asshole.entity.json: ./data/mods/anatomy/entities/definitions/human_asshole.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_breast.entity.json: ./data/mods/anatomy/entities/definitions/human_breast.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_breast_d_cup.entity.json: ./data/mods/anatomy/entities/definitions/human_breast_d_cup.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_breast_g_cup.entity.json: ./data/mods/anatomy/entities/definitions/human_breast_g_cup.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye.entity.json: ./data/mods/anatomy/entities/definitions/human_eye.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_blue.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_blue.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_brown.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_brown.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_cobalt.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_cobalt.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_eye_green.entity.json: ./data/mods/anatomy/entities/definitions/human_eye_green.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_female_torso.entity.json: ./data/mods/anatomy/entities/definitions/human_female_torso.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hair.entity.json: ./data/mods/anatomy/entities/definitions/human_hair.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hair_blonde.entity.json: ./data/mods/anatomy/entities/definitions/human_hair_blonde.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hair_raven.entity.json: ./data/mods/anatomy/entities/definitions/human_hair_raven.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_hand.entity.json: ./data/mods/anatomy/entities/definitions/human_hand.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_leg_shapely.entity.json: ./data/mods/anatomy/entities/definitions/human_leg_shapely.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_male_torso.entity.json: ./data/mods/anatomy/entities/definitions/human_male_torso.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_penis.entity.json: ./data/mods/anatomy/entities/definitions/human_penis.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_testicle.entity.json: ./data/mods/anatomy/entities/definitions/human_testicle.entity.json
consoleLogger.js:187 [anatomy] Resolved path for human_vagina.entity.json: ./data/mods/anatomy/entities/definitions/human_vagina.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_arm.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_arm.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_ear.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_ear.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_head.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_head.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_leg.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_leg.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_mouth.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_mouth.entity.json
consoleLogger.js:187 [anatomy] Resolved path for humanoid_nose.entity.json: ./data/mods/anatomy/entities/definitions/humanoid_nose.entity.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_asshole.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_asshole.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_asshole.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_asshole' and derived base ID 'human_asshole' from human_asshole.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 2 components for entity 'anatomy:human_asshole' from human_asshole.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_asshole' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_asshole' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_asshole' from human_asshole.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_asshole' from human_asshole.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_asshole', Base ID: 'human_asshole', Filename: 'human_asshole.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_asshole' (Base: 'human_asshole') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_asshole.entity.json'. Returning final registry key: anatomy:human_asshole, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_asshole.entity.json. Result: ID=anatomy:human_asshole, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_breast.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_breast.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_breast.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_breast' and derived base ID 'human_breast' from human_breast.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_breast' from human_breast.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_breast' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_specific' in entity 'anatomy:human_breast' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:firmness' in entity 'anatomy:human_breast' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:human_breast' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_breast' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_breast' from human_breast.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_breast' from human_breast.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_breast', Base ID: 'human_breast', Filename: 'human_breast.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_breast' (Base: 'human_breast') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_breast.entity.json'. Returning final registry key: anatomy:human_breast, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_breast.entity.json. Result: ID=anatomy:human_breast, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_breast_d_cup.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_breast_d_cup.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_breast_d_cup.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_breast_d_cup' and derived base ID 'human_breast_d_cup' from human_breast_d_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_specific' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:weight_feel' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:firmness' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_breast_d_cup' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_breast_d_cup' from human_breast_d_cup.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_breast_d_cup', Base ID: 'human_breast_d_cup', Filename: 'human_breast_d_cup.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_breast_d_cup' (Base: 'human_breast_d_cup') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_breast_d_cup.entity.json'. Returning final registry key: anatomy:human_breast_d_cup, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_breast_d_cup.entity.json. Result: ID=anatomy:human_breast_d_cup, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_breast_g_cup.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_breast_g_cup.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_breast_g_cup.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_breast_g_cup' and derived base ID 'human_breast_g_cup' from human_breast_g_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_specific' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:weight_feel' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:firmness' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_breast_g_cup' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_breast_g_cup' from human_breast_g_cup.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_breast_g_cup', Base ID: 'human_breast_g_cup', Filename: 'human_breast_g_cup.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_breast_g_cup' (Base: 'human_breast_g_cup') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_breast_g_cup.entity.json'. Returning final registry key: anatomy:human_breast_g_cup, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_breast_g_cup.entity.json. Result: ID=anatomy:human_breast_g_cup, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye' and derived base ID 'human_eye' from human_eye.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye' from human_eye.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye' from human_eye.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye' from human_eye.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye', Base ID: 'human_eye', Filename: 'human_eye.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye' (Base: 'human_eye') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_eye.entity.json'. Returning final registry key: anatomy:human_eye, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye.entity.json. Result: ID=anatomy:human_eye, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_blue.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_blue.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_blue.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_blue' and derived base ID 'human_eye_blue' from human_eye_blue.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_blue' from human_eye_blue.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_blue' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_blue' from human_eye_blue.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_blue' from human_eye_blue.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_blue', Base ID: 'human_eye_blue', Filename: 'human_eye_blue.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_blue' (Base: 'human_eye_blue') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_eye_blue.entity.json'. Returning final registry key: anatomy:human_eye_blue, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_blue.entity.json. Result: ID=anatomy:human_eye_blue, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_cobalt.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_cobalt.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_cobalt.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_cobalt' and derived base ID 'human_eye_cobalt' from human_eye_cobalt.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_cobalt' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_cobalt' from human_eye_cobalt.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_cobalt', Base ID: 'human_eye_cobalt', Filename: 'human_eye_cobalt.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_cobalt' (Base: 'human_eye_cobalt') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_eye_cobalt.entity.json'. Returning final registry key: anatomy:human_eye_cobalt, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_cobalt.entity.json. Result: ID=anatomy:human_eye_cobalt, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_green.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_green.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_green.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_green' and derived base ID 'human_eye_green' from human_eye_green.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_green' from human_eye_green.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_green' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_green' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_green' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_green' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_green' from human_eye_green.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_green' from human_eye_green.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_green', Base ID: 'human_eye_green', Filename: 'human_eye_green.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_green' (Base: 'human_eye_green') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_eye_green.entity.json'. Returning final registry key: anatomy:human_eye_green, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_green.entity.json. Result: ID=anatomy:human_eye_green, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_eye_brown.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_eye_brown.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_eye_brown.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_eye_brown' and derived base ID 'human_eye_brown' from human_eye_brown.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_eye_brown' from human_eye_brown.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_eye' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_eye_brown' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_eye_brown' from human_eye_brown.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_eye_brown' from human_eye_brown.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_eye_brown', Base ID: 'human_eye_brown', Filename: 'human_eye_brown.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_eye_brown' (Base: 'human_eye_brown') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_eye_brown.entity.json'. Returning final registry key: anatomy:human_eye_brown, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_eye_brown.entity.json. Result: ID=anatomy:human_eye_brown, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_female_torso.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_female_torso.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_female_torso.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_female_torso' and derived base ID 'human_female_torso' from human_female_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:human_female_torso' from human_female_torso.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_female_torso' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_female_torso' from human_female_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_female_torso' from human_female_torso.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_female_torso', Base ID: 'human_female_torso', Filename: 'human_female_torso.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_female_torso' (Base: 'human_female_torso') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_female_torso.entity.json'. Returning final registry key: anatomy:human_female_torso, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_female_torso.entity.json. Result: ID=anatomy:human_female_torso, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hair.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hair.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hair.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hair' and derived base ID 'human_hair' from human_hair.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_hair' from human_hair.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hair' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_basic' in entity 'anatomy:human_hair' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_hair' in entity 'anatomy:human_hair' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:hair_style' in entity 'anatomy:human_hair' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hair' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hair' from human_hair.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hair' from human_hair.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hair', Base ID: 'human_hair', Filename: 'human_hair.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hair' (Base: 'human_hair') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_hair.entity.json'. Returning final registry key: anatomy:human_hair, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hair.entity.json. Result: ID=anatomy:human_hair, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hair_blonde.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hair_blonde.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hair_blonde.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hair_blonde' and derived base ID 'human_hair_blonde' from human_hair_blonde.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_hair' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:hair_style' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hair_blonde' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hair_blonde' from human_hair_blonde.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hair_blonde', Base ID: 'human_hair_blonde', Filename: 'human_hair_blonde.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hair_blonde' (Base: 'human_hair_blonde') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_hair_blonde.entity.json'. Returning final registry key: anatomy:human_hair_blonde, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hair_blonde.entity.json. Result: ID=anatomy:human_hair_blonde, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hair_raven.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hair_raven.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hair_raven.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hair_raven' and derived base ID 'human_hair_raven' from human_hair_raven.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 5 components for entity 'anatomy:human_hair_raven' from human_hair_raven.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:color_extended' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_hair' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:hair_style' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hair_raven' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hair_raven' from human_hair_raven.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hair_raven' from human_hair_raven.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hair_raven', Base ID: 'human_hair_raven', Filename: 'human_hair_raven.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hair_raven' (Base: 'human_hair_raven') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_hair_raven.entity.json'. Returning final registry key: anatomy:human_hair_raven, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hair_raven.entity.json. Result: ID=anatomy:human_hair_raven, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_hand.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_hand.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_hand.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_hand' and derived base ID 'human_hand' from human_hand.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_hand' from human_hand.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_hand' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:human_hand' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:human_hand' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_hand' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_hand' from human_hand.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_hand' from human_hand.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_hand', Base ID: 'human_hand', Filename: 'human_hand.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_hand' (Base: 'human_hand') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_hand.entity.json'. Returning final registry key: anatomy:human_hand, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_hand.entity.json. Result: ID=anatomy:human_hand, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_leg_shapely.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_leg_shapely.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_leg_shapely.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_leg_shapely' and derived base ID 'human_leg_shapely' from human_leg_shapely.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:length_category' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:build' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_leg_shapely' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_leg_shapely' from human_leg_shapely.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_leg_shapely', Base ID: 'human_leg_shapely', Filename: 'human_leg_shapely.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_leg_shapely' (Base: 'human_leg_shapely') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_leg_shapely.entity.json'. Returning final registry key: anatomy:human_leg_shapely, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_leg_shapely.entity.json. Result: ID=anatomy:human_leg_shapely, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_male_torso.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_male_torso.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_male_torso.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_male_torso' and derived base ID 'human_male_torso' from human_male_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:human_male_torso' from human_male_torso.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_male_torso' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_male_torso' from human_male_torso.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_male_torso' from human_male_torso.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_male_torso', Base ID: 'human_male_torso', Filename: 'human_male_torso.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_male_torso' (Base: 'human_male_torso') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_male_torso.entity.json'. Returning final registry key: anatomy:human_male_torso, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_male_torso.entity.json. Result: ID=anatomy:human_male_torso, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_penis.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_penis.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_penis.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_penis' and derived base ID 'human_penis' from human_penis.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:human_penis' from human_penis.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_penis' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:human_penis' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_penis' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_penis' from human_penis.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_penis' from human_penis.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_penis', Base ID: 'human_penis', Filename: 'human_penis.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_penis' (Base: 'human_penis') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_penis.entity.json'. Returning final registry key: anatomy:human_penis, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_penis.entity.json. Result: ID=anatomy:human_penis, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_testicle.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_testicle.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_testicle.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_testicle' and derived base ID 'human_testicle' from human_testicle.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:human_testicle' from human_testicle.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_testicle' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:human_testicle' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:human_testicle' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_testicle' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_testicle' from human_testicle.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_testicle' from human_testicle.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_testicle', Base ID: 'human_testicle', Filename: 'human_testicle.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_testicle' (Base: 'human_testicle') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_testicle.entity.json'. Returning final registry key: anatomy:human_testicle, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_testicle.entity.json. Result: ID=anatomy:human_testicle, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/human_vagina.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'human_vagina.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): human_vagina.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:human_vagina' and derived base ID 'human_vagina' from human_vagina.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 2 components for entity 'anatomy:human_vagina' from human_vagina.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:human_vagina' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:human_vagina' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:human_vagina' from human_vagina.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:human_vagina' from human_vagina.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:human_vagina', Base ID: 'human_vagina', Filename: 'human_vagina.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:human_vagina' (Base: 'human_vagina') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'human_vagina.entity.json'. Returning final registry key: anatomy:human_vagina, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_vagina.entity.json. Result: ID=anatomy:human_vagina, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_arm.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_arm.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_arm.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_arm' and derived base ID 'humanoid_arm' from humanoid_arm.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_arm' from humanoid_arm.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_arm' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_arm' from humanoid_arm.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_arm' from humanoid_arm.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_arm', Base ID: 'humanoid_arm', Filename: 'humanoid_arm.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_arm' (Base: 'humanoid_arm') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_arm.entity.json'. Returning final registry key: anatomy:humanoid_arm, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_arm.entity.json. Result: ID=anatomy:humanoid_arm, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_ear.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_ear.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_ear.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_ear' and derived base ID 'humanoid_ear' from humanoid_ear.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:humanoid_ear' from humanoid_ear.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_ear' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:humanoid_ear' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:humanoid_ear' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_ear' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_ear' from humanoid_ear.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_ear' from humanoid_ear.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_ear', Base ID: 'humanoid_ear', Filename: 'humanoid_ear.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_ear' (Base: 'humanoid_ear') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_ear.entity.json'. Returning final registry key: anatomy:humanoid_ear, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_ear.entity.json. Result: ID=anatomy:humanoid_ear, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_head.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_head.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_head.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_head' and derived base ID 'humanoid_head' from humanoid_head.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_head' from humanoid_head.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_head' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_head' from humanoid_head.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_head' from humanoid_head.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_head', Base ID: 'humanoid_head', Filename: 'humanoid_head.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_head' (Base: 'humanoid_head') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_head.entity.json'. Returning final registry key: anatomy:humanoid_head, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_head.entity.json. Result: ID=anatomy:humanoid_head, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_leg.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_leg.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_leg.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_leg' and derived base ID 'humanoid_leg' from humanoid_leg.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 3 components for entity 'anatomy:humanoid_leg' from humanoid_leg.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:sockets' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_leg' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_leg' from humanoid_leg.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_leg' from humanoid_leg.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_leg', Base ID: 'humanoid_leg', Filename: 'humanoid_leg.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_leg' (Base: 'humanoid_leg') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_leg.entity.json'. Returning final registry key: anatomy:humanoid_leg, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_leg.entity.json. Result: ID=anatomy:humanoid_leg, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_mouth.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_mouth.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_mouth.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_mouth' and derived base ID 'humanoid_mouth' from humanoid_mouth.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:humanoid_mouth' from humanoid_mouth.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_mouth' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:humanoid_mouth' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:humanoid_mouth' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_mouth' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_mouth' from humanoid_mouth.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_mouth' from humanoid_mouth.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_mouth', Base ID: 'humanoid_mouth', Filename: 'humanoid_mouth.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_mouth' (Base: 'humanoid_mouth') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_mouth.entity.json'. Returning final registry key: anatomy:humanoid_mouth, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_mouth.entity.json. Result: ID=anatomy:humanoid_mouth, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/entities/definitions/humanoid_nose.entity.json
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Validating 'humanoid_nose.entity.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [anatomy]: Processing fetched item (post-primary validation): humanoid_nose.entity.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [anatomy]: Extracted full ID 'anatomy:humanoid_nose' and derived base ID 'humanoid_nose' from humanoid_nose.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Validating 4 components for entity 'anatomy:humanoid_nose' from humanoid_nose.entity.json...
consoleLogger.js:187    - Component 'anatomy:part' in entity 'anatomy:humanoid_nose' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:shape_general' in entity 'anatomy:humanoid_nose' passed runtime validation.
consoleLogger.js:187    - Component 'descriptors:size_category' in entity 'anatomy:humanoid_nose' passed runtime validation.
consoleLogger.js:187    - Component 'core:name' in entity 'anatomy:humanoid_nose' passed runtime validation.
consoleLogger.js:187 EntityLoader [anatomy]: All runtime component validations passed for entity 'anatomy:humanoid_nose' from humanoid_nose.entity.json.
consoleLogger.js:187 EntityLoader [anatomy]: Created EntityDefinition instance for 'anatomy:humanoid_nose' from humanoid_nose.entity.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'anatomy:humanoid_nose', Base ID: 'humanoid_nose', Filename: 'humanoid_nose.entity.json'
consoleLogger.js:187 EntityDefinitionLoader [anatomy]: Item 'anatomy:humanoid_nose' (Base: 'humanoid_nose') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [anatomy]: Successfully processed entityDefinitions file 'humanoid_nose.entity.json'. Returning final registry key: anatomy:humanoid_nose, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed humanoid_nose.entity.json. Result: ID=anatomy:humanoid_nose, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 25/25 entities.definitions items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing recipes content with 3 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'recipes'. Invoking loader 'AnatomyRecipeLoader'.
consoleLogger.js:151 AnatomyRecipeLoader: Loading anatomyRecipes definitions for mod 'anatomy'.
consoleLogger.js:187 Found 3 potential recipes files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for gorgeous_milf.recipe.json: ./data/mods/anatomy/recipes/gorgeous_milf.recipe.json
consoleLogger.js:187 [anatomy] Resolved path for human_female.recipe.json: ./data/mods/anatomy/recipes/human_female.recipe.json
consoleLogger.js:187 [anatomy] Resolved path for human_male.recipe.json: ./data/mods/anatomy/recipes/human_male.recipe.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/recipes/gorgeous_milf.recipe.json
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Validating 'gorgeous_milf.recipe.json' against primary schema 'http://example.com/schemas/anatomy.recipe.schema.json'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Processing fetched item: gorgeous_milf.recipe.json (Type: anatomyRecipes)
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Storing item in registry. Category: 'anatomyRecipes', Qualified ID: 'anatomy:gorgeous_milf', Base ID: 'gorgeous_milf', Filename: 'gorgeous_milf.recipe.json'
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Item 'anatomy:gorgeous_milf' (Base: 'gorgeous_milf') stored successfully in category 'anatomyRecipes'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Successfully processed anatomy recipe from gorgeous_milf.recipe.json. Final registry key: anatomy:gorgeous_milf, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed gorgeous_milf.recipe.json. Result: ID=anatomy:gorgeous_milf, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/recipes/human_female.recipe.json
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Validating 'human_female.recipe.json' against primary schema 'http://example.com/schemas/anatomy.recipe.schema.json'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Processing fetched item: human_female.recipe.json (Type: anatomyRecipes)
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Storing item in registry. Category: 'anatomyRecipes', Qualified ID: 'anatomy:human_female', Base ID: 'human_female', Filename: 'human_female.recipe.json'
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Item 'anatomy:human_female' (Base: 'human_female') stored successfully in category 'anatomyRecipes'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Successfully processed anatomy recipe from human_female.recipe.json. Final registry key: anatomy:human_female, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_female.recipe.json. Result: ID=anatomy:human_female, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/recipes/human_male.recipe.json
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Validating 'human_male.recipe.json' against primary schema 'http://example.com/schemas/anatomy.recipe.schema.json'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Processing fetched item: human_male.recipe.json (Type: anatomyRecipes)
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Storing item in registry. Category: 'anatomyRecipes', Qualified ID: 'anatomy:human_male', Base ID: 'human_male', Filename: 'human_male.recipe.json'
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Item 'anatomy:human_male' (Base: 'human_male') stored successfully in category 'anatomyRecipes'.
consoleLogger.js:187 AnatomyRecipeLoader [anatomy]: Successfully processed anatomy recipe from human_male.recipe.json. Final registry key: anatomy:human_male, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_male.recipe.json. Result: ID=anatomy:human_male, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 3/3 recipes items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing blueprints content with 2 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'blueprints'. Invoking loader 'AnatomyBlueprintLoader'.
consoleLogger.js:151 AnatomyBlueprintLoader: Loading anatomyBlueprints definitions for mod 'anatomy'.
consoleLogger.js:187 Found 2 potential blueprints files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for human_female.blueprint.json: ./data/mods/anatomy/blueprints/human_female.blueprint.json
consoleLogger.js:187 [anatomy] Resolved path for human_male.blueprint.json: ./data/mods/anatomy/blueprints/human_male.blueprint.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/blueprints/human_female.blueprint.json
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Validating 'human_female.blueprint.json' against primary schema 'http://example.com/schemas/anatomy.blueprint.schema.json'.
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Processing fetched item: human_female.blueprint.json (Type: anatomyBlueprints)
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Storing item in registry. Category: 'anatomyBlueprints', Qualified ID: 'anatomy:human_female', Base ID: 'human_female', Filename: 'human_female.blueprint.json'
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Item 'anatomy:human_female' (Base: 'human_female') stored successfully in category 'anatomyBlueprints'.
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Successfully processed anatomy blueprint from human_female.blueprint.json. Final registry key: anatomy:human_female, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_female.blueprint.json. Result: ID=anatomy:human_female, Overwrite=false
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/blueprints/human_male.blueprint.json
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Validating 'human_male.blueprint.json' against primary schema 'http://example.com/schemas/anatomy.blueprint.schema.json'.
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Processing fetched item: human_male.blueprint.json (Type: anatomyBlueprints)
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Storing item in registry. Category: 'anatomyBlueprints', Qualified ID: 'anatomy:human_male', Base ID: 'human_male', Filename: 'human_male.blueprint.json'
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Item 'anatomy:human_male' (Base: 'human_male') stored successfully in category 'anatomyBlueprints'.
consoleLogger.js:187 AnatomyBlueprintLoader [anatomy]: Successfully processed anatomy blueprint from human_male.blueprint.json. Final registry key: anatomy:human_male, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed human_male.blueprint.json. Result: ID=anatomy:human_male, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 2/2 blueprints items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Processing anatomyFormatting content with 1 files...
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Found content for 'anatomyFormatting'. Invoking loader 'AnatomyFormattingLoader'.
consoleLogger.js:151 AnatomyFormattingLoader: Loading anatomyFormatting definitions for mod 'anatomy'.
consoleLogger.js:187 Found 1 potential anatomyFormatting files to process for mod anatomy.
consoleLogger.js:187 [anatomy] Resolved path for default.json: ./data/mods/anatomy/anatomy-formatting/default.json
consoleLogger.js:187 [anatomy] Fetched data from ./data/mods/anatomy/anatomy-formatting/default.json
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Validating 'default.json' against primary schema 'http://example.com/schemas/anatomy-formatting.schema.json'.
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Processing fetched item: default.json
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Storing item in registry. Category: 'anatomyFormatting', Qualified ID: 'anatomy:default', Base ID: 'default', Filename: 'default.json'
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Item 'anatomy:default' (Base: 'default') stored successfully in category 'anatomyFormatting'.
consoleLogger.js:187 AnatomyFormattingLoader [anatomy]: Successfully processed anatomy formatting from default.json. Registry key: anatomy:default, Overwrite: false
consoleLogger.js:187 [anatomy] Successfully processed default.json. Result: ID=anatomy:default, Overwrite=false
consoleLogger.js:151 Mod [anatomy] - Processed 1/1 anatomyFormatting items.
consoleLogger.js:187 ModsLoader [anatomy, definitions]: Content loading loop took 41.50 ms.
consoleLogger.js:187 Mod 'anatomy' phase 'definitions' loaded in 41.50ms: anatomyBlueprints(2), anatomyFormatting(1), anatomyRecipes(3), components(4), entityDefinitions(25) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: anatomy, phase: definitions ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'p_erotica' (lowercase: 'p_erotica'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod p_erotica, manifest found: true
consoleLogger.js:187 --- Loading content for mod: p_erotica, phase: definitions ---
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'components' (key: 'components') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'events' (key: 'events') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'conditions' (key: 'conditions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'macros' (key: 'macros') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'actions' (key: 'actions') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'rules' (key: 'rules') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'goals' (key: 'goals') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'scopes' (key: 'scopes') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Processing entities.definitions content with 4 files...
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Found content for 'entities.definitions'. Invoking loader 'EntityDefinitionLoader'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entityDefinitions definitions for mod 'p_erotica'.
consoleLogger.js:187 Found 4 potential entities.definitions files to process for mod p_erotica.
consoleLogger.js:187 [p_erotica] Resolved path for coffee_shop.location.json: ./data/mods/p_erotica/entities/definitions/coffee_shop.location.json
consoleLogger.js:187 [p_erotica] Resolved path for iker_aguirre.character.json: ./data/mods/p_erotica/entities/definitions/iker_aguirre.character.json
consoleLogger.js:187 [p_erotica] Resolved path for outside_tables_coffee_shop.location.json: ./data/mods/p_erotica/entities/definitions/outside_tables_coffee_shop.location.json
consoleLogger.js:187 [p_erotica] Resolved path for sugar_mommy.character.json: ./data/mods/p_erotica/entities/definitions/sugar_mommy.character.json
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/definitions/coffee_shop.location.json
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Validating 'coffee_shop.location.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [p_erotica]: Processing fetched item (post-primary validation): coffee_shop.location.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [p_erotica]: Extracted full ID 'p_erotica:coffee_shop' and derived base ID 'coffee_shop' from coffee_shop.location.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Validating 4 components for entity 'p_erotica:coffee_shop' from coffee_shop.location.json...
consoleLogger.js:187    - Component 'core:name' in entity 'p_erotica:coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'p_erotica:coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'p_erotica:coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:exits' in entity 'p_erotica:coffee_shop' passed runtime validation.
consoleLogger.js:187 EntityLoader [p_erotica]: All runtime component validations passed for entity 'p_erotica:coffee_shop' from coffee_shop.location.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Created EntityDefinition instance for 'p_erotica:coffee_shop' from coffee_shop.location.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'p_erotica:coffee_shop', Base ID: 'coffee_shop', Filename: 'coffee_shop.location.json'
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Item 'p_erotica:coffee_shop' (Base: 'coffee_shop') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [p_erotica]: Successfully processed entityDefinitions file 'coffee_shop.location.json'. Returning final registry key: p_erotica:coffee_shop, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed coffee_shop.location.json. Result: ID=p_erotica:coffee_shop, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/definitions/iker_aguirre.character.json
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Validating 'iker_aguirre.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [p_erotica]: Processing fetched item (post-primary validation): iker_aguirre.character.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [p_erotica]: Extracted full ID 'p_erotica:iker_aguirre' and derived base ID 'iker_aguirre' from iker_aguirre.character.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Validating 6 components for entity 'p_erotica:iker_aguirre' from iker_aguirre.character.json...
consoleLogger.js:187    - Component 'core:name' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187    - Component 'core:actor' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'p_erotica:iker_aguirre' passed runtime validation.
consoleLogger.js:187 EntityLoader [p_erotica]: All runtime component validations passed for entity 'p_erotica:iker_aguirre' from iker_aguirre.character.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Created EntityDefinition instance for 'p_erotica:iker_aguirre' from iker_aguirre.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'p_erotica:iker_aguirre', Base ID: 'iker_aguirre', Filename: 'iker_aguirre.character.json'
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Item 'p_erotica:iker_aguirre' (Base: 'iker_aguirre') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [p_erotica]: Successfully processed entityDefinitions file 'iker_aguirre.character.json'. Returning final registry key: p_erotica:iker_aguirre, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed iker_aguirre.character.json. Result: ID=p_erotica:iker_aguirre, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/definitions/outside_tables_coffee_shop.location.json
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Validating 'outside_tables_coffee_shop.location.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [p_erotica]: Processing fetched item (post-primary validation): outside_tables_coffee_shop.location.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [p_erotica]: Extracted full ID 'p_erotica:outside_tables_coffee_shop' and derived base ID 'outside_tables_coffee_shop' from outside_tables_coffee_shop.location.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Validating 4 components for entity 'p_erotica:outside_tables_coffee_shop' from outside_tables_coffee_shop.location.json...
consoleLogger.js:187    - Component 'core:name' in entity 'p_erotica:outside_tables_coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:description' in entity 'p_erotica:outside_tables_coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'p_erotica:outside_tables_coffee_shop' passed runtime validation.
consoleLogger.js:187    - Component 'core:exits' in entity 'p_erotica:outside_tables_coffee_shop' passed runtime validation.
consoleLogger.js:187 EntityLoader [p_erotica]: All runtime component validations passed for entity 'p_erotica:outside_tables_coffee_shop' from outside_tables_coffee_shop.location.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Created EntityDefinition instance for 'p_erotica:outside_tables_coffee_shop' from outside_tables_coffee_shop.location.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'p_erotica:outside_tables_coffee_shop', Base ID: 'outside_tables_coffee_shop', Filename: 'outside_tables_coffee_shop.location.json'
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Item 'p_erotica:outside_tables_coffee_shop' (Base: 'outside_tables_coffee_shop') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [p_erotica]: Successfully processed entityDefinitions file 'outside_tables_coffee_shop.location.json'. Returning final registry key: p_erotica:outside_tables_coffee_shop, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed outside_tables_coffee_shop.location.json. Result: ID=p_erotica:outside_tables_coffee_shop, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/definitions/sugar_mommy.character.json
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Validating 'sugar_mommy.character.json' against primary schema 'http://example.com/schemas/entity-definition.schema.json'.
consoleLogger.js:187 EntityLoader [p_erotica]: Processing fetched item (post-primary validation): sugar_mommy.character.json (Original Type: entityDefinitions)
consoleLogger.js:187 EntityLoader [p_erotica]: Extracted full ID 'p_erotica:amaia_castillo' and derived base ID 'amaia_castillo' from sugar_mommy.character.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Validating 15 components for entity 'p_erotica:amaia_castillo' from sugar_mommy.character.json...
consoleLogger.js:187    - Component 'core:name' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:portrait' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:profile' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:personality' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:likes' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:dislikes' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:fears' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:goals' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:secrets' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:speech_patterns' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'anatomy:body' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:perception_log' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:actor' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:player_type' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187    - Component 'core:movement' in entity 'p_erotica:amaia_castillo' passed runtime validation.
consoleLogger.js:187 EntityLoader [p_erotica]: All runtime component validations passed for entity 'p_erotica:amaia_castillo' from sugar_mommy.character.json.
consoleLogger.js:187 EntityLoader [p_erotica]: Created EntityDefinition instance for 'p_erotica:amaia_castillo' from sugar_mommy.character.json. Delegating storage to base helper.
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Storing item in registry. Category: 'entityDefinitions', Qualified ID: 'p_erotica:amaia_castillo', Base ID: 'amaia_castillo', Filename: 'sugar_mommy.character.json'
consoleLogger.js:187 EntityDefinitionLoader [p_erotica]: Item 'p_erotica:amaia_castillo' (Base: 'amaia_castillo') stored successfully in category 'entityDefinitions'.
consoleLogger.js:187 EntityLoader [p_erotica]: Successfully processed entityDefinitions file 'sugar_mommy.character.json'. Returning final registry key: p_erotica:amaia_castillo, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed sugar_mommy.character.json. Result: ID=p_erotica:amaia_castillo, Overwrite=false
consoleLogger.js:151 Mod [p_erotica] - Processed 4/4 entities.definitions items.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Processing recipes content with 1 files...
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Found content for 'recipes'. Invoking loader 'AnatomyRecipeLoader'.
consoleLogger.js:151 AnatomyRecipeLoader: Loading anatomyRecipes definitions for mod 'p_erotica'.
consoleLogger.js:187 Found 1 potential recipes files to process for mod p_erotica.
consoleLogger.js:187 [p_erotica] Resolved path for amaia_castillo.recipe.json: ./data/mods/p_erotica/recipes/amaia_castillo.recipe.json
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/recipes/amaia_castillo.recipe.json
consoleLogger.js:187 AnatomyRecipeLoader [p_erotica]: Validating 'amaia_castillo.recipe.json' against primary schema 'http://example.com/schemas/anatomy.recipe.schema.json'.
consoleLogger.js:187 AnatomyRecipeLoader [p_erotica]: Processing fetched item: amaia_castillo.recipe.json (Type: anatomyRecipes)
consoleLogger.js:187 AnatomyRecipeLoader [p_erotica]: Storing item in registry. Category: 'anatomyRecipes', Qualified ID: 'p_erotica:amaia_castillo_recipe', Base ID: 'amaia_castillo_recipe', Filename: 'amaia_castillo.recipe.json'
consoleLogger.js:187 AnatomyRecipeLoader [p_erotica]: Item 'p_erotica:amaia_castillo_recipe' (Base: 'amaia_castillo_recipe') stored successfully in category 'anatomyRecipes'.
consoleLogger.js:187 AnatomyRecipeLoader [p_erotica]: Successfully processed anatomy recipe from amaia_castillo.recipe.json. Final registry key: p_erotica:amaia_castillo_recipe, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed amaia_castillo.recipe.json. Result: ID=p_erotica:amaia_castillo_recipe, Overwrite=false
consoleLogger.js:151 Mod [p_erotica] - Processed 1/1 recipes items.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'anatomyBlueprints' (key: 'blueprints') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Skipping content type 'anatomyFormatting' (key: 'anatomyFormatting') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [p_erotica, definitions]: Content loading loop took 10.90 ms.
consoleLogger.js:187 Mod 'p_erotica' phase 'definitions' loaded in 10.90ms: anatomyRecipes(1), entityDefinitions(4) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: p_erotica, phase: definitions ---
consoleLogger.js:187 ModsLoader: Completed content loading loop for phase: definitions.
consoleLogger.js:187 ModsLoader: Beginning content loading for phase: instances...
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'core' (lowercase: 'core'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod core, manifest found: true
consoleLogger.js:187 --- Loading content for mod: core, phase: instances ---
consoleLogger.js:187 ModsLoader [core, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [core, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [core, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'core' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: core, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'intimacy' (lowercase: 'intimacy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod intimacy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: intimacy, phase: instances ---
consoleLogger.js:187 ModsLoader [intimacy, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [intimacy, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [intimacy, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'intimacy' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: intimacy, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'descriptors' (lowercase: 'descriptors'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod descriptors, manifest found: true
consoleLogger.js:187 --- Loading content for mod: descriptors, phase: instances ---
consoleLogger.js:187 ModsLoader [descriptors, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [descriptors, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [descriptors, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'descriptors' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: descriptors, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'anatomy' (lowercase: 'anatomy'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod anatomy, manifest found: true
consoleLogger.js:187 --- Loading content for mod: anatomy, phase: instances ---
consoleLogger.js:187 ModsLoader [anatomy, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [anatomy, instances]: Skipping content type 'entityInstances' (key: 'entities.instances') as it's not defined or empty in the manifest.
consoleLogger.js:187 ModsLoader [anatomy, instances]: Content loading loop took 0.00 ms.
consoleLogger.js:187 Mod 'anatomy' phase 'instances' loaded in 0.00ms: No items processed in this phase-> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: anatomy, phase: instances ---
consoleLogger.js:187 ContentLoadManager: Looking up manifest for modId 'p_erotica' (lowercase: 'p_erotica'), found: true
consoleLogger.js:187 ContentLoadManager: Processing mod p_erotica, manifest found: true
consoleLogger.js:187 --- Loading content for mod: p_erotica, phase: instances ---
consoleLogger.js:187 ModsLoader [p_erotica, instances]: Manifest retrieved successfully. Processing content types...
consoleLogger.js:187 ModsLoader [p_erotica, instances]: Processing entities.instances content with 4 files...
consoleLogger.js:187 ModsLoader [p_erotica, instances]: Found content for 'entities.instances'. Invoking loader 'EntityInstanceLoader'.
consoleLogger.js:151 EntityInstanceLoader: Loading entityInstances definitions for mod 'p_erotica'.
consoleLogger.js:187 Found 4 potential entities.instances files to process for mod p_erotica.
consoleLogger.js:187 [p_erotica] Resolved path for coffee_shop.location.json: ./data/mods/p_erotica/entities/instances/coffee_shop.location.json
consoleLogger.js:187 [p_erotica] Resolved path for iker_aguirre.character.json: ./data/mods/p_erotica/entities/instances/iker_aguirre.character.json
consoleLogger.js:187 [p_erotica] Resolved path for outside_tables_coffee_shop.location.json: ./data/mods/p_erotica/entities/instances/outside_tables_coffee_shop.location.json
consoleLogger.js:187 [p_erotica] Resolved path for sugar_mommy.character.json: ./data/mods/p_erotica/entities/instances/sugar_mommy.character.json
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/instances/coffee_shop.location.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 'coffee_shop.location.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Processing fetched item: coffee_shop.location.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Instance 'p_erotica:coffee_shop_instance' in coffee_shop.location.json has no component overrides. Skipping secondary validation.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'p_erotica:coffee_shop_instance', Base ID: 'coffee_shop_instance', Filename: 'coffee_shop.location.json'
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Item 'p_erotica:coffee_shop_instance' (Base: 'coffee_shop_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Successfully processed instance file 'coffee_shop.location.json'. Final ID: p_erotica:coffee_shop_instance, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed coffee_shop.location.json. Result: ID=p_erotica:coffee_shop_instance, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/instances/outside_tables_coffee_shop.location.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 'outside_tables_coffee_shop.location.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Processing fetched item: outside_tables_coffee_shop.location.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Instance 'p_erotica:outside_tables_coffee_shop_instance' in outside_tables_coffee_shop.location.json has no component overrides. Skipping secondary validation.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'p_erotica:outside_tables_coffee_shop_instance', Base ID: 'outside_tables_coffee_shop_instance', Filename: 'outside_tables_coffee_shop.location.json'
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Item 'p_erotica:outside_tables_coffee_shop_instance' (Base: 'outside_tables_coffee_shop_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Successfully processed instance file 'outside_tables_coffee_shop.location.json'. Final ID: p_erotica:outside_tables_coffee_shop_instance, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed outside_tables_coffee_shop.location.json. Result: ID=p_erotica:outside_tables_coffee_shop_instance, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/instances/sugar_mommy.character.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 'sugar_mommy.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Processing fetched item: sugar_mommy.character.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 1 component overrides for instance 'p_erotica:amaia_castillo_instance' from sugar_mommy.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'p_erotica:amaia_castillo_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'p_erotica:amaia_castillo_instance', Base ID: 'amaia_castillo_instance', Filename: 'sugar_mommy.character.json'
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Item 'p_erotica:amaia_castillo_instance' (Base: 'amaia_castillo_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Successfully processed instance file 'sugar_mommy.character.json'. Final ID: p_erotica:amaia_castillo_instance, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed sugar_mommy.character.json. Result: ID=p_erotica:amaia_castillo_instance, Overwrite=false
consoleLogger.js:187 [p_erotica] Fetched data from ./data/mods/p_erotica/entities/instances/iker_aguirre.character.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 'iker_aguirre.character.json' against primary schema 'http://example.com/schemas/entity-instance.schema.json'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Processing fetched item: iker_aguirre.character.json
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Validating 1 component overrides for instance 'p_erotica:iker_aguirre_instance' from iker_aguirre.character.json...
consoleLogger.js:187    - Component override 'core:position' in instance 'p_erotica:iker_aguirre_instance' passed schema validation.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Storing item in registry. Category: 'entityInstances', Qualified ID: 'p_erotica:iker_aguirre_instance', Base ID: 'iker_aguirre_instance', Filename: 'iker_aguirre.character.json'
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Item 'p_erotica:iker_aguirre_instance' (Base: 'iker_aguirre_instance') stored successfully in category 'entityInstances'.
consoleLogger.js:187 EntityInstanceLoader [p_erotica]: Successfully processed instance file 'iker_aguirre.character.json'. Final ID: p_erotica:iker_aguirre_instance, Overwrite: false
consoleLogger.js:187 [p_erotica] Successfully processed iker_aguirre.character.json. Result: ID=p_erotica:iker_aguirre_instance, Overwrite=false
consoleLogger.js:151 Mod [p_erotica] - Processed 4/4 entities.instances items.
consoleLogger.js:187 ModsLoader [p_erotica, instances]: Content loading loop took 5.30 ms.
consoleLogger.js:187 Mod 'p_erotica' phase 'instances' loaded in 5.30ms: entityInstances(4) -> Overrides(0), Errors(0)
consoleLogger.js:187 --- Finished loading content for mod: p_erotica, phase: instances ---
consoleLogger.js:187 ModsLoader: Completed content loading loop for phase: instances.
consoleLogger.js:187 ModsLoader: Completed both content loading phases.
consoleLogger.js:187 Phase content done
consoleLogger.js:187 Phase world start
consoleLogger.js:151 — WorldPhase starting —
consoleLogger.js:151 --- Starting World File Loading Phase ---
consoleLogger.js:187 WorldLoader [core]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [intimacy]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [descriptors]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [anatomy]: No world files listed in manifest. Skipping.
consoleLogger.js:187 WorldLoader [p_erotica]: Processing world file 'donostia.world.json'.
consoleLogger.js:187 WorldLoader [p_erotica]: Successfully validated 4 instances from 'donostia.world.json'.
consoleLogger.js:187 WorldLoader: Registered world 'p_erotica:donostia' from file 'donostia.world.json'. {qualifiedWorldId: 'p_erotica:donostia', filename: 'donostia.world.json', modId: 'p_erotica'}
consoleLogger.js:151 --- World File Loading Phase Complete ---
consoleLogger.js:151 WorldLoader: Successfully processed and registered 1 worlds, containing 4 entity instances. All 4 definition references were resolved.
consoleLogger.js:187 Phase world done
consoleLogger.js:187 Phase summary start
consoleLogger.js:151 — SummaryPhase starting —
consoleLogger.js:151 — ModsLoader Load Summary (World: 'default') —
consoleLogger.js:151   • Requested Mods (raw): [core, intimacy, p_erotica]
consoleLogger.js:151   • Final Load Order     : [core, intimacy, descriptors, anatomy, p_erotica]
consoleLogger.js:151   • Content Loading Summary (Totals):
consoleLogger.js:151      - actions             : 10 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyBlueprints   : 2 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyFormatting   : 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyRecipes      : 4 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - components          : 42 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - conditions          : 19 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entityDefinitions   : 29 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entityInstances     : 4 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - events              : 35 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - macros              : 4 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - rules               : 16 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - scopes              : 6 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - worlds              : 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - ----------------------------------------------
consoleLogger.js:151      - TOTAL               : C:173, O:0, E:0
consoleLogger.js:151 ———————————————————————————————————————————
consoleLogger.js:187 Phase summary done
consoleLogger.js:151 ModsLoader: Load sequence for world 'default' completed successfully.
consoleLogger.js:151 ModsLoader: Load sequence for world 'default' completed successfully.
consoleLogger.js:151 Anatomy Visualizer: Loaded 5 mods
consoleLogger.js:187 Load report: {finalModOrder: Array(5), totals: {…}, incompatibilities: 0}
consoleLogger.js:151 Anatomy Visualizer: Initializing system services...
consoleLogger.js:187 SystemInitializer: Starting initialization for systems tagged with 'initializableSystem'...
consoleLogger.js:187 SystemInitializer: Querying resolver for tag 'initializableSystem'...
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_created" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_created'.
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_removed" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_removed'.
consoleLogger.js:187 VED: Delegating subscription for event "core:component_added" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:component_added'.
consoleLogger.js:187 VED: Delegating subscription for event "core:component_removed" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:component_removed'.
consoleLogger.js:187 SpatialIndexSynchronizer initialized and listening for events.
consoleLogger.js:187 ValidationRuleChain: Added rule 'Socket Limit Validation' to chain
consoleLogger.js:187 ValidationRuleChain: Added rule 'Recipe Constraint Validation' to chain
consoleLogger.js:187 ValidationRuleChain: Added rule 'Cycle Detection' to chain
consoleLogger.js:187 ValidationRuleChain: Added rule 'Joint Consistency Validation' to chain
consoleLogger.js:187 ValidationRuleChain: Added rule 'Orphan Detection' to chain
consoleLogger.js:187 ValidationRuleChain: Added rule 'Part Type Compatibility' to chain
consoleLogger.js:187 GraphIntegrityValidator: Initialized with 6 validation rules
consoleLogger.js:187 ActionIndex initialised.
consoleLogger.js:187 JsonLogicEvaluationService: Custom JSON Logic operation "not" added successfully.
consoleLogger.js:187 JsonLogicEvaluationService: JsonLogicEvaluationService initialized.
consoleLogger.js:187 PrerequisiteEvaluationService: PrerequisiteEvaluationService initialised (with ActionValidationContextBuilder and GameDataRepository).
consoleLogger.js:187 VED: Delegating subscription for event "core:turn_started" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:turn_started'.
consoleLogger.js:187 ScopeCache: Successfully subscribed to TURN_STARTED_ID events
consoleLogger.js:187 ActionDiscoveryService: ActionDiscoveryService initialised with streamlined logic.
consoleLogger.js:151 OperationRegistry: OperationRegistry initialized.
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_EVENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_PERCEPTIBLE_EVENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "DISPATCH_SPEECH".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "LOG".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ADD_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REMOVE_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_COMPONENTS".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "QUERY_ENTITIES".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "SET_VARIABLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "END_TURN".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "SYSTEM_MOVE_ENTITY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "GET_TIMESTAMP".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "GET_NAME".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "RESOLVE_DIRECTION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REBUILD_LEADER_LIST_CACHE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "CHECK_FOLLOW_CYCLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ESTABLISH_FOLLOW_RELATION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "BREAK_FOLLOW_RELATION".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "ADD_PERCEPTION_LOG_ENTRY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "HAS_COMPONENT".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_ARRAY_FIELD".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MODIFY_CONTEXT_ARRAY".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "IF_CO_LOCATED".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "AUTO_MOVE_FOLLOWERS".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MERGE_CLOSENESS_CIRCLE".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "MATH".
consoleLogger.js:187 OperationRegistry: OperationRegistry: Registered handler for operation type "REMOVE_FROM_CLOSENESS_CIRCLE".
consoleLogger.js:187 OperationInterpreter: OperationInterpreter Initialized (using OperationRegistry).
consoleLogger.js:187 SystemLogicInterpreter: SystemLogicInterpreter: created
consoleLogger.js:187 SystemInitializer: Found 4 systems tagged with 'initializableSystem'.
consoleLogger.js:187 SystemInitializer: Proceeding to initialize 4 resolved systems sequentially...
consoleLogger.js:187 SystemInitializer: System 'SpatialIndexSynchronizer' has no initialize() method, skipping.
consoleLogger.js:187 SystemInitializer: Initializing system: AnatomyInitializationService...
consoleLogger.js:187 AnatomyInitializationService: Registering event listeners
consoleLogger.js:187 VED: Delegating subscription for event "core:entity_created" to EventBus.
consoleLogger.js:187 SafeEventDispatcher: Successfully subscribed to event 'core:entity_created'.
consoleLogger.js:151 AnatomyInitializationService: Initialized
consoleLogger.js:187 SystemInitializer: System AnatomyInitializationService initialized successfully.
consoleLogger.js:187 SystemInitializer: System 'ActionDiscoveryService' has no initialize() method, skipping.
consoleLogger.js:187 SystemInitializer: Initializing system: SystemLogicInterpreter...
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_dismiss'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'entity_speech'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'core_handle_follow'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'core_follow_auto_move'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_go_action'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'log_perceptible_events'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'enable_input_on_player_turn'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_stop_following'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'turn_ended'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'turn_started'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_wait'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_adjust_clothing'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'intimacy_handle_step_back'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_thumb_wipe_cheek'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'intimacy_handle_get_close'
consoleLogger.js:187 SystemLogicInterpreter: Cached rule 'handle_kiss_cheek'
consoleLogger.js:187 SystemLogicInterpreter: Finished caching rules. 7 event types have associated rules.
consoleLogger.js:187 SystemLogicInterpreter: SystemLogicInterpreter: initialized & subscribed to '*'.
consoleLogger.js:187 SystemInitializer: System SystemLogicInterpreter initialized successfully.
consoleLogger.js:187 SystemInitializer: Initialization loop for tagged systems completed.
consoleLogger.js:151 Anatomy Visualizer: Initializing UI...
consoleLogger.js:187 AnatomyVisualizerUI: Initializing...
