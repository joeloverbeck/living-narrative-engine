Based on my investigation, I've identified the core issue:

  The human decision provider is working correctly and being called, but the UI events are
   not being dispatched due to an event bus instance mismatch between:
  1. The event bus the test bed is monitoring
  2. The event bus the prompt output port is using to dispatch core:player_turn_prompt

  The evidence:
  - ✅ Human player has correct components (core:player_type: { type: 'human' })
  - ✅ Actor aware strategy correctly resolves to 'human' provider
  - ✅ Human decision provider is being used (mock called twice)
  - ✅ Regular events are captured by test bed monitoring
  - ❌ core:player_turn_prompt events are never dispatched/captured

  The solution is to ensure the prompt output port (EventBusPromptAdapter) uses the same
  event bus instance that the test bed is monitoring. This is likely a dependency
  injection configuration issue in the E2E test setup.

  The test is very close to working - once this event bus mismatch is resolved, the human
  player turn workflow should execute properly and dispatch all the expected UI events.
