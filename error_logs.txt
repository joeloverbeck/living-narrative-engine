 FAIL  tests/unit/logic/operationHandlers/dispatchThoughtHandler.test.js
  ● DispatchThoughtHandler › execute › should handle dispatch errors gracefully

    expect(jest.fn()).toHaveBeenLastCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"errorMessage": "Dispatch failed"}}
    Received
           1: "core:display_thought", {"entityId": "test-entity", "thoughts": "I am thinking"}
    ->     2: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"errorMessage\": \"Dispatch failed\"
      }
    }", "stack": "Error: Dispatch failed
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/logic/operationHandlers/dispatchThoughtHandler.test.js:171:21)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)"}, "message": "DISPATCH_THOUGHT: Error dispatching display_thought."}

    Number of calls: 2

      185 |       // Should dispatch error event
      186 |       expect(mockDispatcher.dispatch).toHaveBeenCalledTimes(2);
    > 187 |       expect(mockDispatcher.dispatch).toHaveBeenLastCalledWith(
          |                                       ^
      188 |         'core:system_error_occurred',
      189 |         expect.objectContaining({
      190 |           details: expect.objectContaining({

      at Object.toHaveBeenLastCalledWith (tests/unit/logic/operationHandlers/dispatchThoughtHandler.test.js:187:39)

 FAIL  tests/unit/turns/turnManager.getCurrentActor.test.js
  ● TurnManager › getCurrentActor() › should handle entity manager errors gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [["core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"error": StringContaining "Cannot start a new round: No active entities with an Actor component found."}, "message": Any<String>}]]
    Received: [["core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Cannot start a new round: No active entities with an Actor component found.\"
      }
    }"}, "message": "Critical error during turn advancement logic"}], ["core:system_error_occurred", {"details": {"raw": "Cannot start a new round: No active entities with an Actor component found.", "stack": "Error:·
        at TurnManager.#dispatchSystemError (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:642:11)
        at TurnManager.advanceTurn (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:347:42)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at TurnManager.start (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:203:5)
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/turns/turnManager.getCurrentActor.test.js:169:7)", "timestamp": "2025-09-12T06:01:51.565Z"}, "message": "System Error: No active actors found to start a round. Stopping game."}]]

      171 |       // --- Assert ---
      172 |       expect(testBed.turnManager.getCurrentActor()).toBeNull();
    > 173 |       expect(testBed.mocks.dispatcher.dispatch.mock.calls).toEqual(
          |                                                            ^
      174 |         expect.arrayContaining([
      175 |           [
      176 |             SYSTEM_ERROR_OCCURRED_ID,

      at Object.toEqual (tests/unit/turns/turnManager.getCurrentActor.test.js:173:60)

 FAIL  tests/unit/turns/turnManager.advanceTurn.queueNotEmpty.test.js
  ● TurnManager: advanceTurn() - Turn Advancement (Queue Not Empty) › getNextEntity throws error: logs error, stops manager

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Turn order service failure"}, "message": "System Error during turn advancement"}
    Received
           1: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Turn order service failure\"
      }
    }"}, "message": "System Error during turn advancement"}
           2: "core:system_error_occurred", {"details": {"raw": "Turn order service failure", "stack": "Error: Turn order service failure
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/turns/turnManager.advanceTurn.queueNotEmpty.test.js:130:28)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)", "timestamp": "2025-09-12T06:01:51.850Z"}, "message": "System Error during turn advancement. Stopping game."}

    Number of calls: 2

      142 |       ).toHaveBeenCalledTimes(1);
      143 |
    > 144 |       expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
          |                                                 ^
      145 |         SYSTEM_ERROR_OCCURRED_ID,
      146 |         expect.objectContaining({
      147 |           message: 'System Error during turn advancement',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.queueNotEmpty.test.js:144:49)

  ● TurnManager: advanceTurn() - Turn Advancement (Queue Not Empty) › Handler resolver throws: logs error, stops manager

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Handler resolution failed"}, "message": "System Error during turn advancement"}
    Received
           1: "core:turn_started", {"entity": {"componentTypeIds": ["core:actor"], "components": {"core:actor": {}}, "getComponent": [Function mockConstructor], "getComponentData": [Function mockConstructor], "hasComponent": [Function mockConstructor], "id": "actor1", "name": "actor1"}, "entityId": "actor1", "entityType": "ai"}
           2: "core:turn_processing_started", {"actorType": "ai", "entityId": "actor1"}
           3: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Handler resolution failed\"
      }
    }"}, "message": "System Error during turn advancement"}

    Number of calls: 4

      173 |
      174 |       // Assert
    > 175 |       expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
          |                                                 ^
      176 |         SYSTEM_ERROR_OCCURRED_ID,
      177 |         expect.objectContaining({
      178 |           message: 'System Error during turn advancement',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.queueNotEmpty.test.js:175:49)

  ● TurnManager: advanceTurn() - Turn Advancement (Queue Not Empty) › Handler startTurn throws: logs error, stops manager

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Handler start failed", "handlerName": Any<String>}, "message": "Error initiating turn for actor1"}
    Received
           1: "core:turn_started", {"entity": {"componentTypeIds": ["core:actor"], "components": {"core:actor": {}}, "getComponent": [Function mockConstructor], "getComponentData": [Function mockConstructor], "hasComponent": [Function mockConstructor], "id": "actor1", "name": "actor1"}, "entityId": "actor1", "entityType": "ai"}
           2: "core:turn_processing_started", {"actorType": "ai", "entityId": "actor1"}
           3: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Handler start failed\",
        \"handlerName\": \"MockTurnHandler\"
      }
    }"}, "message": "Error initiating turn for actor1"}

    Number of calls: 5

      205 |
      206 |       // Assert
    > 207 |       expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
          |                                                 ^
      208 |         SYSTEM_ERROR_OCCURRED_ID,
      209 |         expect.objectContaining({
      210 |           message: 'Error initiating turn for actor1',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.queueNotEmpty.test.js:207:49)

 FAIL  tests/unit/logic/operationHandlers/modifyArrayFieldHandler.coverage.test.js
  ● ModifyArrayFieldHandler - Coverage Tests › Error Handling Scenarios › should dispatch error event when addComponent throws

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "core:system_error_occurred",
      Object {
        "details": Object {
    -     "componentType": "core:inventory",
    -     "entityId": "ent_player",
    -     "error": "Database connection failed",
    +     "raw": "{
    +   \"extra\": {
    +     \"error\": \"Database connection failed\",
    +     \"entityId\": \"ent_player\",
    +     \"componentType\": \"core:inventory\"
    +   }
    + }",
        },
        "message": "MODIFY_ARRAY_FIELD: Failed to commit changes via addComponent.",
      },

    Number of calls: 1

      318 |       await handler.execute(params, mockExecutionContext);
      319 |
    > 320 |       expect(mockDispatcher.dispatch).toHaveBeenCalledWith(
          |                                       ^
      321 |         'core:system_error_occurred',
      322 |         {
      323 |           message:

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/modifyArrayFieldHandler.coverage.test.js:320:39)

 FAIL  tests/unit/turns/turnManager.advanceTurn.roundStart.test.js
  ● TurnManager: advanceTurn() - Round Start (Queue Empty) › No active actors found › dispatches system error when round cannot start

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Cannot start a new round: No active entities with an Actor component found."}, "message": "Critical error during turn advancement logic"}
    Received
           1: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Cannot start a new round: No active entities with an Actor component found.\"
      }
    }"}, "message": "Critical error during turn advancement logic"}
           2: "core:system_error_occurred", {"details": {"raw": "Cannot start a new round: No active entities with an Actor component found.", "stack": "Error:·
        at TurnManager.#dispatchSystemError (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:642:11)
        at TurnManager.advanceTurn (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:347:42)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at TurnManager.start (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:203:5)
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/turns/turnManager.advanceTurn.roundStart.test.js:61:9)", "timestamp": "2025-09-12T06:01:59.102Z"}, "message": "System Error: No active actors found to start a round. Stopping game."}

    Number of calls: 2

      73 |
      74 |       test('dispatches system error when round cannot start', () => {
    > 75 |         expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
         |                                                   ^
      76 |           SYSTEM_ERROR_OCCURRED_ID,
      77 |           expect.objectContaining({
      78 |             message: 'Critical error during turn advancement logic',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.roundStart.test.js:75:51)

  ● TurnManager: advanceTurn() - Round Start (Queue Empty) › No active actors found (empty map): logs error, dispatches message, and stops

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Cannot start a new round: No active entities with an Actor component found."}, "message": "Critical error during turn advancement logic"}
    Received
           1: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Cannot start a new round: No active entities with an Actor component found.\"
      }
    }"}, "message": "Critical error during turn advancement logic"}
           2: "core:system_error_occurred", {"details": {"raw": "Cannot start a new round: No active entities with an Actor component found.", "stack": "Error:·
        at TurnManager.#dispatchSystemError (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:642:11)
        at TurnManager.advanceTurn (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:347:42)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at TurnManager.start (/home/joeloverbeck/projects/living-narrative-engine/src/turns/turnManager.js:203:5)
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/turns/turnManager.advanceTurn.roundStart.test.js:100:7)", "timestamp": "2025-09-12T06:01:59.120Z"}, "message": "System Error: No active actors found to start a round. Stopping game."}

    Number of calls: 2

      101 |
      102 |       // Assert
    > 103 |       expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
          |                                                 ^
      104 |         SYSTEM_ERROR_OCCURRED_ID,
      105 |         expect.objectContaining({
      106 |           message: 'Critical error during turn advancement logic',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.roundStart.test.js:103:49)

  ● TurnManager: advanceTurn() - Round Start (Queue Empty) › handler resolution fails after a new round starts › dispatches a system error

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": {"error": "Handler resolution failed"}, "message": "System Error during turn advancement"}
    Received
           1: "core:turn_started", {"entity": {"componentTypeIds": ["core:actor"], "components": {"core:actor": {}}, "getComponent": [Function mockConstructor], "getComponentData": [Function mockConstructor], "hasComponent": [Function mockConstructor], "id": "actor1", "name": "actor1"}, "entityId": "actor1", "entityType": "ai"}
           2: "core:turn_processing_started", {"actorType": "ai", "entityId": "actor1"}
           3: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Handler resolution failed\"
      }
    }"}, "message": "System Error during turn advancement"}

    Number of calls: 4

      242 |
      243 |       test('dispatches a system error', () => {
    > 244 |         expect(testBed.mocks.dispatcher.dispatch).toHaveBeenCalledWith(
          |                                                   ^
      245 |           SYSTEM_ERROR_OCCURRED_ID,
      246 |           expect.objectContaining({
      247 |             message: 'System Error during turn advancement',

      at Object.toHaveBeenCalledWith (tests/unit/turns/turnManager.advanceTurn.roundStart.test.js:244:51)

 FAIL  tests/unit/actions/examples/schemaValidation.test.js
  ● Multi-Target Action Examples - Schema Validation › Basic Multi-Target Action › should validate throw item at target action

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/basic_multi_target.action.json'

      55 |         'data/mods/examples/actions/basic_multi_target.action.json'
      56 |       );
    > 57 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
         |                                                ^
      58 |
      59 |       const validate = ajv.compile(actionSchema);
      60 |       const isValid = validate(actionDef);

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:57:48)

  ● Multi-Target Action Examples - Schema Validation › Basic Multi-Target Action › should have correct target structure

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/basic_multi_target.action.json'

      75 |         'data/mods/examples/actions/basic_multi_target.action.json'
      76 |       );
    > 77 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
         |                                                ^
      78 |
      79 |       expect(actionDef.targets).toBeDefined();
      80 |       expect(actionDef.targets.primary).toBeDefined();

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:77:48)

  ● Multi-Target Action Examples - Schema Validation › Basic Multi-Target Action › should have matching template placeholders

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/basic_multi_target.action.json'

      93 |         'data/mods/examples/actions/basic_multi_target.action.json'
      94 |       );
    > 95 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
         |                                                ^
      96 |
      97 |       const template = actionDef.template;
      98 |       const primaryPlaceholder = actionDef.targets.primary.placeholder;

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:95:48)

  ● Multi-Target Action Examples - Schema Validation › Context-Dependent Action › should validate unlock container with key action

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/context_dependent.action.json'

      110 |         'data/mods/examples/actions/context_dependent.action.json'
      111 |       );
    > 112 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                ^
      113 |
      114 |       const validate = ajv.compile(actionSchema);
      115 |       const isValid = validate(actionDef);

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:112:48)

  ● Multi-Target Action Examples - Schema Validation › Context-Dependent Action › should have contextFrom dependency

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/context_dependent.action.json'

      130 |         'data/mods/examples/actions/context_dependent.action.json'
      131 |       );
    > 132 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                ^
      133 |
      134 |       expect(actionDef.targets.secondary.contextFrom).toBe('primary');
      135 |     });

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:132:48)

  ● Multi-Target Action Examples - Schema Validation › Context-Dependent Action › should not generate combinations

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/context_dependent.action.json'

      140 |         'data/mods/examples/actions/context_dependent.action.json'
      141 |       );
    > 142 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                ^
      143 |
      144 |       expect(actionDef.generateCombinations).toBe(false);
      145 |     });

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:142:48)

  ● Multi-Target Action Examples - Schema Validation › Give Item Actions › should validate give_item action

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item.action.json'

      152 |         'data/mods/examples/actions/give_item.action.json'
      153 |       );
    > 154 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                ^
      155 |
      156 |       const validate = ajv.compile(actionSchema);
      157 |       const isValid = validate(actionDef);

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:154:48)

  ● Multi-Target Action Examples - Schema Validation › Give Item Actions › should validate give_item_with_note action

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item_with_note.action.json'

      172 |         'data/mods/examples/actions/give_item_with_note.action.json'
      173 |       );
    > 174 |       const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                ^
      175 |
      176 |       const validate = ajv.compile(actionSchema);
      177 |       const isValid = validate(actionDef);

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:174:48)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have required schema properties: basic_multi_target.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/basic_multi_target.action.json'

      204 |           filename
      205 |         );
    > 206 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      207 |
      208 |         expect(actionDef.id).toBeDefined();
      209 |         expect(actionDef.name).toBeDefined();

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:206:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have valid JSON Logic prerequisites: basic_multi_target.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/basic_multi_target.action.json'

      219 |           filename
      220 |         );
    > 221 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      222 |
      223 |         if (actionDef.prerequisites) {
      224 |           actionDef.prerequisites.forEach((prereq) => {

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:221:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have required schema properties: context_dependent.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/context_dependent.action.json'

      204 |           filename
      205 |         );
    > 206 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      207 |
      208 |         expect(actionDef.id).toBeDefined();
      209 |         expect(actionDef.name).toBeDefined();

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:206:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have valid JSON Logic prerequisites: context_dependent.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/context_dependent.action.json'

      219 |           filename
      220 |         );
    > 221 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      222 |
      223 |         if (actionDef.prerequisites) {
      224 |           actionDef.prerequisites.forEach((prereq) => {

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:221:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have required schema properties: give_item.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item.action.json'

      204 |           filename
      205 |         );
    > 206 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      207 |
      208 |         expect(actionDef.id).toBeDefined();
      209 |         expect(actionDef.name).toBeDefined();

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:206:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have valid JSON Logic prerequisites: give_item.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item.action.json'

      219 |           filename
      220 |         );
    > 221 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      222 |
      223 |         if (actionDef.prerequisites) {
      224 |           actionDef.prerequisites.forEach((prereq) => {

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:221:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have required schema properties: give_item_with_note.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item_with_note.action.json'

      204 |           filename
      205 |         );
    > 206 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      207 |
      208 |         expect(actionDef.id).toBeDefined();
      209 |         expect(actionDef.name).toBeDefined();

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:206:50)

  ● Multi-Target Action Examples - Schema Validation › All Examples › should have valid JSON Logic prerequisites: give_item_with_note.action.json

    ENOENT: no such file or directory, open '/home/joeloverbeck/projects/living-narrative-engine/data/mods/examples/actions/give_item_with_note.action.json'

      219 |           filename
      220 |         );
    > 221 |         const actionDef = JSON.parse(readFileSync(actionPath, 'utf8'));
          |                                                  ^
      222 |
      223 |         if (actionDef.prerequisites) {
      224 |           actionDef.prerequisites.forEach((prereq) => {

      at Object.<anonymous> (tests/unit/actions/examples/schemaValidation.test.js:221:50)

 FAIL  tests/unit/logic/operationHandlers/getNameHandler.test.js
  ● GetNameHandler › Error Handling › should handle error during getComponentData and use fallback

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"error": "Database connection failed", "stack": Any<String>}, "message": "GET_NAME: Error retrieving 'core:name' from 'actor-123'. Using fallback."}
    Received: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Database connection failed\"
      }
    }", "stack": "Error: Database connection failed
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/logic/operationHandlers/getNameHandler.test.js:670:21)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)"}, "message": "GET_NAME: Error retrieving 'core:name' from 'actor-123'. Using fallback."}

    Number of calls: 1

      675 |       handler.execute(params, executionContext);
      676 |
    > 677 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      678 |         SYSTEM_ERROR_OCCURRED_ID,
      679 |         expect.objectContaining({
      680 |           message: `GET_NAME: Error retrieving '${NAME_COMPONENT_ID}' from 'actor-123'. Using fallback.`,

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/getNameHandler.test.js:677:48)

  ● GetNameHandler › Error Handling › should handle error during getComponentData and use custom fallback

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"error": "Network timeout", "stack": Any<String>}, "message": "GET_NAME: Error retrieving 'core:name' from 'actor-123'. Using fallback."}
    Received: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"error\": \"Network timeout\"
      }
    }", "stack": "Error: Network timeout
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/logic/operationHandlers/getNameHandler.test.js:697:21)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)"}, "message": "GET_NAME: Error retrieving 'core:name' from 'actor-123'. Using fallback."}

    Number of calls: 1

      702 |       handler.execute(params, executionContext);
      703 |
    > 704 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      705 |         SYSTEM_ERROR_OCCURRED_ID,
      706 |         expect.objectContaining({
      707 |           message: `GET_NAME: Error retrieving '${NAME_COMPONENT_ID}' from 'actor-123'. Using fallback.`,

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/getNameHandler.test.js:704:48)

 FAIL  tests/unit/logic/operationHandlers/regenerateDescriptionHandler.test.js
  ● RegenerateDescriptionHandler › Error Handling › should handle description generation failure

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"error": "Description generation failed", "params": {"entity_ref": "actor"}}, "message": "REGENERATE_DESCRIPTION operation failed"}
    Received: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"params\": {
          \"entity_ref\": \"actor\"
        },
        \"error\": \"Description generation failed\"
      }
    }", "stack": "Error: Description generation failed
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/logic/operationHandlers/regenerateDescriptionHandler.test.js:428:25)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)"}, "message": "REGENERATE_DESCRIPTION operation failed"}

    Number of calls: 1

      448 |
      449 |       // safeDispatchError calls dispatcher.dispatch with event ID and payload
    > 450 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      451 |         'core:system_error_occurred',
      452 |         expect.objectContaining({
      453 |           message: 'REGENERATE_DESCRIPTION operation failed',

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/regenerateDescriptionHandler.test.js:450:48)

  ● RegenerateDescriptionHandler › Error Handling › should handle component update failure

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "core:system_error_occurred", ObjectContaining {"details": ObjectContaining {"error": "Component update failed", "params": {"entity_ref": "actor"}}, "message": "REGENERATE_DESCRIPTION operation failed"}
    Received: "core:system_error_occurred", {"details": {"raw": "{
      \"extra\": {
        \"params\": {
          \"entity_ref\": \"actor\"
        },
        \"error\": \"Component update failed\"
      }
    }", "stack": "Error: Component update failed
        at Object.<anonymous> (/home/joeloverbeck/projects/living-narrative-engine/tests/unit/logic/operationHandlers/regenerateDescriptionHandler.test.js:475:25)
        at Promise.finally.completed (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/home/joeloverbeck/projects/living-narrative-engine/node_modules/jest-runner/build/testWorker.js:497:12)"}, "message": "REGENERATE_DESCRIPTION operation failed"}

    Number of calls: 1

      483 |
      484 |       // Assert: safeDispatchError called with proper context
    > 485 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      486 |         'core:system_error_occurred',
      487 |         expect.objectContaining({
      488 |           message: 'REGENERATE_DESCRIPTION operation failed',

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/regenerateDescriptionHandler.test.js:485:48)

 FAIL  tests/unit/logic/operationHandlers/lockMovementHandler.test.js
  ● LockMovementHandler › execute - error cases › should dispatch error when actor_id is missing

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "core:system_error_occurred",
      Object {
        "details": Object {
    -     "params": Object {},
    +     "raw": "{
    +   \"extra\": {
    +     \"params\": {}
    +   }
    + }",
        },
        "message": "LOCK_MOVEMENT: invalid \"actor_id\"",
      },

    Number of calls: 1

      123 |       await handler.execute(params, executionContext);
      124 |
    > 125 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      126 |         SYSTEM_ERROR_OCCURRED_ID,
      127 |         {
      128 |           message: 'LOCK_MOVEMENT: invalid "actor_id"',

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/lockMovementHandler.test.js:125:48)

  ● LockMovementHandler › execute - error cases › should dispatch error when actor_id is null

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "core:system_error_occurred",
      Object {
        "details": Object {
    -     "params": Object {
    -       "actor_id": null,
    -     },
    +     "raw": "{
    +   \"extra\": {
    +     \"params\": {
    +       \"actor_id\": null
    +     }
    +   }
    + }",
        },
        "message": "LOCK_MOVEMENT: invalid \"actor_id\"",
      },

    Number of calls: 1

      138 |       await handler.execute(params, executionContext);
      139 |
    > 140 |       expect(mockSafeEventDispatcher.dispatch).toHaveBeenCalledWith(
          |                                                ^
      141 |         SYSTEM_ERROR_OCCURRED_ID,
      142 |         {
      143 |           message: 'LOCK_MOVEMENT: invalid "actor_id"',

      at Object.toHaveBeenCalledWith (tests/unit/logic/operationHandlers/lockMovementHandler.test.js:140:48)