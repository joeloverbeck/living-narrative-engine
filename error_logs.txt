 FAIL  tests/performance/logging/remoteLogger.integration.performance.test.js (158.881 s)
  ● RemoteLogger - Performance Integration Tests › performance under load › should handle burst logging without loss

    expect(received).toBeLessThan(expected)

    Expected: < 500
    Received:   3000

      186 |
      187 |       // Performance assertions
    > 188 |       expect(metrics.totalTime).toBeLessThan(500); // Under 500ms for burst processing
          |                                 ^
      189 |
      190 |       // All logs should be processed
      191 |       const stats = remoteLogger.getStats();

      at Object.toBeLessThan (tests/performance/logging/remoteLogger.integration.performance.test.js:188:33)

  ● RemoteLogger - Performance Integration Tests › performance under load › should maintain performance with large log entries

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      232 |       const metrics = benchmark.end();
      233 |
    > 234 |       expect(mockServer.getRequestCount()).toBe(1);
          |                                            ^
      235 |
      236 |       // Should handle large entries without significant delay
      237 |       expect(metrics.totalTime).toBeLessThan(200); // Under 200ms for large entry processing

      at Object.toBe (tests/performance/logging/remoteLogger.integration.performance.test.js:234:44)

  ● RemoteLogger - Performance Integration Tests › performance benchmarks › should handle category detection with cache efficiently

    thrown: "Exceeded timeout of 15000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      243 |
      244 |   describe('performance benchmarks', () => {
    > 245 |     it('should handle category detection with cache efficiently', async () => {
          |       ^
      246 |       const benchmark = performanceTracker.startBenchmark(
      247 |         'category-detection-cache'
      248 |       );

      at tests/performance/logging/remoteLogger.integration.performance.test.js:245:7
      at tests/performance/logging/remoteLogger.integration.performance.test.js:244:11
      at Object.<anonymous> (tests/performance/logging/remoteLogger.integration.performance.test.js:69:9)

  ● RemoteLogger - Performance Integration Tests › performance benchmarks › should handle burst logging with enhanced features

    expect(received).toBeLessThan(expected)

    Expected: < 400
    Received:   3000

      382 |
      383 |       // Should handle burst efficiently
    > 384 |       expect(metrics.totalTime).toBeLessThan(400); // Less than 400ms for 1000 logs
          |                                 ^
      385 |
      386 |       const stats = remoteLogger.getStats();
      387 |       expect(stats.bufferSize).toBe(0); // All logs should be sent

      at Object.toBeLessThan (tests/performance/logging/remoteLogger.integration.performance.test.js:384:33)