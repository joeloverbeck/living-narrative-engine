schema://living-narrative-engine/operations/queryComponents.schema.json, schema://living-narrative-engine/operations/queryEntities.schema.json, schema://living-narrative-engine/operations/rebuildLeaderListCache.schema.json, schema://living-narrative-engine/operations/removeComponent.schema.json, schema://living-narrative-engine/operations/removeFromClosenessCircle.schema.json, schema://living-narrative-engine/operations/resolveDirection.schema.json, schema://living-narrative-engine/operations/setVariable.schema.json, schema://living-narrative-engine/operations/systemMoveEntity.schema.json, schema://living-narrative-engine/operations/unequipClothing.schema.json
consoleLogger.js:151 — GameConfigPhase starting —
consoleLogger.js:151 — ManifestPhase starting —
consoleLogger.js:151 — ContentPhase starting —
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'core'.
consoleLogger.js:151 EventLoader: Loading events definitions for mod 'core'.
consoleLogger.js:175 EventLoader [core]: Primary schema validation failed for 'directions_loaded.json' using schema 'schema://living-narrative-engine/event.schema.json'. {modId: 'core', filename: 'directions_loaded.json', resolvedPath: './data/mods/core/events/directions_loaded.json', schemaId: 'schema://living-narrative-engine/event.schema.json', validationErrors: Array(2), …}
error @ consoleLogger.js:175
validateAgainstSchema @ schemaValidationUtils.js:85
_validatePrimarySchema @ baseManifestItemLoader.js:210
validatePrimarySchema @ baseManifestItemLoader.js:408
_processFileWrapper @ baseManifestItemLoader.js:320
await in _processFileWrapper
(anonymous) @ baseManifestItemLoader.js:506
_loadItemsInternal @ baseManifestItemLoader.js:505
loadItemsForMod @ baseManifestItemLoader.js:640
runLoadersForMod_fn @ ModProcessor.js:164
await in runLoadersForMod_fn
processMod @ ModProcessor.js:80
await in processMod
executeModProcessing_fn @ ContentLoadManager.js:222
processMod @ ContentLoadManager.js:212
loadContentForPhase @ ContentLoadManager.js:174
loadContent @ ContentLoadManager.js:81
execute @ contentPhase.js:51
run @ ModsLoadSession.js:19
await in run
loadMods @ modsLoader.js:85
loadMods_fn2 @ CharacterBuilderBootstrap.js:659
bootstrap @ CharacterBuilderBootstrap.js:103
await in bootstrap
initializeApp @ core-motivations-generator-main.js:25
(anonymous) @ core-motivations-generator-main.js:94
(anonymous) @ core-motivations-generator-main.js:95Understand this error
consoleLogger.js:175 Error processing file: {modId: 'core', filename: 'directions_loaded.json', path: './data/mods/core/events/directions_loaded.json', registryKey: 'events', error: 'EventLoader [core]: Primary schema validation fail…"additionalProperties": false\n      }\n    }\n  }\n]'} Error: EventLoader [core]: Primary schema validation failed for 'directions_loaded.json' using schema 'schema://living-narrative-engine/event.schema.json'.
Details:
[
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "name"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  },
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "version"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  }
]
    at validateAgainstSchema (schemaValidationUtils.js:97:11)
    at EventLoader._validatePrimarySchema (baseManifestItemLoader.js:210:12)
    at EventLoader.validatePrimarySchema (baseManifestItemLoader.js:408:12)
    at EventLoader._processFileWrapper (baseManifestItemLoader.js:320:10)
    at async Promise.allSettled (index 38)
    at async EventLoader._loadItemsInternal (baseManifestItemLoader.js:509:28)
    at async ModProcessor.runLoadersForMod_fn (ModProcessor.js:164:15)
    at async ModProcessor.processMod (ModProcessor.js:80:52)
    at async ContentLoadManager.loadContentForPhase (ContentLoadManager.js:174:24)
    at async ContentLoadManager.loadContent (ContentLoadManager.js:81:7)
error @ consoleLogger.js:175
validatePrimarySchema @ baseManifestItemLoader.js:410
_processFileWrapper @ baseManifestItemLoader.js:320
await in _processFileWrapper
(anonymous) @ baseManifestItemLoader.js:506
_loadItemsInternal @ baseManifestItemLoader.js:505
loadItemsForMod @ baseManifestItemLoader.js:640
runLoadersForMod_fn @ ModProcessor.js:164
await in runLoadersForMod_fn
processMod @ ModProcessor.js:80
await in processMod
executeModProcessing_fn @ ContentLoadManager.js:222
processMod @ ContentLoadManager.js:212
loadContentForPhase @ ContentLoadManager.js:174
loadContent @ ContentLoadManager.js:81
execute @ contentPhase.js:51
run @ ModsLoadSession.js:19
await in run
loadMods @ modsLoader.js:85
loadMods_fn2 @ CharacterBuilderBootstrap.js:659
bootstrap @ CharacterBuilderBootstrap.js:103
await in bootstrap
initializeApp @ core-motivations-generator-main.js:25
(anonymous) @ core-motivations-generator-main.js:94
(anonymous) @ core-motivations-generator-main.js:95Understand this error
consoleLogger.js:175 ModsLoader [core, definitions]: events file 'directions_loaded.json' failed: EventLoader [core]: Primary schema validation failed for 'directions_loaded.json' using schema 'schema://living-narrative-engine/event.schema.json'.
Details:
[
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "name"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  },
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "version"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  }
] {modId: 'core', registryKey: 'events', phase: 'definitions', file: 'directions_loaded.json', error: 'EventLoader [core]: Primary schema validation fail…"additionalProperties": false\n      }\n    }\n  }\n]'} Error: EventLoader [core]: Primary schema validation failed for 'directions_loaded.json' using schema 'schema://living-narrative-engine/event.schema.json'.
Details:
[
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "name"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  },
  {
    "instancePath": "",
    "schemaPath": "#/additionalProperties",
    "keyword": "additionalProperties",
    "params": {
      "additionalProperty": "version"
    },
    "message": "must NOT have additional properties",
    "schema": false,
    "parentSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "schema://living-narrative-engine/event.schema.json",
      "title": "Event Schema",
      "description": "Defines the structure for an individual event definition file. Specifies the event's unique ID, an optional description, and an optional schema defining the structure of the event's payload.",
      "type": "object",
      "properties": {
        "$schema": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/$schema"
        },
        "id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "$id": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/id"
        },
        "description": {
          "$ref": "./common.schema.json#/definitions/BaseDefinition/properties/description"
        },
        "payloadSchema": {
          "description": "Optional. A JSON Schema object defining the structure of the data payload associated with this event. If the event has no payload, this property should be omitted or set to null.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": [
                "object",
                "boolean"
              ]
            },
            "additionalProperties": {
              "type": [
                "object",
                "boolean"
              ]
            }
          },
          "additionalProperties": true,
          "default": null,
          "$comment": "This structure allows standard JSON Schema properties (type, properties, required, etc.) within payloadSchema. Setting 'type' to ['object', 'null'] allows events with no payload. The 'additionalProperties: true' ensures flexibility for various schema structures within the payload definition."
        }
      },
      "anyOf": [
        {
          "required": [
            "id",
            "description"
          ]
        },
        {
          "required": [
            "$id",
            "description"
          ]
        }
      ],
      "additionalProperties": false
    },
    "data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "id": "core:directions_loaded",
      "name": "Directions Loaded",
      "description": "Fired when thematic directions have been loaded and organized for display",
      "version": "1.0.0",
      "payloadSchema": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of directions loaded"
          },
          "groups": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of concept groups"
          }
        },
        "required": [
          "count",
          "groups"
        ],
        "additionalProperties": false
      }
    }
  }
]
    at validateAgainstSchema (schemaValidationUtils.js:97:11)
    at EventLoader._validatePrimarySchema (baseManifestItemLoader.js:210:12)
    at EventLoader.validatePrimarySchema (baseManifestItemLoader.js:408:12)
    at EventLoader._processFileWrapper (baseManifestItemLoader.js:320:10)
    at async Promise.allSettled (index 38)
    at async EventLoader._loadItemsInternal (baseManifestItemLoader.js:509:28)
    at async ModProcessor.runLoadersForMod_fn (ModProcessor.js:164:15)
    at async ModProcessor.processMod (ModProcessor.js:80:52)
    at async ContentLoadManager.loadContentForPhase (ContentLoadManager.js:174:24)
    at async ContentLoadManager.loadContent (ContentLoadManager.js:81:7)
error @ consoleLogger.js:175
runLoadersForMod_fn @ ModProcessor.js:177
await in runLoadersForMod_fn
processMod @ ModProcessor.js:80
await in processMod
executeModProcessing_fn @ ContentLoadManager.js:222
processMod @ ContentLoadManager.js:212
loadContentForPhase @ ContentLoadManager.js:174
loadContent @ ContentLoadManager.js:81
execute @ contentPhase.js:51
run @ ModsLoadSession.js:19
await in run
loadMods @ modsLoader.js:85
loadMods_fn2 @ CharacterBuilderBootstrap.js:659
bootstrap @ CharacterBuilderBootstrap.js:103
await in bootstrap
initializeApp @ core-motivations-generator-main.js:25
(anonymous) @ core-motivations-generator-main.js:94
(anonymous) @ core-motivations-generator-main.js:95Understand this error
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'core'.
consoleLogger.js:151 MacroLoader: Loading macros definitions for mod 'core'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'core'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'core'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'core'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'positioning'.
consoleLogger.js:151 EventLoader: Loading events definitions for mod 'positioning'.
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'positioning'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'positioning'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'positioning'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'positioning'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'descriptors'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'anatomy'.
consoleLogger.js:151 EventLoader: Loading events definitions for mod 'anatomy'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entityDefinitions definitions for mod 'anatomy'.
consoleLogger.js:151 AnatomySlotLibraryLoader: Loading anatomySlotLibraries definitions for mod 'anatomy'.
consoleLogger.js:151 AnatomyBlueprintPartLoader: Loading anatomyBlueprintParts definitions for mod 'anatomy'.
consoleLogger.js:151 AnatomyBlueprintLoader: Loading anatomyBlueprints definitions for mod 'anatomy'.
consoleLogger.js:151 AnatomyRecipeLoader: Loading anatomyRecipes definitions for mod 'anatomy'.
consoleLogger.js:151 AnatomyFormattingLoader: Loading anatomyFormatting definitions for mod 'anatomy'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'clothing'.
consoleLogger.js:151 EventLoader: Loading events definitions for mod 'clothing'.
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'clothing'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'clothing'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'clothing'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'clothing'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entityDefinitions definitions for mod 'clothing'.
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'violence'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'violence'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'violence'.
consoleLogger.js:151 ComponentLoader: Loading components definitions for mod 'intimacy'.
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'intimacy'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'intimacy'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'intimacy'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'intimacy'.
consoleLogger.js:151 ConditionLoader: Loading conditions definitions for mod 'sex'.
consoleLogger.js:151 ActionLoader: Loading actions definitions for mod 'sex'.
consoleLogger.js:151 RuleLoader: Loading rules definitions for mod 'sex'.
consoleLogger.js:151 ScopeLoader: Loading scopes definitions for mod 'sex'.
consoleLogger.js:151 EntityDefinitionLoader: Loading entityDefinitions definitions for mod 'p_erotica'.
consoleLogger.js:151 AnatomyRecipeLoader: Loading anatomyRecipes definitions for mod 'p_erotica'.
consoleLogger.js:151 EntityInstanceLoader: Loading entityInstances definitions for mod 'p_erotica'.
consoleLogger.js:151 — WorldPhase starting —
consoleLogger.js:151 --- Starting World File Loading Phase ---
consoleLogger.js:151 --- World File Loading Phase Complete ---
consoleLogger.js:151 WorldLoader: Successfully processed and registered 2 worlds, containing 8 entity instances. All 8 definition references were resolved.
consoleLogger.js:151 — SummaryPhase starting —
consoleLogger.js:151 — ModsLoader Load Summary (World: 'default') —
consoleLogger.js:151   • Requested Mods (raw): [core, positioning, anatomy, clothing, violence, intimacy, p_erotica]
consoleLogger.js:151   • Final Load Order     : [core, positioning, descriptors, anatomy, clothing, violence, intimacy, sex, p_erotica]
consoleLogger.js:151   • Content Loading Summary (Totals):
consoleLogger.js:151      - actions             : 42 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyBlueprintParts: 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyBlueprints   : 2 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyFormatting   : 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomyRecipes      : 7 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - anatomySlotLibraries: 1 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - components          : 57 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - conditions          : 59 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entityDefinitions   : 85 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - entityInstances     : 8 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - events              : 93 loaded, 0 overrides, 1 errors
consoleLogger.js:151      - macros              : 4 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - rules               : 48 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - scopes              : 29 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - worlds              : 2 loaded, 0 overrides, 0 errors
consoleLogger.js:151      - ----------------------------------------------
consoleLogger.js:151      - TOTAL               : C:439, O:0, E:1
consoleLogger.js:151 ———————————————————————————————————————————
consoleLogger.js:151 ModsLoader: Load sequence for world 'default' completed successfully.
consoleLogger.js:151 ModsLoader: Load sequence for world 'default' completed successfully.
consoleLogger.js:151 [CharacterBuilderBootstrap] Core mod loaded successfully
consoleLogger.js:151 CharacterDatabase: Successfully opened database
consoleLogger.js:151 CharacterStorageService: Successfully initialized
consoleLogger.js:151 CoreMotivationsGeneratorController: Successfully created with dependencies {coreServices: Array(4), additionalServices: Array(3)}
consoleLogger.js:151 Initializing Core Motivations Generator Controller
consoleLogger.js:151 Organized 2 directions into 2 concept groups (sorted alphabetically)
consoleLogger.js:163 VED: EventDefinition not found for 'core:directions_loaded'. Cannot validate payload. Proceeding with dispatch.
warn @ consoleLogger.js:163
validatePayload_fn @ validatedEventDispatcher.js:93
dispatch @ validatedEventDispatcher.js:225
__privateMethod.call.payload.payload @ safeEventDispatcher.js:124
executeSafely_fn @ safeEventDispatcher.js:88
dispatch @ safeEventDispatcher.js:122
populateDirectionSelector_fn @ CoreMotivationsGeneratorController.js:339
loadEligibleDirections_fn @ CoreMotivationsGeneratorController.js:211
await in loadEligibleDirections_fn
initialize @ CoreMotivationsGeneratorController.js:130
initializeController_fn @ CharacterBuilderBootstrap.js:873
bootstrap @ CharacterBuilderBootstrap.js:119
await in bootstrap
initializeApp @ core-motivations-generator-main.js:25
(anonymous) @ core-motivations-generator-main.js:94
(anonymous) @ core-motivations-generator-main.js:95Understand this warning
consoleLogger.js:151 Loaded 2 eligible directions from all concepts
consoleLogger.js:151 Core Motivations Generator Controller initialized
consoleLogger.js:151 [CharacterBuilderBootstrap] Page 'core-motivations-generator' bootstrapped in 926.50ms {metrics: {…}}
core-motivations-generator-main.js:50 Core Motivations Generator initialized in 926.50ms
consoleLogger.js:151 Retrieved 0 motivations for direction bd1409eb-7e2a-4d4f-abd5-10af53d28df6
consoleLogger.js:175 Failed to generate motivations: TypeError: __privateGet(...).generate is not a function
    at CoreMotivationsGeneratorController.generateMotivations_fn (CoreMotivationsGeneratorController.js:811:67)
error @ consoleLogger.js:175
generateMotivations_fn @ CoreMotivationsGeneratorController.js:836
await in generateMotivations_fn
(anonymous) @ CoreMotivationsGeneratorController.js:1186Understand this error
consoleLogger.js:175 Failed to generate motivations. Please try again.