<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f2176490-fa0e-405e-af38-7bec8f5491f5" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/actions/targeting/targetResolutionService.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/commands/commandParser.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/commands/commandParser.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dependencyInjection/registrations/commandAndActionRegistrations.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/dependencyInjection/registrations/commandAndActionRegistrations.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dependencyInjection/registrations/turnLifecycleRegistrations.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/dependencyInjection/registrations/turnLifecycleRegistrations.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/dependencyInjection/tokens.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/dependencyInjection/tokens.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/engineVersion.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/engineVersion.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/ITargetResolutionService.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/persistence/gamePersistenceService.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/persistence/gamePersistenceService.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/adapters/eventBusPromptAdapter.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/adapters/eventBusPromptAdapter.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/adapters/eventBusTurnEndAdapter.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/adapters/eventBusTurnEndAdapter.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/constants/turnDirectives.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/constants/turnDirectives.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/context/turnContext.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/context/turnContext.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/dtos/actionComposite.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/dtos/actionComposite.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/factories/turnActionFactory.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/factories/turnActionFactory.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/handlers/playerTurnHandler.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/interfaces/IActorTurnStrategy.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/interfaces/IActorTurnStrategy.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/interfaces/ITurnContext.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/interfaces/ITurnContext.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/interfaces/ITurnHandler.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/interfaces/ITurnHandler.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/orchestration/aiDecisionOrchestrator.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/orchestration/aiDecisionOrchestrator.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/order/turnOrderService.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/order/turnOrderService.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/ports/ICommandInputPort.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/ports/ICommandInputPort.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/ports/IPromptOutputPort.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/ports/IPromptOutputPort.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/prompting/promptSession.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/prompting/promptSession.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/states/awaitingPlayerInputState.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/states/awaitingPlayerInputState.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/states/processingCommandState.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/states/processingCommandState.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/strategies/aiPlayerStrategy.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/strategies/aiPlayerStrategy.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/strategies/humanPlayerStrategy.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/strategies/humanPlayerStrategy.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/strategies/turnDirectiveStrategyResolver.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/strategies/turnDirectiveStrategyResolver.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/turns/strategies/waitForTurnEndEventStrategy.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/turns/strategies/waitForTurnEndEventStrategy.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/resolutionStatus.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/targetResolutionResult.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/messages.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/messages.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/nameMatcher.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/objectUtils.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/objectUtils.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/targetingUtils.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/actions/targeting/targetResolutionService.domain-followers.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.basic.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.basic.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.direction.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.direction.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.originalInput.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.originalInput.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.prepositionEdgeCases.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.prepositionEdgeCases.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.prepositional.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.prepositional.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.verbMatching.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.verbMatching.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.parse.verbOnlyDirectObject.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.parse.verbOnlyDirectObject.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/commands/commandParser.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/commands/commandParser.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/config/containerConfig.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/config/containerConfig.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/dependencyInjection/registrations/commandAndActionRegistrations.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/dependencyInjection/registrations/commandAndActionRegistrations.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/dependencyInjection/registrations/turnLifecycleRegistrations.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/dependencyInjection/registrations/turnLifecycleRegistrations.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.constructor.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-direction.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-environment.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-equipment.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-inventory.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-none.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.domain-self.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/targetResolutionService.matchingLogic.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/services/turnHandlerResolver.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/services/turnHandlerResolver.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/handlers/baseTurnHandler.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/handlers/baseTurnHandler.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/handlers/playerTurnHandler.fixes.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/handlers/playerTurnHandler.fixes.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/prompting/promptCoordinator.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/prompting/promptCoordinator.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/prompting/promptSession.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/prompting/promptSession.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/states/processingCommandState.coverage.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/states/processingCommandState.coverage.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/states/processingCommandState.enterState.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/states/processingCommandState.enterState.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/states/turnEndingState.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/states/turnEndingState.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/states/turnIdleState.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/states/turnIdleState.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/strategies/humanPlayerStrategy.noChildLogger.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/strategies/humanPlayerStrategy.noChildLogger.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/strategies/humanPlayerStrategy.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/strategies/humanPlayerStrategy.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/turns/turnOrder/turnOrderService.constructor.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/turns/turnOrder/turnOrderService.constructor.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/messages.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/utils/messages.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/nameMatcher.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/objectUtils.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/utils/objectUtils.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/resolvePath.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/tests/utils/resolvePath.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/utils/targetingUtils.test.js" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "joeloverbeck"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/joeloverbeck/living-narrative-engine.git",
    "accountId": "e87db63c-2fda-4154-8e23-63c0c53d7f35"
  }
}]]></component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 0
}]]></component>
  <component name="ProjectId" id="2ySOLZsW8IlwYEr51W14KWZicLV" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.Tests in tests\\.executor": "Run",
    "Jest.promptCoordinator.integration.test.js.executor": "Run",
    "Jest.promptSession.test.js.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "junie.onboarding.icon.badge.shown": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "G:/Projects/programming/javascript/living-narrative-engine/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "G:\\Projects\\programming\\javascript\\living-narrative-engine\\node_modules\\prettier",
    "settings.editor.selected.configurable": "web-ide.project.structure",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Jest.promptSession.test.js">
    <configuration name="Tests in tests\" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="DIRECTORY" />
      <test-directory value="$PROJECT_DIR$/tests" />
      <method v="2" />
    </configuration>
    <configuration name="promptCoordinator.integration.test.js" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/tests/integration/promptCoordinator.integration.test.js" />
      <method v="2" />
    </configuration>
    <configuration name="promptSession.test.js" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/tests/turns/prompting/promptSession.test.js" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.promptSession.test.js" />
        <item itemvalue="Jest.Tests in tests\" />
        <item itemvalue="Jest.promptCoordinator.integration.test.js" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-WS-251.26094.131" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f2176490-fa0e-405e-af38-7bec8f5491f5" name="Changes" comment="" />
      <created>1749824452963</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749824452963</updated>
      <workItem from="1749824454676" duration="1792000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>