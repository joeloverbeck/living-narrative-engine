{
  "$schema": "schema://living-narrative-engine/rule.schema.json",
  "rule_id": "handle_take_from_container",
  "comment": "Handles take_from_container action with capacity validation",
  "priority": 100,
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "items:event-is-action-take-from-container"
  },
  "actions": [
    {
      "type": "VALIDATE_INVENTORY_CAPACITY",
      "comment": "Check if actor can carry the item",
      "parameters": {
        "targetEntity": "{event.payload.actorId}",
        "itemEntity": "{event.payload.secondaryId}",
        "result_variable": "capacityCheck"
      }
    },
    {
      "type": "IF",
      "comment": "Branch based on capacity validation",
      "parameters": {
        "condition": {
          "==": [
            { "var": "context.capacityCheck.valid" },
            false
          ]
        },
        "then_actions": [
        {
          "type": "QUERY_COMPONENT",
          "comment": "Get actor position for logging",
          "parameters": {
            "entity_ref": "actor",
            "component_type": "core:position",
            "result_variable": "actorPosition"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get actor name",
          "parameters": {
            "entity_ref": "actor",
            "result_variable": "actorName"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get container name",
          "parameters": {
            "entity_ref": "target",
            "result_variable": "containerName"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get item name",
          "parameters": {
            "entity_ref": "{event.payload.secondaryId}",
            "result_variable": "itemName"
          }
        },
        {
          "type": "SET_VARIABLE",
          "comment": "Prepare failure message",
          "parameters": {
            "variable_name": "logMessage",
            "value": "{context.actorName} tried to take {context.itemName} from {context.containerName}, but can't carry it."
          }
        },
        {
          "type": "DISPATCH_PERCEPTIBLE_EVENT",
          "comment": "Log failed take",
          "parameters": {
            "location_id": "{context.actorPosition.locationId}",
            "description_text": "{context.logMessage}",
            "perception_type": "take_from_container_failed",
            "actor_id": "{event.payload.actorId}",
            "target_id": "{event.payload.targetId}",
            "involved_entities": ["{event.payload.secondaryId}"],
            "contextual_data": {
              "reason": "{context.capacityCheck.reason}"
            }
          }
        },
        {
          "type": "END_TURN",
          "comment": "End turn after failed take",
          "parameters": {
            "entityId": "{event.payload.actorId}",
            "success": false
          }
        }
      ],
      "else_actions": [
        {
          "type": "TAKE_FROM_CONTAINER",
          "comment": "Move item from container to inventory",
          "parameters": {
            "actorEntity": "{event.payload.actorId}",
            "containerEntity": "{event.payload.targetId}",
            "itemEntity": "{event.payload.secondaryId}",
            "result_variable": "takeResult"
          }
        },
        {
          "type": "QUERY_COMPONENT",
          "comment": "Get actor position for logging",
          "parameters": {
            "entity_ref": "actor",
            "component_type": "core:position",
            "result_variable": "actorPosition"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get actor name",
          "parameters": {
            "entity_ref": "actor",
            "result_variable": "actorName"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get container name",
          "parameters": {
            "entity_ref": "target",
            "result_variable": "containerName"
          }
        },
        {
          "type": "GET_NAME",
          "comment": "Get item name",
          "parameters": {
            "entity_ref": "{event.payload.secondaryId}",
            "result_variable": "itemName"
          }
        },
        {
          "type": "SET_VARIABLE",
          "comment": "Prepare success message",
          "parameters": {
            "variable_name": "logMessage",
            "value": "{context.actorName} took {context.itemName} from {context.containerName}."
          }
        },
        {
          "type": "DISPATCH_PERCEPTIBLE_EVENT",
          "comment": "Log successful take",
          "parameters": {
            "location_id": "{context.actorPosition.locationId}",
            "description_text": "{context.logMessage}",
            "perception_type": "item_taken_from_container",
            "actor_id": "{event.payload.actorId}",
            "target_id": "{event.payload.targetId}",
            "involved_entities": ["{event.payload.secondaryId}"]
          }
        },
        {
          "type": "END_TURN",
          "comment": "End actor's turn after taking item",
          "parameters": {
            "entityId": "{event.payload.actorId}",
            "success": true
          }
        }
      ]
      }
    }
  ]
}
