{
  "$schema": "schema://living-narrative-engine/rule.schema.json",
  "rule_id": "handle_apply_lipstick",
  "comment": "Handles the apply_lipstick action by broadcasting a cosmetic application message and ending the turn.",
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "items:event-is-action-apply-lipstick"
  },
  "actions": [
    {
      "type": "GET_NAME",
      "comment": "Capture the actor name for messaging",
      "parameters": {
        "entity_ref": "actor",
        "result_variable": "actorName"
      }
    },
    {
      "type": "GET_NAME",
      "comment": "Capture the lipstick item name",
      "parameters": {
        "entity_ref": "target",
        "result_variable": "itemName"
      }
    },
    {
      "type": "QUERY_COMPONENT",
      "comment": "Locate the actor for perception routing",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "core:position",
        "result_variable": "actorPosition"
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Compose the lipstick application message",
      "parameters": {
        "variable_name": "logMessage",
        "value": "{context.actorName} coats their lips evenly with {context.itemName}."
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Use the general item use perception type",
      "parameters": {
        "variable_name": "perceptionType",
        "value": "item_use"
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Provide the location for the perceptible event",
      "parameters": {
        "variable_name": "locationId",
        "value": "{context.actorPosition.locationId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Identify the lipstick item as the target",
      "parameters": {
        "variable_name": "targetId",
        "value": "{event.payload.targetId}"
      }
    },
    {
      "comment": "Emit perception, notify success, and end the turn",
      "macro": "core:logSuccessAndEndTurn"
    }
  ]
}
