{
  "$schema": "http://example.com/schemas/rule.schema.json",
  "rule_id": "core_follow_auto_move",
  "comment": "Automatically queues a core:go for each co-located follower.",
  "event_type": "core:entity_moved",
  "condition": {
    "and": [
      {
        "!==": [
          {
            "var": "actor.components.core:leading"
          },
          null
        ]
      },
      {
        "!!": {
          "var": "actor.components.core:leading.followers.length"
        }
      }
    ]
  },
  "actions": [
    {
      "type": "QUERY_SYSTEM_DATA",
      "comment": "Refresh the leader cache (never trust stale).",
      "parameters": {
        "source_id": "LeaderListSyncService",
        "query_details": {
          "action": "rebuildFor",
          "leaderIds": [
            "{event.payload.entityId}"
          ]
        },
        "result_variable": "leaderSyncResult"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "followers",
        "value": "{actor.components.core:leading.followers}"
      }
    },
    {
      "type": "FOR_EACH",
      "parameters": {
        "collection": "context.followers",
        "item_variable": "followerId",
        "actions": [
          {
            "type": "QUERY_COMPONENT",
            "parameters": {
              "entity_ref": {
                "entityId": "{context.followerId}"
              },
              "component_type": "core:position",
              "result_variable": "followerPos"
            }
          },
          {
            "type": "IF",
            "parameters": {
              "condition": {
                "==": [
                  {
                    "var": "context.followerPos.locationId"
                  },
                  {
                    "var": "event.payload.previousLocationId"
                  }
                ]
              },
              "then_actions": [
                {
                  "type": "DISPATCH_EVENT",
                  "parameters": {
                    "eventType": "core:attempt_action",
                    "payload": {
                      "eventName": "core:attempt_action",
                      "actorId": "{context.followerId}",
                      "actionId": "core:go",
                      "direction": "{event.payload.direction}",
                      "originalInput": "{event.payload.originalCommand}"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}