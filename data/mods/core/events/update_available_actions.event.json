{
  "$schema": "schema://living-narrative-engine/component.schema.json",
  "id": "core:update_available_actions",
  "description": "Tells the UI to refresh the action-bar for a given actor, using the fully formatted and indexed action list.",
  "payloadSchema": {
    "type": "object",
    "title": "Core: Update Available Actions – Payload",
    "properties": {
      "actorId": {
        "$ref": "schema://living-narrative-engine/common.schema.json#/definitions/namespacedId",
        "description": "ID of the actor whose action list is being updated."
      },
      "actions": {
        "type": "array",
        "description": "All legal actions for the actor’s current turn.",
        "items": {
          "type": "object",
          "properties": {
            "index": {
              "type": "integer",
              "minimum": 1,
              "description": "Stable numeric choice presented to the player / LLM."
            },
            "actionId": {
              "$ref": "schema://living-narrative-engine/common.schema.json#/definitions/namespacedId",
              "description": "Underlying action definition ID."
            },
            "commandString": {
              "type": "string",
              "description": "Fully formatted command (e.g. “go north”)."
            },
            "params": {
              "type": "object",
              "description": "Action-specific parameters (direction, targetId, etc.).",
              "additionalProperties": true,
              "default": {}
            },
            "description": {
              "type": "string",
              "description": "Human-readable explanation of the action."
            },
            "visual": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "description": "Visual styling properties for action buttons",
                  "properties": {
                    "backgroundColor": {
                      "type": "string",
                      "description": "CSS color for button background",
                      "pattern": "^(#([0-9A-Fa-f]{3}){1,2}|rgb\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*\\)|rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*[\\d.]+\\s*\\)|[a-zA-Z]+)$"
                    },
                    "textColor": {
                      "type": "string",
                      "description": "CSS color for button text",
                      "pattern": "^(#([0-9A-Fa-f]{3}){1,2}|rgb\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*\\)|rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*[\\d.]+\\s*\\)|[a-zA-Z]+)$"
                    },
                    "hoverBackgroundColor": {
                      "type": "string",
                      "description": "CSS color for button background on hover",
                      "pattern": "^(#([0-9A-Fa-f]{3}){1,2}|rgb\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*\\)|rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*[\\d.]+\\s*\\)|[a-zA-Z]+)$"
                    },
                    "hoverTextColor": {
                      "type": "string",
                      "description": "CSS color for button text on hover",
                      "pattern": "^(#([0-9A-Fa-f]{3}){1,2}|rgb\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*\\)|rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*[\\d.]+\\s*\\)|[a-zA-Z]+)$"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": ["index", "actionId", "commandString", "description"],
          "additionalProperties": false
        },
        "uniqueItems": true
      }
    },
    "required": ["actorId", "actions"],
    "additionalProperties": false
  }
}
