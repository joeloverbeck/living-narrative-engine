{
  "$schema": "http://example.com/schemas/event-definition.schema.json",
  "id": "core:player_turn_submitted",
  "description": "Signals that the player has finalized their action choice and any accompanying speech input. This event is critical for the game's input flow.\n\nKey Information:\n- `actionId`: Must correspond to a unique identifier of an action previously made available to the player.\n- `speech`: Contains the text from the speech input field. It can be an empty string. If speech is not provided or is empty, it should be represented as `null` in the payload.\n\nDispatching: This event is recommended to be dispatched via the `ValidatedEventDispatcher` to ensure payload integrity against the defined `payloadSchema`.",
  "payloadSchema": {
    "type": "object",
    "title": "CorePlayerTurnSubmittedPayload",
    "description": "Payload for the core:player_turn_submitted event.",
    "properties": {
      "actionId": {
        "type": "string",
        "minLength": 1,
        "description": "The unique identifier of the selected AvailableAction. Consider if this should conform to a namespaced ID pattern (e.g., 'module:action_name')."
      },
      "speech": {
        "type": [
          "string",
          "null"
        ],
        "description": "The text from the speech input field, or null if the field was empty or speech was not provided."
      }
    },
    "required": [
      "actionId",
      "speech"
    ],
    "additionalProperties": false
  }
}