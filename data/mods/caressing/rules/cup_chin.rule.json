{
  "$schema": "schema://living-narrative-engine/rule.schema.json",
  "rule_id": "handle_cup_chin",
  "comment": "Handles the 'caressing:cup_chin' action. This rule generates descriptive text for the event, dispatches it for others to see and for the actor's UI, and ends the turn.",
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "caressing:event-is-action-cup-chin"
  },
  "actions": [
    {
      "type": "GET_NAME",
      "comment": "Get the actor's name for the observer message.",
      "parameters": {
        "entity_ref": "actor",
        "result_variable": "actorName"
      }
    },
    {
      "type": "GET_NAME",
      "comment": "Get the target's name for all messages.",
      "parameters": {
        "entity_ref": "target",
        "result_variable": "targetName"
      }
    },
    {
      "type": "QUERY_COMPONENT",
      "comment": "Get the actor's position component data.",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "core:position",
        "result_variable": "actorPosition"
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Extract locationId to a simple context variable for robustness.",
      "parameters": {
        "variable_name": "locationId",
        "value": "{context.actorPosition.locationId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "comment": "Construct the descriptive message before dispatching.",
      "parameters": {
        "variable_name": "logMessage",
        "value": "{context.actorName} cups {context.targetName}'s chin in a tender gesture."
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "perceptionType",
        "value": "action_target_general"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "targetId",
        "value": "{event.payload.targetId}"
      }
    },
    { "macro": "core:logSuccessAndEndTurn" }
  ]
}
