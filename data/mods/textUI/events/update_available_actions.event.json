{
  "$schema": "http://example.com/schemas/event-definition.schema.json",
  "id": "textUI:update_available_actions",
  "description": "Signals a UI component (like the action buttons renderer) to update the display of currently available player actions for a specific actor, based on the provided list of action objects.",
  "payloadSchema": {
    "type": "object",
    "title": "UIUpdateActionsPayload",
    "description": "Defines the payload for the 'textUI:update_available_actions' event, containing the actor ID and the list of available action objects.",
    "properties": {
      "actorId": {
        "$ref": "http://example.com/schemas/common.schema.json#/definitions/namespacedId",
        "description": "The unique ID of the actor for whom these actions are available."
      },
      "actions": {
        "type": "array",
        "description": "An array of objects, each representing a valid action the player can currently take, including its ID, name, description, and formatted command.",
        "items": {
          "type": "object",
          "description": "Object containing the action ID, name, description, and its formatted command string.",
          "properties": {
            "id": {
              "$ref": "http://example.com/schemas/common.schema.json#/definitions/namespacedId",
              "description": "The unique ID of the action definition (e.g., 'core:wait')."
            },
            "name": {
              "type": "string",
              "description": "The human-readable name of the action (e.g., 'Wait').",
              "minLength": 1
            },
            "command": {
              "type": "string",
              "description": "The formatted command string ready for display/parsing (e.g., 'wait', 'go north').",
              "minLength": 1
            },
            "description": {
              "type": "string",
              "description": "A detailed description of what the action does.",
              "minLength": 1
            }
          },
          "required": [
            "id",
            "name",
            "command",
            "description"
          ],
          "additionalProperties": false
        },
        "uniqueItems": false
      }
    },
    "required": [
      "actorId",
      "actions"
    ],
    "additionalProperties": false
  }
}