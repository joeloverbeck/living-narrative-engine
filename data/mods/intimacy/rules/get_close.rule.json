{
  "$schema": "http://example.com/schemas/rule.schema.json",
  "rule_id": "intimacy_handle_get_close",
  "comment": "Handles the 'intimacy:get_close' action. Implements algorithm ยง5.1 from the spec. It merges actor, target, and their existing partners into a new, single, fully-connected closeness circle, then locks movement for all members.",
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "intimacy:event-is-action-get-close"
  },
  "actions": [
    {
      "type": "MERGE_CLOSENESS_CIRCLE",
      "comment": "Steps 1-6: Merge actor and target closeness circles and lock movement.",
      "parameters": {
        "actor_id": "{event.payload.actorId}",
        "target_id": "{event.payload.targetId}"
      }
    },
    {
      "type": "GET_NAME",
      "comment": "Step 7: Get names for the UI message.",
      "parameters": {
        "entity_ref": "actor",
        "result_variable": "actorName"
      }
    },
    {
      "type": "GET_NAME",
      "parameters": {
        "entity_ref": "target",
        "result_variable": "targetName"
      }
    },
    {
      "type": "QUERY_COMPONENT",
      "comment": "Get location for perceptible event.",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "core:position",
        "result_variable": "actorPos"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "logMessage",
        "value": "{context.actorName} and {context.targetName} are now close."
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "locationId",
        "value": "{context.actorPos.locationId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "perceptionType",
        "value": "state_change_observable"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "targetId",
        "value": "{event.payload.targetId}"
      }
    },
    { "macro": "core:logSuccessAndEndTurn" }
  ]
}