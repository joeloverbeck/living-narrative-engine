{
  "$schema": "schema://living-narrative-engine/rule.schema.json",
  "rule_id": "handle_dismount_from_straddling",
  "comment": "Handles the 'positioning:dismount_from_straddling' action. Removes straddling_waist component, removes facing_away if present, unlocks movement.",
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "positioning:event-is-action-dismount-from-straddling"
  },
  "actions": [
    {
      "type": "QUERY_COMPONENT",
      "comment": "Get straddling_waist data to check orientation",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "positioning:straddling_waist",
        "result_variable": "straddlingData"
      }
    },
    {
      "type": "GET_NAME",
      "parameters": {
        "entity_ref": "actor",
        "result_variable": "actorName"
      }
    },
    {
      "type": "GET_NAME",
      "parameters": {
        "entity_ref": "target",
        "result_variable": "targetName"
      }
    },
    {
      "type": "QUERY_COMPONENT",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "core:position",
        "result_variable": "actorPosition"
      }
    },
    {
      "type": "REMOVE_COMPONENT",
      "comment": "Remove straddling_waist component",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "positioning:straddling_waist"
      }
    },
    {
      "type": "IF",
      "comment": "Remove facing_away component if actor was facing away",
      "parameters": {
        "condition": {
          "var": "context.straddlingData.facing_away"
        },
        "then_actions": [
          {
            "type": "REMOVE_COMPONENT",
            "parameters": {
              "entity_ref": "actor",
              "component_type": "positioning:facing_away"
            }
          }
        ]
      }
    },
    {
      "type": "UNLOCK_MOVEMENT",
      "comment": "Unlock movement after dismounting",
      "parameters": {
        "actor_id": "{event.payload.actorId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "logMessage",
        "value": "{context.actorName} dismounts from straddling {context.targetName}."
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "perceptionType",
        "value": "action_target_general"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "locationId",
        "value": "{context.actorPosition.locationId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "targetId",
        "value": "{event.payload.targetId}"
      }
    },
    {
      "macro": "core:logSuccessAndEndTurn"
    }
  ]
}
