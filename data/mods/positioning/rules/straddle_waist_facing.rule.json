{
  "$schema": "schema://living-narrative-engine/rule.schema.json",
  "rule_id": "handle_straddle_waist_facing",
  "comment": "Handles the 'positioning:straddle_waist_facing' action. Adds straddling_waist component with facing_away=false, locks movement.",
  "event_type": "core:attempt_action",
  "condition": {
    "condition_ref": "positioning:event-is-action-straddle-waist-facing"
  },
  "actions": [
    {
      "type": "GET_NAME",
      "parameters": {
        "entity_ref": "actor",
        "result_variable": "actorName"
      }
    },
    {
      "type": "GET_NAME",
      "parameters": {
        "entity_ref": "target",
        "result_variable": "targetName"
      }
    },
    {
      "type": "QUERY_COMPONENT",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "core:position",
        "result_variable": "actorPosition"
      }
    },
    {
      "type": "ADD_COMPONENT",
      "comment": "Add straddling_waist component with facing orientation",
      "parameters": {
        "entity_ref": "actor",
        "component_type": "positioning:straddling_waist",
        "value": {
          "target_id": "{event.payload.targetId}",
          "facing_away": false
        }
      }
    },
    {
      "type": "LOCK_MOVEMENT",
      "comment": "Lock movement while straddling",
      "parameters": {
        "actor_id": "{event.payload.actorId}"
      }
    },
    {
      "type": "REGENERATE_DESCRIPTION",
      "parameters": { "entity_ref": "actor" }
    },
    {
      "type": "REGENERATE_DESCRIPTION",
      "parameters": { "entity_ref": "target" }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "logMessage",
        "value": "{context.actorName} sits on {context.targetName}'s lap (face-to-face)."
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "perceptionType",
        "value": "action_target_general"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "locationId",
        "value": "{context.actorPosition.locationId}"
      }
    },
    {
      "type": "SET_VARIABLE",
      "parameters": {
        "variable_name": "targetId",
        "value": "{event.payload.targetId}"
      }
    },
    {
      "macro": "core:logSuccessAndEndTurn"
    }
  ]
}
