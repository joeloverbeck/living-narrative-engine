{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/schemas/common.schema.json",
  "title": "Common Definitions",
  "definitions": {
    "namespacedId": {
      "description": "A unique identifier string, typically namespaced using a colon (e.g., 'core:player', 'mod_combat:action_attack'). Allows alphanumeric characters, underscore, hyphen, and colon.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9_\\-:]+$"
    },
    "DefinitionRefComponent": {
      "description": "A generic component holding a single reference ID string, typically to a definition (e.g., an item definition ID on an instance, a character class definition).",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/namespacedId",
          "description": "The namespaced ID referencing the target definition."
        }
      },
      "additionalProperties": false
    },
    "nullableNamespacedId": {
      "description": "A unique identifier string, typically namespaced (like namespacedId), or null.",
      "oneOf": [
        {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\-:]+$"
        },
        {
          "type": "null"
        }
      ]
    },
    "NameComponent": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "The primary display name or title of the entity (e.g., 'Player', 'Goblin Sentry', 'Iron Key')."
        }
      }
    },
    "entityReference": {
      "description": "Specifies an entity. Can be a keyword ('actor', 'target'), a direct non-empty entity ID string, or an object containing the entity ID.",
      "oneOf": [
        {
          "type": "string",
          "description": "Keyword ('actor', 'target') or direct entity ID string.",
          "minLength": 1,
          "pattern": "^\\S(.*\\S)?$"
        },
        {
          "type": "object",
          "properties": {
            "entityId": {
              "type": "string",
              "description": "The specific entity ID.",
              "minLength": 1,
              "pattern": "^\\S(.*\\S)?$"
            }
          },
          "required": ["entityId"],
          "additionalProperties": false,
          "description": "Reference via explicit entityId property."
        }
      ]
    },
    "DescriptionComponent": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "A static description text for the entity."
        }
      }
    },
    "MetaDescriptionComponent": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "keywords"
      ],
      "properties": {
        "keywords": {
          "type": "array",
          "description": "A list of concise keywords or short phrases describing the location's key features, atmosphere, or contents (e.g., ['damp stone', 'flickering torchlight', 'smell of decay', 'distant dripping']). Used as input for LLM description generation.",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "style_hint": {
          "type": "string",
          "description": "(Optional) Hint for the LLM about the desired writing style (e.g., 'brief', 'ominous', 'poetic')."
        }
      }
    },
    "LocationConnections": {
      "type": "object",
      "description": "Component specific to Locations, defining exits by referencing Connection entities (like doors, passages).",
      "additionalProperties": false,
      "required": [
        "connections"
      ],
      "properties": {
        "connections": {
          "type": "object",
          "description": "A map where keys are direction strings (e.g., 'north', 'enter door') and values are the namespaced IDs of the corresponding Connection entities.",
          "additionalProperties": {
            "$ref": "#/definitions/namespacedId",
            "description": "The namespacedId of the Connection entity representing this exit."
          },
          "propertyNames": {
            "type": "string",
            "description": "The direction command used to traverse this connection (e.g., 'north', 'climb ladder')."
          },
          "examples": [
            {
              "north": "conn:roomA_to_roomB",
              "climb ladder": "conn:roomA_to_attic",
              "enter door": "conn:roomA_to_closet"
            }
          ]
        }
      }
    },
    "EquipmentComponent": {
      "type": "object",
      "description": "Tracks items equipped by the entity in specific body slots.",
      "properties": {
        "slots": {
          "type": "object",
          "description": "A map where keys are slot IDs (e.g., 'core:slot_main_hand') and values are the entity ID string of the equipped item, or null if empty.",
          "additionalProperties": {
            "$ref": "#/definitions/nullableNamespacedId"
          },
          "propertyNames": {
            "$ref": "#/definitions/namespacedId"
          },
          "examples": [
            {
              "core:slot_main_hand": "demo:item_sword",
              "core:slot_head": null
            }
          ]
        }
      },
      "required": [
        "slots"
      ],
      "additionalProperties": false
    },
    "QuestLogComponent": {
      "type": "object",
      "description": "Component for entities (typically the player) that track quest progress.",
      "properties": {
        "active_quests": {
          "type": "array",
          "description": "List of IDs of quests currently being tracked.",
          "items": {
            "$ref": "#/definitions/namespacedId"
          },
          "default": [],
          "uniqueItems": true
        },
        "completed_quests": {
          "type": "array",
          "description": "List of IDs of quests that have been completed.",
          "items": {
            "$ref": "#/definitions/namespacedId"
          },
          "default": [],
          "uniqueItems": true
        }
      },
      "required": [],
      "additionalProperties": false
    },
    "TypedParameterBase": {
      "type": "object",
      "description": "Base structure for objects where a 'type' string dictates the structure of a 'parameters' object.",
      "required": [
        "type",
        "parameters"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Identifier determining the required structure of the 'parameters' object."
        },
        "parameters": {
          "type": "object",
          "description": "Container for parameters specific to the 'type'. Specific properties defined in consuming schemas using oneOf/allOf."
        }
      },
      "additionalProperties": false
    },
    "eventDefinition": {
      "type": "object",
      "description": "Defines an event structure containing a name/ID and optional data payload.",
      "required": [
        "eventName"
      ],
      "properties": {
        "eventName": {
          "$ref": "#/definitions/namespacedId",
          "description": "The unique, namespaced name/ID of the event to fire."
        },
        "eventData": {
          "type": "object",
          "description": "Optional payload data object for the event. Structure depends on the specific event being fired.",
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "PassageDetailsComponent": {
      "type": "object",
      "description": "Core component defining the details of a bi-directional passage (connection) between two locations.",
      "required": [
        "locationAId",
        "locationBId",
        "directionAtoB",
        "directionBtoA"
      ],
      "properties": {
        "locationAId": {
          "$ref": "#/definitions/namespacedId",
          "description": "The unique identifier of the first location connected by this passage."
        },
        "locationBId": {
          "$ref": "#/definitions/namespacedId",
          "description": "The unique identifier of the second location connected by this passage."
        },
        "directionAtoB": {
          "type": "string",
          "description": "The command or label used to travel from location A to location B (e.g., 'north', 'enter doorway', 'climb ladder')."
        },
        "directionBtoA": {
          "type": "string",
          "description": "The command or label used to travel from location B to location A (e.g., 'south', 'exit doorway', 'climb down')."
        },
        "blockerEntityId": {
          "$ref": "#/definitions/nullableNamespacedId",
          "default": null,
          "description": "Optional identifier of an entity (like a door or barrier) that blocks this passage. Its state (e.g., locked, open) controls traversability."
        },
        "type": {
          "type": "string",
          "default": "passage",
          "description": "The type of connection (e.g., 'doorway', 'path', 'archway', 'window', 'teleporter').",
          "examples": [
            "passage",
            "doorway",
            "path",
            "archway",
            "stairs",
            "ladder",
            "teleporter",
            "window"
          ]
        },
        "isHidden": {
          "type": "boolean",
          "default": false,
          "description": "If true, this connection is not initially apparent and might require discovery."
        },
        "state": {
          "type": "string",
          "description": "Optional current state of the connection itself (e.g., 'open', 'closed', 'collapsed', 'jammed', 'phase-aligned'). Distinct from the blocker entity's state.",
          "examples": [
            "open",
            "closed",
            "collapsed",
            "jammed",
            "phase-aligned",
            "electrified"
          ]
        },
        "descriptionOverrideAtoB": {
          "type": "string",
          "description": "Optional specific description of the passage entrance/view when looking from Location A towards B (e.g., 'You see a dark archway leading north.'). Overrides default descriptions."
        },
        "descriptionOverrideBtoA": {
          "type": "string",
          "description": "Optional specific description of the passage entrance/view when looking from Location B towards A (e.g., 'The archway south seems to lead back to the main hall.'). Overrides default descriptions."
        }
      },
      "additionalProperties": false
    }
  }
}