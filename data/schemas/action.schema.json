{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/schemas/action.schema.json",
  "title": "Action Definition Schema",
  "description": "Defines the structure for a basic player or entity action within the game engine, including optional applicability criteria.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "id",
    "name",
    "commands",
    "requires_target"
  ],
  "properties": {
    "id": {
      "$ref": "./common.schema.json#/definitions/namespacedId",
      "description": "Unique identifier for this action definition (e.g., 'core:move', 'mod_combat:action_power_attack'). Must be namespaced."
    },
    "name": {
      "type": "string",
      "description": "The primary display name or label for the action (e.g., 'Move', 'Attack', 'Take Item'). May serve as a localization key."
    },
    "description": {
      "type": "string",
      "description": "Optional detailed description of the action, potentially used for help text or tooltips."
    },
    "commands": {
      "type": "array",
      "description": "A list of command keywords or aliases that the player can use to invoke this action (e.g., ['go', 'walk', 'move', 'north', 'n']). Used by the input parser.",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "target_type": {
      "type": "string",
      "description": "Indicates the expected type of target or parameter for this action. Required if 'requires_target' is true and the action needs a target other than 'self' or 'none'.",
      "enum": [
        "direction",
        "item_in_room",
        "entity_in_room",
        "item_in_inventory",
        "item_in_equipment",
        "location_connection",
        "self",
        "none"
      ],
      "default": "none"
    },
    "requires_target": {
      "type": "boolean",
      "description": "Indicates if the player must specify a target/parameter when invoking the action (e.g., 'move NORTH', 'take KEY'). Actions like 'look' (around) or 'inventory' might have this set to false.",
      "default": true
    },
    "applicability": {
      "type": "object",
      "description": "Optional criteria that determine if this action is applicable in a given context based on actor and target states/components.",
      "additionalProperties": false,
      "properties": {
        "requires_components": {
          "type": "array",
          "description": "Target entity must possess ALL of these components for the action to be applicable.",
          "items": {
            "type": "string",
            "description": "Component type name (e.g., 'Lockable')."
          },
          "examples": [
            [
              "Lockable",
              "Health"
            ]
          ],
          "default": []
        },
        "requires_tags": {
          "type": "array",
          "description": "Target entity must possess ALL of these tags (e.g., in ItemComponent or TagsComponent) for the action to be applicable.",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "description": "Tag name (e.g., 'key', 'metal')."
          },
          "examples": [
            [
              "key",
              "metal"
            ]
          ],
          "default": []
        },
        "requires_target_state": {
          "type": "object",
          "description": "Target entity must match ALL these state conditions for the action to be applicable. Uses 'ComponentName.propertyName': value format.",
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "boolean",
              "null"
            ]
          },
          "examples": [
            {
              "Lockable.state": "locked",
              "Openable.isOpen": false
            }
          ],
          "default": {}
        },
        "requires_actor_state": {
          "type": "object",
          "description": "Acting entity (e.g., player) must match ALL these state conditions for the action to be applicable.",
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "boolean",
              "null"
            ]
          },
          "examples": [
            {
              "Stats.stamina": 10
            }
          ],
          "default": {}
        },
        "excluded_components": {
          "type": "array",
          "description": "Action is NOT applicable if the target entity possesses ANY of these components.",
          "items": {
            "type": "string",
            "description": "Component type name."
          },
          "examples": [
            [
              "Intangible"
            ]
          ],
          "default": []
        },
        "excluded_tags": {
          "type": "array",
          "description": "Action is NOT applicable if the target entity possesses ANY of these tags.",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "description": "Tag name."
          },
          "examples": [
            [
              "invulnerable"
            ]
          ],
          "default": []
        },
        "excluded_target_state": {
          "type": "object",
          "description": "Action is NOT applicable if the target entity matches ANY of these state conditions.",
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "boolean",
              "null"
            ]
          },
          "examples": [
            {
              "StateComponent.phase": "ethereal"
            }
          ],
          "default": {}
        },
        "excluded_actor_state": {
          "type": "object",
          "description": "Action is NOT applicable if the acting entity matches ANY of these state conditions.",
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "boolean",
              "null"
            ]
          },
          "examples": [
            {
              "StateComponent.status": "stunned"
            }
          ],
          "default": {}
        }
      },
      "default": {}
    }
  },
  "if": {
    "properties": {
      "requires_target": {
        "const": true
      }
    }
  },
  "then": {
    "required": [
      "target_type"
    ],
    "properties": {
      "target_type": {
        "not": {
          "const": "none"
        },
        "description": "Required and cannot be 'none' if 'requires_target' is true. Specifies the kind of target needed."
      }
    }
  },
  "else": {
    "properties": {
      "target_type": {
        "description": "Should typically be 'none' or 'self' if 'requires_target' is false."
      }
    }
  }
}