{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/schemas/quest.schema.json",
  "title": "Quest Definition Schema",
  "description": "Defines the static structure for a single quest in the game. This includes its identification, display text keys, objectives, prerequisites, triggers, and rewards.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "id",
    "titleId",
    "descriptionId",
    "objectiveIds"
  ],
  "properties": {
    "id": {
      "$ref": "./common.schema.json#/definitions/namespacedId",
      "description": "Unique identifier for this quest definition (e.g., 'core:quest_main_01', 'side:quest_fetch_herbs'). Must be namespaced and unique across all quests."
    },
    "titleId": {
      "type": "string",
      "description": "Localization key for the quest's display title (e.g., 'quest_title_main_01'). The localization system will resolve this."
    },
    "descriptionId": {
      "type": "string",
      "description": "Localization key for the quest's descriptive text, often shown in the quest log (e.g., 'quest_desc_main_01')."
    },
    "objectiveIds": {
      "type": "array",
      "description": "An ordered list of objective definition IDs associated with this quest. Objectives define the specific tasks required to complete the quest.",
      "items": {
        "$ref": "./common.schema.json#/definitions/namespacedId",
        "description": "The unique ID of an objective definition (e.g., 'core:obj_kill_goblin_king')."
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "prerequisites": {
      "description": "Conditions that must be met before the quest can be started. Can be a single condition object, an array of conditions (all must be met), or null if none.",
      "anyOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "type": "array",
          "items": { "$ref": "#/definitions/Condition" }
        },
        {
          "type": "null"
        }
      ]
    },
    "rewards": {
      "$ref": "#/definitions/Reward",
      "description": "Optional rewards granted upon successful completion of the quest. The structure is defined minimally here; details handled by the reward system."
    },
    "startingTriggers": {
      "description": "Optional triggers that define how this quest becomes active (e.g., entering a location, talking to an NPC, completing another quest). Can be a single trigger or a list.",
      "$comment": "The specific structure of triggers is defined by the event/trigger system.",
      "anyOf": [
        {
          "$ref": "#/definitions/Trigger"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          },
          "minItems": 1,
          "description": "A list of triggers; any one can potentially start the quest."
        }
      ]
    },
    "isRepeatable": {
      "type": "boolean",
      "description": "Optional flag indicating if this quest can be completed more than once.",
      "default": false
    },
    "questGiverId": {
      "$ref": "./common.schema.json#/definitions/nullableNamespacedId",
      "description": "The ID of the entity (NPC) that gives this quest, or null if the quest starts automatically."
    }
  },
  "definitions": {
    "Condition": {
      "type": "object",
      "description": "A placeholder structure for a single prerequisite condition. Specific properties depend on the 'type'.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Identifier for the type of condition (e.g., 'quest_complete', 'player_level', 'has_item', 'game_state_flag').",
          "examples": [
            "quest_complete",
            "player_level",
            "has_item"
          ]
        }
      },
      "additionalProperties": true,
      "$comment": "Actual condition properties like 'questId', 'minLevel', 'itemId', 'flagName', 'requiredValue' would be added based on the 'type'."
    },
    "RewardItem": {
      "type": "object",
      "description": "Defines a single item reward.",
      "required": [
        "itemId"
      ],
      "properties": {
        "itemId": {
          "$ref": "./common.schema.json#/definitions/namespacedId",
          "description": "The unique ID of the item definition."
        },
        "quantity": {
          "type": "integer",
          "description": "The number of items to grant.",
          "minimum": 1,
          "default": 1
        }
      },
      "additionalProperties": false
    },
    "Reward": {
      "type": "object",
      "description": "Defines potential rewards for quest completion.",
      "properties": {
        "experience": {
          "type": "integer",
          "description": "Amount of experience points (XP) awarded.",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "description": "A list of items awarded.",
          "items": {
            "$ref": "#/definitions/RewardItem"
          }
        },
        "gameStateChanges": {
          "type": "object",
          "description": "Key-value pairs representing game state flags or variables to set upon completion.",
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "boolean"
            ]
          },
          "examples": [
            {
              "main_quest_progress": "step_2",
              "unlocked_area_west": true
            }
          ]
        },
        "currency": {
          "type": "object",
          "description": "Amounts of different currency types awarded.",
          "additionalProperties": {
            "type": "integer",
            "minimum": 0
          },
          "examples": [
            {
              "gold": 100,
              "reputation_guild": 10
            }
          ]
        }
      },
      "additionalProperties": true,
      "$comment": "Allows for future reward types (e.g., 'skill_points', 'faction_rep')."
    },
    "Trigger": {
      "type": "object",
      "description": "A placeholder structure for a single quest starting trigger. Specific properties depend on the 'type'.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Identifier for the type of trigger event (e.g., 'on_quest_complete', 'on_enter_location', 'on_interact', 'on_level_reach').",
          "examples": [
            "on_quest_complete",
            "on_enter_location",
            "on_interact"
          ]
        }
      },
      "additionalProperties": true,
      "$comment": "Actual trigger properties like 'questId', 'locationId', 'npcId', 'requiredLevel' would be added based on the 'type'."
    }
  }
}