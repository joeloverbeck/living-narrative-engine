{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/schemas/interactable-component.schema.json",
  "title": "Interactable Component Schema",
  "description": "Defines interactions possible with an entity, linking player actions to potential tests or effects.",
  "type": "object",
  "properties": {
    "interactions": {
      "type": "array",
      "description": "A list of distinct ways an actor can interact with this entity.",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/InteractionDefinition"
      }
    }
  },
  "required": [
    "interactions"
  ],
  "additionalProperties": false,
  "definitions": {
    "InteractionDefinition": {
      "type": "object",
      "description": "Defines a single interaction available on the entity.",
      "required": [
        "interactionId",
        "actionId"
      ],
      "properties": {
        "interactionId": {
          "$ref": "./common.schema.json#/definitions/namespacedId",
          "description": "Unique identifier for this specific interaction instance on the entity (e.g., 'demo:door_main_open', 'demo:lever_a_pull'). Must be unique within this component's interactions array."
        },
        "actionId": {
          "$ref": "./common.schema.json#/definitions/namespacedId",
          "description": "The ID of the Action (from action.schema.json) that triggers this interaction when performed targeting this entity (e.g., 'core:action_use', 'core:action_open', 'core:action_pull')."
        },
        "displayName": {
          "type": "string",
          "description": "Optional text (or localization key) used for UI interaction prompts (e.g., 'Open Door', 'Pull Lever')."
        },
        "conditions": {
          "type": "array",
          "description": "Optional list of conditions that must ALL be met for this interaction to be available. Uses ConditionObject structure.",
          "items": {
            "$ref": "item.schema.json#/definitions/ConditionObject"
          },
          "default": []
        },
        "testDefinitionId": {
          "$ref": "./common.schema.json#/definitions/namespacedId",
          "description": "Optional ID referencing an interaction-test.schema.json definition. If present, this test is performed when the interaction is attempted."
        },
        "directEffects": {
          "type": "array",
          "description": "Optional array of effects applied directly when the interaction is successfully attempted (if no testDefinitionId is provided). Uses Effect structure.",
          "items": {
            "$ref": "interaction-test.schema.json#/definitions/Effect"
          },
          "default": []
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "testDefinitionId"
          ],
          "not": {
            "required": [
              "directEffects"
            ]
          }
        },
        {
          "required": [
            "directEffects"
          ],
          "not": {
            "required": [
              "testDefinitionId"
            ]
          }
        },
        {
          "not": {
            "anyOf": [
              {
                "required": [
                  "testDefinitionId"
                ]
              },
              {
                "required": [
                  "directEffects"
                ]
              }
            ]
          }
        }
      ],
      "examples": [
        {
          "interactionId": "demo:lever_a_pull",
          "actionId": "core:action_use",
          "displayName": "Pull Lever",
          "testDefinitionId": "demo:test_lever_puzzle_a"
        },
        {
          "interactionId": "demo:button_simple_press",
          "actionId": "core:action_use",
          "displayName": "Press Button",
          "directEffects": [
            {
              "type": "fire_event",
              "parameters": {
                "eventName": "demo:event_button_pressed",
                "eventData": {
                  "buttonId": "demo:button_simple"
                }
              }
            }
          ]
        },
        {
          "interactionId": "demo:locked_door_open",
          "actionId": "core:action_open",
          "displayName": "Open Door",
          "conditions": [
            {
              "condition_type": "target_has_property",
              "property_path": "locked_state",
              "expected_value": false,
              "failure_message": "It's locked."
            }
          ],
          "directEffects": [
            {
              "type": "set_state",
              "parameters": {
                "new_state": "open"
              }
            }
          ]
        }
      ]
    }
  }
}